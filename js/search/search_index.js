var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.884,1,2.101]],["body/classes/DropDownView.html",[0,0.958,1,1.978,2,0.862,3,0.445,4,0.445,5,0.406,6,1.091,7,0.369,8,0.866,9,1.348,10,2.4,11,1.262,12,2.983,13,2.828,14,1.4,15,1.522,16,1.784,17,3.281,18,1.784,19,1.795,20,1.714,21,1.627,22,1.665,23,2.472,24,0.704,25,0.037,26,0.487,27,1.047,28,0.335,29,2.837,30,1.54,31,1.522,32,0.722,33,1.445,34,1.522,35,1.262,36,1.522,37,0.628,38,1.091,39,0.58,40,1.566,41,0.584,42,1.386,43,0.958,44,1.773,45,2.24,46,0.609,47,0.406,48,1.665,49,1.784,50,2.025,51,0.704,52,0.964,53,1.091,54,1.262,55,1.091,56,0.964,57,1.091,58,1.262,59,1.091,60,1.262,61,0.964,62,1.978,63,1.262,64,1.656,65,1.773,66,0.964,67,2.579,68,0.964,69,1.773,70,1.262,71,2.24,72,0.862,73,0.862,74,2.579,75,0.964,76,1.091,77,1.4,78,1.773,79,1.091,80,1.566,81,1.091,82,1.514,83,1.091,84,1.262,85,0.704,86,0.704,87,0.704,88,0.704,89,0.704,90,0.704,91,1.091,92,1.582,93,1.773,94,1.091,95,1.091,96,3.337,97,1.262,98,1.262,99,2.59,100,1.091,101,2.983,102,2.24,103,2.226,104,2.019,105,0.866,106,1.262,107,1.262,108,1.262,109,1.262,110,2.59,111,2.051,112,1.262,113,0.964,114,0.641,115,1.262,116,1.262,117,2.59,118,2.837,119,2.837,120,2.579,121,1.262,122,0.999,123,2.983,124,1.262,125,1.262,126,1.262,127,1.262,128,1.262,129,0.777,130,1.262,131,1.262,132,1.262,133,1.262,134,1.262,135,1.262,136,3.039,137,1.262,138,1.514,139,1.262,140,1.262,141,0.791,142,1.262,143,3.202,144,1.144,145,1.262,146,0.777,147,0.949,148,1.773,149,1.445,150,1.445,151,1.978,152,1.773,153,1.305,154,1.773,155,1.091,156,1.262,157,1.262,158,1.262,159,1.091,160,2.24,161,1.262,162,1.262,163,2.24,164,0.862,165,1.262,166,1.262,167,1.262,168,1.091,169,1.262,170,1.262,171,1.262,172,1.262,173,1.262,174,1.262,175,1.262,176,1.262,177,2.24,178,1.262,179,1.262,180,1.262,181,2.051,182,2.051,183,1.262,184,2.051,185,1.262,186,1.26,187,2.277,188,1.773,189,2.051,190,0.487,191,2.051,192,1.566,193,1.262,194,1.262,195,1.262,196,0.964,197,1.262,198,1.262,199,1.262,200,1.262,201,2.579,202,1.262,203,1.262,204,1.262,205,1.262,206,1.262,207,1.262,208,1.262,209,2.051,210,2.051,211,2.051,212,1.262,213,2.051,214,1.262,215,1.262,216,1.262,217,1.262,218,1.262,219,1.091,220,1.091,221,0.964,222,1.262,223,1.262,224,0.964,225,0.862,226,1.091,227,1.091,228,1.315,229,1.262,230,1.773,231,1.091,232,0.335,233,0.964,234,0.964,235,0.445,236,1.091,237,1.091,238,1.773,239,0.949,240,1.773,241,1.091,242,1.091,243,1.773,244,1.773,245,1.091,246,2.24,247,0.862,248,1.091,249,1.091,250,1.091,251,1.091,252,1.091,253,1.091,254,1.091,255,1.091,256,1.091,257,0.964,258,0.777,259,0.533,260,1.091,261,1.091,262,0.862,263,0.704,264,1.091,265,1.091,266,1.773,267,1.773,268,0.533,269,1.091,270,1.091,271,1.091,272,1.091,273,1.091,274,1.091,275,1.091,276,0.009,277,0.014,278,0.009]],["title/classes/MenuBarView.html",[0,0.884,279,2.751]],["body/classes/MenuBarView.html",[0,0.963,2,2.046,3,1.056,4,1.056,5,0.963,7,0.877,8,1.635,9,1.378,11,2.382,13,3.46,14,2.046,19,1.912,20,2.263,21,2.224,22,2.482,24,1.672,25,0.036,26,1.156,27,1.129,28,0.796,30,1.494,32,1.056,35,2.382,37,0.695,39,0.753,41,2.097,42,1.635,43,1.244,51,1.672,64,1.378,100,2.59,104,1.844,153,1.693,186,1.812,232,0.796,233,2.287,234,2.955,268,1.266,276,0.02,277,0.026,278,0.02,279,4.288,280,3.612,281,5.17,282,4.667,283,4.667,284,3.612,285,3.612,286,3.612,287,3.612,288,3.612,289,1.494,290,3.612,291,3.347,292,3.612,293,3.612,294,3.612,295,2.996,296,3.612,297,3.612,298,3.612,299,3.612,300,3.612]],["title/interfaces/MenuItemMeta.html",[62,2.101,301,1.162]],["body/interfaces/MenuItemMeta.html",[3,0.941,4,0.941,5,0.858,7,0.782,8,1.516,25,0.036,27,1.256,28,1.151,32,0.941,61,2.74,62,3.094,64,0.858,85,1.49,86,1.49,87,1.49,88,1.49,89,1.49,90,1.49,122,1.926,141,1.94,147,2.29,192,3.554,221,3.631,228,1.356,232,0.954,239,1.236,259,2.091,262,3.343,276,0.018,277,0.024,278,0.018,301,1.128,302,1.644,303,2.671,304,5.11,305,2.863,306,2.74,307,2.767,308,2.309,309,2.45,310,2.671,311,1.644,312,2.005,313,2.958,314,2.958,315,2.039,316,2.309,317,2.309,318,2.309,319,2.309]],["title/classes/MenuItemView.html",[0,0.884,151,2.101]],["body/classes/MenuItemView.html",[0,0.964,1,1.578,2,0.87,3,0.449,4,0.449,5,0.41,6,1.102,7,0.373,8,0.873,9,1.352,10,1.78,11,1.272,12,1.274,13,2.839,14,1.411,16,1.522,17,2.607,18,1.522,19,1.798,20,1.526,21,1.388,22,1.522,24,0.711,25,0.037,26,0.492,27,1.032,28,0.339,29,2.594,30,1.545,32,0.449,33,1.153,35,1.272,37,0.63,38,1.102,39,0.584,40,1.578,41,0.59,42,1.393,43,1.06,44,1.787,45,2.254,46,0.612,47,0.41,48,1.887,49,1.792,50,2.032,51,0.711,52,0.973,53,1.102,54,1.274,55,1.102,56,0.973,57,1.102,58,1.274,59,1.102,60,1.274,61,0.973,62,2.517,63,1.274,64,1.658,65,1.787,66,0.973,67,2.594,68,0.973,69,1.787,70,1.272,71,2.254,72,0.87,73,0.87,74,2.594,75,0.973,76,1.102,77,1.411,78,1.787,79,1.102,80,1.578,81,1.102,82,1.522,83,1.102,84,1.274,85,0.711,86,0.711,87,0.711,88,0.711,89,0.711,90,0.711,91,1.102,92,1.587,93,1.787,94,1.102,95,1.102,96,3.349,97,1.274,98,1.274,99,2.607,100,1.102,101,3,102,2.254,103,2.233,104,2.029,105,0.873,106,1.274,107,1.274,108,1.274,109,1.274,110,2.607,111,2.067,112,1.274,113,0.973,114,0.647,115,1.274,116,1.274,117,2.607,118,2.851,119,2.851,120,2.594,121,1.274,122,1.006,123,3,124,1.274,125,1.274,126,1.274,127,1.274,128,1.274,129,0.784,130,1.274,131,1.274,132,1.274,133,1.274,134,1.274,135,1.274,136,3.215,137,1.274,138,1.522,139,1.274,140,1.274,141,0.798,142,1.274,143,3.461,144,1.153,145,1.274,146,0.784,147,0.956,148,1.787,149,1.455,150,1.455,151,2.29,152,1.787,153,1.365,154,1.787,155,1.102,156,1.274,157,1.274,158,1.274,159,1.102,160,2.254,161,1.274,162,1.274,163,2.254,164,0.87,165,1.274,166,1.274,167,1.274,168,1.102,169,1.274,170,1.274,171,1.274,172,1.274,173,1.274,174,1.274,175,1.274,176,1.274,177,2.254,178,1.274,179,1.274,180,2.067,181,2.067,182,2.067,183,1.274,184,2.067,185,1.274,186,1.393,187,2.29,188,1.787,189,2.067,190,0.492,191,2.067,192,1.578,193,1.274,194,1.274,195,1.274,196,0.973,197,1.274,198,1.274,199,1.274,200,3,201,2.594,202,1.274,203,1.274,204,1.274,205,1.274,206,1.274,207,1.274,208,1.274,209,2.067,210,2.067,211,2.067,212,1.274,213,2.067,214,1.274,215,1.274,216,1.274,217,1.274,218,1.274,219,1.102,220,1.102,221,0.973,222,1.274,223,1.274,224,0.973,225,0.87,226,1.102,227,1.102,228,1.323,229,1.274,230,1.787,231,1.102,232,0.339,233,0.973,234,0.973,235,0.449,236,1.102,237,1.102,238,1.787,239,0.956,240,1.787,241,1.102,242,1.102,243,1.787,244,1.787,245,1.102,246,2.254,247,0.87,248,1.102,249,1.102,250,1.102,251,1.102,252,1.102,253,1.102,254,1.102,255,1.102,256,1.102,257,0.973,258,0.784,259,0.538,260,1.102,261,1.102,262,0.87,263,0.711,264,1.102,265,1.102,266,1.787,267,1.787,268,0.538,269,1.102,270,1.102,271,1.102,272,1.102,273,1.102,274,1.102,275,1.102,276,0.009,277,0.014,278,0.009,320,2.492,321,1.536,322,1.536]],["title/interfaces/MenuItemViewSpec.html",[48,1.396,301,1.162]],["body/interfaces/MenuItemViewSpec.html",[3,0.941,4,0.941,5,0.858,7,0.782,8,1.516,9,0.858,16,1.356,18,1.356,19,1.672,21,1.236,25,0.036,26,1.031,27,1.239,28,1.285,30,1.031,37,0.621,39,0.788,41,1.661,42,1.712,43,1.153,46,0.807,47,0.858,48,1.821,49,1.356,50,1.356,105,1.128,122,1.385,141,1.031,144,2.417,146,2.667,147,2.005,149,2.417,150,2.417,153,0.941,186,1.516,190,1.031,232,1.336,235,1.428,239,1.236,259,2.205,263,2.417,276,0.018,277,0.024,278,0.018,301,1.831,302,1.644,305,2.002,306,2.74,323,1.824,324,1.516,325,2.209,326,1.821,327,2.74,328,2.74,329,2.45,330,2.767,331,2.209,332,2.039,333,2.039,334,1.824,335,1.302,336,1.824,337,2.039,338,1.128,339,0.782,340,2.209,341,1.824,342,1.49,343,1.49]],["title/interfaces/MenuOptions.html",[21,1.273,301,1.162]],["body/interfaces/MenuOptions.html",[3,0.98,4,0.98,5,0.893,7,0.814,8,1.557,9,0.893,16,1.411,18,1.411,19,1.699,21,1.706,25,0.036,26,1.073,27,1.217,28,1.251,30,1.073,37,0.634,39,0.804,41,1.706,42,1.747,43,1.184,46,0.871,47,0.893,48,1.411,49,1.411,50,1.411,105,1.86,122,1.422,141,1.073,144,1.551,146,1.711,147,1.287,149,1.551,150,1.551,153,0.98,186,1.557,190,1.073,232,1.345,235,1.718,239,1.287,259,2.138,263,1.551,276,0.019,277,0.025,278,0.019,301,1.86,302,1.711,305,2.056,323,1.898,324,1.557,325,2.269,326,1.871,327,2.814,328,2.814,329,2.516,330,2.823,331,2.269,332,2.123,333,2.123,334,1.898,335,1.329,336,1.898,337,2.123,338,1.175,339,0.814,340,2.71,341,1.898,342,1.551,343,1.551]],["title/components/NgxEditorComponent.html",[344,2.101,345,2.101]],["body/components/NgxEditorComponent.html",[0,0.712,3,0.489,4,0.489,5,0.446,7,0.648,8,0.936,9,0.446,11,1.363,14,0.948,19,0.855,22,1.863,24,1.541,25,0.036,26,1.329,27,0.759,28,0.734,32,0.489,33,1.541,35,1.94,37,0.562,39,0.67,41,1.025,42,0.587,43,1.013,46,0.479,47,0.446,64,1.238,66,1.06,68,1.06,70,2.745,72,2.352,73,0.948,75,1.06,77,1.512,80,1.06,82,0.705,92,0.855,96,3.174,103,1.759,122,0.536,129,1.94,138,1.6,153,0.489,164,1.512,186,1.627,190,1.066,225,2.152,228,0.705,232,0.369,247,2.506,262,2.152,276,0.009,277,0.015,278,0.009,289,1.764,291,1.201,295,1.389,315,1.06,317,1.201,325,1.363,326,1.124,335,0.712,339,0.648,342,0.775,344,2.109,345,2.802,346,2.671,347,1.675,348,1.389,349,1.675,350,2.371,351,1.675,352,2.671,353,3.331,354,2.763,355,3.331,356,1.675,357,2.671,358,2.671,359,1.915,360,1.915,361,2.389,362,1.915,363,2.389,364,1.915,365,3.331,366,1.742,367,1.066,368,2.671,369,3.331,370,2.671,371,2.671,372,3.801,373,2.671,374,3.801,375,2.215,376,2.671,377,2.63,378,1.675,379,1.675,380,2.671,381,1.675,382,2.671,383,1.675,384,2.671,385,1.675,386,3.331,387,1.675,388,2.671,389,2.215,390,1.675,391,1.675,392,1.675,393,0.948,394,1.201,395,1.512,396,1.389,397,1.675,398,0.775,399,2.389,400,1.675,401,1.675,402,1.675,403,1.675,404,1.675,405,1.675,406,1.675,407,2.215,408,1.675,409,1.389,410,1.675,411,1.675,412,1.675,413,1.389,414,1.675,415,2.671,416,1.675,417,1.389,418,1.675,419,1.675,420,1.675,421,1.675,422,1.389,423,1.675,424,1.675,425,1.675,426,1.675,427,1.675,428,1.675,429,1.389,430,2.671,431,1.675,432,1.675,433,1.675,434,1.675,435,4.122,436,2.978,437,2.671,438,2.763,439,4.619,440,4.643,441,1.675,442,4.98,443,1.675,444,5.62,445,4.643,446,4.821,447,5.202,448,3.331,449,1.675,450,1.675,451,5.202,452,1.675,453,3.331,454,1.675,455,3.33,456,4.226,457,3.801,458,1.675,459,1.675,460,2.671,461,4.425,462,1.675,463,1.675,464,2.671,465,2.671,466,1.389,467,1.675,468,1.675,469,4.152,470,3.331,471,1.675,472,4.643,473,3.801,474,2.671,475,1.675,476,5.448,477,3.153,478,2.389,479,3.153,480,1.675,481,2.389,482,1.675,483,1.675,484,1.675,485,1.06,486,2.215,487,1.201,488,1.675,489,2.671,490,1.675,491,1.675,492,1.389,493,3.331,494,1.675,495,1.675,496,1.675,497,2.671,498,1.675,499,2.671,500,0.855,501,1.915,502,1.675,503,1.675,504,3.801,505,2.671,506,2.671,507,2.671,508,1.675,509,1.675,510,1.675,511,1.675,512,1.675,513,1.675,514,1.675,515,1.675,516,1.675,517,1.201,518,1.389,519,1.675,520,1.675,521,1.675,522,1.675,523,2.671,524,1.389,525,1.675,526,1.675,527,1.201,528,1.363,529,2.215,530,1.675,531,3.801,532,1.675,533,1.675,534,1.675]],["title/interfaces/NgxEditorConfig.html",[301,1.162,338,1.162]],["body/interfaces/NgxEditorConfig.html",[3,0.98,4,0.98,5,0.893,7,0.814,8,1.557,9,0.893,16,1.411,18,1.411,19,1.699,21,1.287,25,0.036,26,1.073,27,1.217,28,1.251,30,1.073,37,0.634,39,0.804,41,1.706,42,1.747,43,1.184,46,0.871,47,0.893,48,1.411,49,1.411,50,1.411,105,1.175,122,1.422,141,1.073,144,1.551,146,1.711,147,1.287,149,1.551,150,1.551,153,0.98,186,1.557,190,1.073,232,1.345,235,1.457,239,1.287,259,2.138,263,1.551,276,0.019,277,0.025,278,0.019,301,1.86,302,1.711,305,2.056,323,1.898,324,1.86,325,2.269,326,1.871,327,2.814,328,2.814,329,2.516,330,2.823,331,2.269,332,2.123,333,2.123,334,1.898,335,1.567,336,1.898,337,2.123,338,1.557,339,1.288,340,2.269,341,1.898,342,1.551,343,1.551]],["title/modules/NgxEditorModule.html",[535,1.878,536,1.693]],["body/modules/NgxEditorModule.html",[0,0.943,3,1.034,4,1.034,5,0.943,11,1.806,22,1.489,24,1.637,25,0.036,26,1.132,27,0.706,28,0.78,35,1.806,37,0.689,51,1.637,64,0.943,82,1.489,92,1.132,129,2.869,232,0.78,276,0.02,277,0.026,278,0.02,338,1.9,345,3.992,350,2.35,359,3.302,360,4.031,361,3.67,362,3.67,363,3.67,364,4.031,366,1.613,389,3.819,393,2.003,395,2.607,396,2.934,398,2.13,485,2.24,527,2.537,535,2.003,536,3.037,537,2.537,538,2.003,539,4.245,540,2.537,541,4.245,542,2.934,543,2.934,544,2.934,545,2.934,546,3.819,547,2.934,548,2.934,549,3.537,550,4.604,551,3.537,552,5.118,553,4.245,554,3.537,555,3.537,556,3.819,557,4.245,558,2.934,559,3.537,560,3.537,561,3.537]],["title/injectables/NgxEditorService.html",[377,2.101,562,2.101]],["body/injectables/NgxEditorService.html",[0,1.276,3,1.098,4,1.098,5,1.002,7,0.912,8,1.677,14,2.128,22,2.015,24,1.739,25,0.036,26,1.203,27,0.955,28,1.055,37,0.756,39,0.772,43,1.002,46,0.856,47,1.002,51,1.739,64,1.002,92,1.203,232,1.161,268,1.317,276,0.021,277,0.027,278,0.021,289,1.532,324,1.677,335,1.478,338,1.943,339,1.162,350,2.689,377,3.031,393,2.128,395,3.316,398,2.753,399,2.695,562,3.336,563,2.695,564,2.38,565,3.758,566,4.787,567,3.117,568,3.117,569,2.215,570,3.117,571,3.97,572,3.97,573,4.369,574,3.117,575,3.433,576,2.695,577,2.38]],["title/injectables/NgxEditorServiceConfig.html",[395,1.878,562,2.101]],["body/injectables/NgxEditorServiceConfig.html",[0,1.242,3,1.054,4,1.054,5,0.961,7,0.875,8,1.634,22,2.174,25,0.036,27,1.031,28,0.795,32,1.51,33,2.39,37,0.749,39,0.752,43,0.961,46,0.881,47,0.961,51,1.669,64,0.961,92,1.154,232,1.139,268,1.264,276,0.02,277,0.026,278,0.02,289,1.653,324,1.81,335,1.571,338,1.914,339,1.325,350,2.788,377,2.283,393,2.042,395,3.092,398,2.527,399,2.586,562,3.271,563,2.586,564,2.283,568,2.991,569,2.39,570,2.991,571,3.866,572,3.866,573,5.006,574,2.991,575,3.343,576,2.586,577,2.283,578,3.606,579,3.606,580,3.606]],["title/interfaces/NodeViews.html",[301,1.162,335,0.884]],["body/interfaces/NodeViews.html",[3,1.02,4,1.02,5,0.93,9,0.93,16,1.469,18,1.469,19,1.726,21,1.339,22,1.469,25,0.036,26,1.46,27,1.197,30,1.117,37,0.646,39,0.82,41,1.751,42,1.782,43,1.216,46,0.825,47,0.93,48,1.469,49,1.469,50,1.469,105,1.223,122,1.46,141,1.117,144,1.615,146,1.781,147,1.339,149,1.615,150,1.615,153,1.02,186,1.599,190,1.117,232,1.353,235,1.486,239,1.339,259,2.162,263,1.615,276,0.02,277,0.026,278,0.02,301,1.89,302,1.781,305,2.111,323,1.976,324,1.599,325,2.329,326,1.921,327,2.889,328,3.22,329,2.584,330,2.879,331,2.329,332,2.21,333,2.21,334,1.976,335,1.437,336,1.976,337,2.21,338,1.223,339,0.847,340,2.329,341,1.976,342,1.615,343,1.615,581,3.489,582,3.489]],["title/changelog.html",[583,1.791,584,1.791,585,2.346]],["body/changelog.html",[2,0.748,5,0.586,9,0.352,10,2.075,11,0.674,20,0.507,25,0.021,32,1.157,33,1.018,37,0.168,39,0.71,46,0.19,47,0.352,51,0.611,70,0.674,77,0.748,82,1.543,92,0.423,114,0.556,138,0.926,153,1.743,155,3.733,159,0.947,164,0.748,224,1.393,235,1.285,268,0.463,276,0.007,277,0.012,278,0.007,289,1.056,305,0.611,312,1.611,319,0.947,324,0.463,335,0.352,339,0.801,343,0.611,344,0.836,348,1.095,354,1.095,366,0.991,367,1.743,375,1.095,398,1.309,429,1.095,436,0.947,438,1.095,439,1.095,442,2.346,456,1.095,477,1.095,478,0.947,479,1.095,481,0.947,487,0.947,492,1.095,518,4.102,528,2.021,535,0.748,538,2.075,540,2.366,569,1.696,585,1.825,586,1.32,587,4.183,588,1.32,589,1.32,590,1.32,591,5.446,592,5.579,593,5.651,594,3.665,595,1.32,596,4.566,597,4.397,598,4.566,599,2.838,600,5.494,601,4.397,602,1.32,603,3.482,604,4.566,605,2.2,606,3.153,607,3.378,608,1.791,609,2.828,610,2.2,611,1.32,612,2.828,613,1.32,614,1.32,615,1.32,616,2.2,617,1.32,618,1.095,619,1.32,620,0.556,621,0.947,622,0.947,623,0.836,624,0.947,625,1.095,626,1.32,627,1.32,628,2.028,629,2.828,630,2.828,631,0.836,632,0.947,633,1.32,634,1.32,635,1.32,636,2.2,637,3.958,638,2.2,639,1.32,640,1.32,641,2.2,642,1.32,643,5.042,644,2.2,645,1.32,646,1.095,647,1.32,648,1.32,649,2.2,650,3.299,651,1.32,652,1.32,653,1.32,654,1.32,655,1.32,656,2.2,657,2.2,658,1.578,659,1.32,660,1.32,661,3.665,662,1.32,663,1.32,664,2.2,665,2.736,666,1.32,667,1.32,668,1.32,669,1.32,670,1.32,671,4.011,672,2.2,673,1.32,674,1.32,675,1.32,676,1.32,677,2.2,678,1.32,679,1.32,680,3.299,681,1.32,682,2.2,683,5.446,684,2.2,685,1.32,686,1.32,687,1.32,688,1.32,689,3.299,690,1.32,691,1.32,692,2.828,693,2.828,694,4.71,695,4.566,696,1.32,697,2.2,698,1.32,699,1.32,700,3.482,701,1.32,702,1.32,703,1.32,704,1.32,705,1.32,706,1.32,707,1.32,708,1.32,709,1.32,710,3.958,711,1.32,712,5.394,713,1.32,714,1.32,715,1.32,716,2.2,717,2.2,718,1.32,719,1.32,720,4.836,721,1.32,722,1.32,723,2.2,724,1.32,725,5.337,726,1.32,727,1.32,728,1.32,729,1.32,730,1.32,731,1.32,732,1.32,733,3.299,734,2.2,735,1.095,736,2.828,737,1.32,738,2.828,739,1.32,740,2.2,741,1.32,742,1.32,743,4.71,744,2.2,745,1.32,746,2.828,747,1.32,748,1.32,749,1.32,750,2.2,751,3.958,752,3.665,753,1.32,754,1.32,755,1.32,756,1.095,757,3.04,758,3.299,759,1.32,760,1.32,761,2.2,762,1.32,763,2.2,764,1.32,765,1.32,766,4.566,767,1.825,768,1.825,769,2.2,770,1.32,771,1.32,772,1.32,773,2.2,774,1.32,775,1.32,776,3.299,777,1.32,778,1.32,779,1.32,780,1.32,781,2.2,782,2.2,783,1.32,784,1.32,785,2.2,786,2.2,787,1.32,788,1.32,789,1.32,790,1.32,791,1.32,792,1.32,793,1.32,794,1.32,795,1.32,796,1.32,797,1.32,798,2.828,799,1.32,800,1.32,801,1.32,802,1.32,803,2.2,804,2.828,805,1.32,806,1.32,807,2.2,808,1.32,809,1.32,810,1.32,811,1.32,812,1.32,813,1.32,814,1.32,815,1.32,816,1.32,817,1.32,818,1.32,819,1.32,820,1.32,821,1.32,822,1.32,823,2.2,824,1.32,825,1.32,826,0.947,827,1.32,828,1.32,829,1.32,830,1.32,831,2.2,832,1.32,833,1.32,834,3.665,835,1.32,836,1.32,837,1.32,838,1.32,839,1.32,840,1.32,841,1.32,842,1.32,843,1.32,844,1.32,845,1.32,846,1.32,847,2.828,848,1.32,849,1.32,850,1.32,851,1.32,852,1.32,853,1.32,854,0.507,855,1.32,856,1.32,857,1.32,858,1.32,859,1.393,860,2.2,861,1.32,862,1.32,863,1.32,864,1.32,865,1.393,866,1.32,867,2.2,868,1.32,869,3.665,870,1.32,871,1.32,872,1.32,873,1.32,874,1.32,875,1.32,876,1.32,877,2.828,878,1.32,879,0.507,880,2.2,881,1.32,882,1.095,883,1.32,884,1.32,885,1.32,886,3.299,887,1.32,888,1.32,889,1.32,890,1.32,891,1.32,892,4.627,893,1.32,894,1.825,895,1.32,896,1.32,897,1.32,898,1.32,899,1.32,900,1.32,901,2.2,902,1.32,903,1.32,904,1.32,905,2.828,906,1.32,907,1.32,908,1.095,909,2.2,910,2.2,911,1.32,912,1.32,913,1.32,914,1.32,915,1.32,916,1.32,917,1.32,918,1.246,919,1.32,920,2.2,921,1.32,922,1.32,923,2.2,924,1.32,925,1.32,926,1.32,927,2.2,928,2.2,929,1.32,930,1.32,931,1.32,932,1.095,933,1.32,934,1.32,935,1.32,936,2.2,937,1.32,938,1.32,939,1.32,940,1.32,941,1.32,942,1.32,943,1.32,944,1.32,945,1.32,946,1.32,947,1.32,948,1.32,949,1.32,950,1.32,951,1.32,952,1.32,953,1.32,954,1.32,955,1.32,956,1.32,957,1.32,958,1.32,959,1.32,960,1.32,961,2.2,962,1.32,963,2.2,964,1.32,965,1.32,966,1.32,967,1.32,968,1.32,969,1.32,970,1.32,971,1.32,972,1.32,973,1.32,974,1.32,975,1.32,976,1.095,977,1.095,978,1.32,979,1.32,980,1.32,981,1.32,982,1.32,983,1.32,984,1.32,985,1.32,986,1.32,987,1.32,988,3.665,989,1.32,990,1.32,991,1.32,992,1.32,993,1.32,994,1.32,995,1.32,996,1.32,997,1.32,998,1.32,999,4.397,1000,1.32,1001,2.2,1002,1.32,1003,2.828,1004,1.32,1005,1.32,1006,1.32,1007,1.32,1008,1.32,1009,1.32,1010,1.32,1011,1.32,1012,1.32,1013,1.32,1014,1.32,1015,1.32,1016,1.095,1017,1.32,1018,1.32,1019,1.32,1020,2.2,1021,1.32,1022,1.32,1023,1.32,1024,2.2,1025,1.32,1026,1.32,1027,1.32,1028,3.299,1029,2.828,1030,2.2,1031,1.32,1032,1.32,1033,1.32,1034,1.095,1035,2.2,1036,1.32,1037,1.32,1038,1.32,1039,1.32,1040,1.32,1041,1.095,1042,1.095]],["title/dependencies.html",[538,2.241,658,2.028]],["body/dependencies.html",[25,0.036,276,0.026,277,0.03,278,0.026,393,2.595,394,3.286,538,2.595,1043,4.582,1044,6.248,1045,4.582,1046,4.582,1047,5.406,1048,4.484,1049,4.582,1050,4.582,1051,4.582,1052,4.582,1053,4.582,1054,4.582,1055,4.582,1056,4.582]],["title/miscellaneous/functions.html",[1057,1.444,1058,3.283]],["body/miscellaneous/functions.html",[7,1.067,20,1.687,24,2.711,25,0.035,26,1.918,28,1.291,35,2.692,57,3.782,138,1.85,276,0.025,277,0.03,278,0.025,324,1.54,338,1.54,350,2.244,398,2.034,436,3.782,481,3.782,556,4.374,564,3.34,567,3.646,576,3.152,1057,2.244,1058,3.646,1059,4.374,1060,5.273,1061,5.273,1062,3.646,1063,3.646,1064,3.646,1065,4.395,1066,3.646,1067,3.646,1068,3.646,1069,4.395]],["title/index.html",[7,0.686,583,1.791,584,1.791]],["body/index.html",[0,0.958,20,1.379,25,0.036,28,1.137,32,1.05,37,0.693,46,0.669,72,2.035,85,1.663,86,1.663,87,1.663,88,1.663,89,1.663,90,1.663,103,1.663,105,1.259,114,1.958,141,1.651,232,0.792,235,1.05,258,1.834,276,0.02,277,0.026,278,0.02,289,1.651,307,2.92,309,2.035,311,2.374,312,1.979,313,2.634,314,2.634,335,0.958,339,0.872,366,2.028,367,1.885,394,2.577,500,1.834,528,1.834,535,2.035,536,2.374,553,2.98,569,1.663,583,2.275,584,2.275,599,3.335,606,2.577,608,2.275,620,1.513,621,2.577,622,2.577,623,2.945,628,2.577,658,2.577,671,2.98,700,2.98,735,2.98,859,2.275,865,2.275,908,2.98,918,2.035,1034,3.858,1041,2.98,1042,2.98,1070,3.593,1071,3.593,1072,4.651,1073,3.593,1074,3.593,1075,3.593,1076,4.651,1077,4.651,1078,3.593,1079,3.593,1080,3.593,1081,3.593,1082,3.593,1083,3.593,1084,2.98,1085,3.698,1086,3.335,1087,3.335,1088,2.577,1089,3.593,1090,3.593,1091,2.275,1092,2.275,1093,2.98,1094,3.593,1095,3.593,1096,3.593,1097,3.593,1098,3.593,1099,3.593,1100,3.593,1101,3.593,1102,3.593,1103,3.593,1104,3.593,1105,3.593,1106,3.593,1107,3.593,1108,3.593]],["title/license.html",[583,1.791,584,1.791,1109,2.346]],["body/license.html",[25,0.028,276,0.023,277,0.028,278,0.023,485,2.579,599,2.92,603,3.377,665,4.175,882,3.377,892,3.377,1109,3.377,1110,4.072,1111,5.464,1112,4.072,1113,4.072,1114,5.034,1115,4.072,1116,4.072,1117,4.072,1118,4.072,1119,4.072,1120,4.072,1121,5.034,1122,6.167,1123,4.072,1124,4.072,1125,4.072,1126,5.464,1127,4.072,1128,5.034,1129,4.072,1130,4.072,1131,4.072,1132,4.072,1133,4.072,1134,4.072,1135,4.072,1136,4.072,1137,4.072,1138,5.034,1139,4.072,1140,4.072,1141,4.072,1142,4.072,1143,4.072,1144,4.072,1145,4.072,1146,5.034,1147,5.034,1148,4.072,1149,4.072,1150,4.072,1151,3.377,1152,4.072,1153,4.072,1154,4.072,1155,4.072,1156,4.072,1157,4.072,1158,4.072,1159,4.072,1160,4.072,1161,4.072,1162,4.072,1163,4.072,1164,4.072,1165,4.072,1166,4.072,1167,4.072,1168,4.072,1169,3.377,1170,4.072,1171,4.072,1172,4.072,1173,4.072,1174,4.072,1175,4.072,1176,4.072]],["title/modules.html",[537,3.165]],["body/modules.html",[25,0.032,276,0.028,277,0.032,278,0.028,487,3.531,536,2.514,537,3.531,607,3.531,1048,4.084,1177,4.923]],["title/overview.html",[1178,3.661]],["body/overview.html",[2,2.357,25,0.036,129,3.013,228,2.148,276,0.023,277,0.029,278,0.023,302,2.125,315,2.636,316,2.985,318,2.985,344,2.636,345,4.007,359,2.985,360,3.957,361,3.957,362,3.957,363,3.957,364,4.233,485,2.636,527,2.985,535,2.89,536,3.013,538,2.357,539,3.453,540,2.985,541,3.453,542,3.453,543,3.453,544,3.453,545,3.453,546,4.233,547,3.453,563,2.985,1178,3.453]],["title/miscellaneous/typealiases.html",[1057,1.444,1179,3.958]],["body/miscellaneous/typealiases.html",[7,1.085,16,2.243,18,2.243,25,0.034,27,1.176,49,2.243,50,2.243,190,1.431,235,1.557,259,1.567,268,1.867,276,0.025,277,0.03,278,0.025,306,3.604,323,2.532,329,3.017,330,3.223,331,2.906,334,2.532,340,2.72,1057,2.283,1180,4.472,1181,6.261]],["title/miscellaneous/variables.html",[1057,1.444,1182,3.283]],["body/miscellaneous/variables.html",[1,0.96,6,1.087,7,0.368,9,0.657,10,0.858,13,1.561,16,0.638,18,0.638,19,1.148,20,1.196,21,1.196,25,0.037,27,1.214,29,1.087,30,0.789,32,1.762,33,2.79,42,1.482,43,1.052,44,1.087,45,3.034,46,0.608,48,0.638,49,1.662,52,1.561,53,1.768,55,1.768,56,1.561,59,1.768,61,1.561,64,1.525,65,2.234,66,0.96,67,2.831,68,0.96,69,2.234,70,1.59,71,2.234,72,0.858,73,0.858,74,2.831,75,0.96,76,1.768,77,0.858,78,1.768,79,1.768,80,0.96,81,1.768,82,1.662,83,1.087,85,1.141,86,1.141,87,1.141,88,1.141,89,1.141,90,1.141,91,1.768,92,1.725,93,1.087,94,1.087,95,1.087,103,1.66,104,0.774,105,0.864,114,1.038,122,1.617,136,1.768,141,1.744,143,1.768,144,0.701,147,1.895,148,1.087,149,0.701,150,0.701,151,0.96,152,1.087,153,0.72,154,1.087,163,1.768,164,1.764,186,1.383,187,2.272,192,1.973,196,1.561,201,1.768,221,2.679,228,1.662,230,2.234,231,1.087,233,1.561,234,0.96,235,0.91,236,1.087,237,1.087,238,1.768,239,1.377,240,1.768,241,1.087,242,1.087,243,1.768,244,1.768,245,1.087,246,2.234,247,1.396,248,1.087,249,1.087,250,1.087,251,1.087,252,1.087,253,1.087,254,1.087,255,1.087,256,1.087,257,1.973,258,1.59,259,1.628,260,1.087,261,1.087,262,2.396,263,0.701,264,1.087,265,1.087,266,1.768,267,1.768,268,0.531,269,1.087,270,1.087,271,1.087,272,1.087,273,1.087,274,1.087,275,1.087,276,0.009,277,0.014,278,0.009,289,0.789,303,1.257,304,4.191,305,2.338,306,0.96,307,2.525,308,1.087,309,2.032,310,1.257,311,1.59,312,1.783,313,2.631,314,2.631,315,0.96,316,1.087,317,1.087,318,1.087,319,1.087,325,1.258,326,0.638,335,0.404,338,0.531,339,0.368,340,0.774,341,2.396,342,1.141,343,1.141,350,1.258,455,1.087,501,1.768,524,1.257,548,2.045,557,2.045,558,1.257,564,1.561,575,1.768,577,2.272,623,0.96,646,2.045,826,1.768,932,1.257,1057,0.774,1059,3.698,1062,2.045,1063,2.045,1064,1.257,1066,1.257,1067,1.257,1068,1.257,1091,0.96,1092,0.96,1182,1.257,1183,5.153,1184,3.588,1185,4.458,1186,2.465,1187,2.465,1188,3.115,1189,3.115,1190,2.465,1191,3.115,1192,1.516,1193,1.516,1194,1.516,1195,3.588,1196,3.115,1197,2.234,1198,1.516,1199,2.584,1200,3.588,1201,2.465,1202,1.516,1203,1.516,1204,1.516,1205,1.516,1206,3.115,1207,1.516,1208,1.516,1209,1.516,1210,1.516,1211,1.516,1212,1.516,1213,1.516,1214,3.115,1215,1.516,1216,2.465,1217,1.516,1218,1.516,1219,1.516,1220,1.516,1221,2.465,1222,1.516,1223,1.516,1224,1.516,1225,1.516,1226,1.516,1227,1.516,1228,1.516,1229,1.516,1230,1.516,1231,1.516,1232,1.516,1233,1.516,1234,1.516,1235,1.516,1236,1.516,1237,1.516,1238,1.516,1239,1.516,1240,1.516]],["title/additional-documentation/configuration.html",[854,1.086,879,1.086,918,1.602]],["body/additional-documentation/configuration.html",[20,1.614,25,0.036,28,1.222,32,1.229,37,0.535,46,0.738,85,1.946,86,1.946,87,1.946,88,1.946,89,1.946,90,1.946,103,1.946,105,1.474,114,2.162,141,1.774,235,1.229,258,2.147,276,0.024,277,0.029,278,0.024,289,1.643,307,3.139,309,2.382,311,2.621,312,2.128,313,2.908,314,2.908,335,1.121,339,1.021,366,1.474,367,1.346,500,2.147,569,1.946,620,1.77,621,3.016,622,3.016,623,2.663,918,2.382,1084,3.488,1085,3.682,1086,3.016,1087,3.016,1088,3.016,1091,2.663,1092,2.663,1093,3.488,1241,2.663]],["title/additional-documentation/ngmodel.html",[854,1.086,859,1.791,879,1.086]],["body/additional-documentation/ngmodel.html",[0,1.267,25,0.035,39,0.767,190,1.768,247,3.127,276,0.027,277,0.031,278,0.027,407,3.942,417,3.942,859,3.009,1016,3.942,1242,4.752,1243,4.752,1244,4.752,1245,4.752,1246,3.942]],["title/additional-documentation/history.html",[631,1.791,854,1.086,879,1.086]],["body/additional-documentation/history.html",[25,0.036,37,0.682,39,0.865,276,0.025,277,0.03,278,0.025,339,1.097,367,1.447,517,3.846,607,3.846,620,1.903,624,3.242,631,3.824,632,4.101,757,4.449,1247,3.75,1248,4.521,1249,3.75,1250,4.449,1251,4.449,1252,4.521,1253,3.846,1254,3.75]],["title/additional-documentation/shortcuts.html",[624,2.028,854,1.086,879,1.086]],["body/additional-documentation/shortcuts.html",[25,0.036,37,0.76,38,2.926,39,0.922,40,2.584,46,0.786,114,2.302,276,0.023,277,0.028,278,0.023,308,2.926,311,2.083,312,1.566,339,1.223,366,1.766,367,1.613,478,2.926,620,2.122,632,4.287,767,3.384,1197,2.926,1247,4.18,1249,4.18,1253,4.209,1255,3.384,1256,4.08,1257,4.08,1258,4.08,1259,4.08,1260,3.384,1261,4.08,1262,4.08,1263,5.04,1264,4.08,1265,4.08,1266,4.08,1267,4.08,1268,5.469,1269,4.08,1270,4.08,1271,4.08]],["title/additional-documentation/html.html",[528,1.444,854,1.086,879,1.086]],["body/additional-documentation/html.html",[25,0.036,37,0.746,39,0.853,46,0.76,47,1.409,64,1.509,104,2.253,168,3.166,276,0.025,277,0.03,278,0.025,366,1.853,367,1.692,422,4.386,528,2.995,1246,3.661,1272,4.414,1273,4.414,1274,4.414,1275,4.414,1276,4.414,1277,4.414,1278,4.414,1279,4.414,1280,4.414,1281,4.414,1282,4.414,1283,4.414,1284,4.414,1285,4.414]],["title/additional-documentation/menu-plugin.html",[289,0.789,324,0.864,854,0.946,879,0.946]],["body/additional-documentation/menu-plugin.html",[9,1.34,19,1.091,20,1.308,25,0.036,27,0.897,28,0.751,30,1.091,32,1.313,37,0.679,39,0.55,42,1.574,43,1.197,46,0.723,50,1.435,52,2.158,56,2.158,64,1.55,70,1.74,73,1.93,85,1.577,86,1.577,87,1.577,88,1.577,89,1.577,90,1.577,92,1.609,103,1.577,104,1.74,105,1.194,114,1.891,118,2.444,119,2.444,120,2.444,138,1.435,141,1.609,153,1.469,160,2.444,186,1.194,187,2.845,188,3.222,190,1.091,196,2.158,219,2.444,220,2.444,224,2.158,225,1.93,226,2.444,227,2.444,228,1.435,232,0.751,235,0.996,258,1.74,268,1.194,276,0.019,277,0.025,278,0.019,289,1.825,307,2.846,309,1.93,311,2.294,312,1.929,313,2.544,314,2.544,324,1.574,331,2.294,339,0.827,366,1.574,367,1.438,435,2.827,500,1.74,528,1.74,529,2.827,569,1.577,606,2.444,608,3.183,620,1.435,865,3.384,1085,2.444,1086,2.444,1087,2.444,1088,2.444,1091,2.158,1092,2.158,1241,2.845,1286,3.408,1287,3.408,1288,3.408,1289,3.408,1290,3.408,1291,3.408,1292,4.493,1293,2.827,1294,3.408,1295,2.827,1296,3.408,1297,3.408,1298,3.408,1299,3.408,1300,3.408,1301,3.408,1302,3.408]],["title/additional-documentation/schema.html",[46,0.407,854,1.086,879,1.086]],["body/additional-documentation/schema.html",[9,1.028,25,0.036,30,1.235,32,1.558,37,0.678,39,0.622,46,0.861,47,1.028,64,1.421,82,1.624,92,1.558,113,2.443,122,1.235,138,2.049,147,1.481,232,0.85,257,2.443,276,0.022,277,0.027,278,0.022,289,1.235,326,2.049,366,1.705,367,1.558,398,1.785,466,4.036,501,2.766,569,1.785,577,2.443,608,2.443,618,3.199,620,1.624,628,2.766,918,2.756,977,3.199,1151,3.199,1197,3.49,1199,4.422,1241,2.443,1295,3.199,1303,3.199,1304,3.199,1305,3.199,1306,3.199,1307,3.199,1308,4.866,1309,4.866,1310,4.866,1311,4.866,1312,5.599,1313,3.857,1314,3.857,1315,3.857,1316,3.857,1317,3.857,1318,3.857,1319,3.857,1320,3.857,1321,3.857,1322,3.857,1323,3.857]],["title/additional-documentation/inline-code-editor.html",[312,0.838,367,0.699,500,1.115,854,0.838,879,0.838]],["body/additional-documentation/inline-code-editor.html",[0,0.634,9,1.105,10,1.347,19,1.462,25,0.037,27,0.475,30,0.761,33,1.101,37,0.7,39,0.821,40,1.506,41,2.019,43,0.932,46,0.503,47,0.634,64,1.513,82,1.472,92,1.629,102,3.276,113,1.506,122,1.558,129,2.116,138,1.001,153,1.022,177,1.706,190,1.119,225,1.347,228,2.272,239,1.868,259,1.452,268,0.834,276,0.013,277,0.02,278,0.013,291,2.507,312,1.342,326,2.049,335,0.634,336,3.056,342,1.101,343,1.618,366,0.834,367,1.462,409,1.973,413,1.973,455,1.706,486,1.973,500,1.214,517,2.507,536,1.214,587,1.973,620,1.001,625,1.973,631,1.506,756,1.973,768,1.973,826,1.706,865,3.082,894,1.973,976,2.9,1169,1.973,1241,1.506,1250,1.973,1251,1.973,1253,3.276,1254,1.973,1255,1.973,1260,1.973,1293,1.973,1303,1.973,1304,1.973,1305,1.973,1306,1.973,1307,1.973,1324,2.379,1325,2.379,1326,2.379,1327,3.496,1328,2.379,1329,2.379,1330,3.496,1331,2.379,1332,5.396,1333,4.144,1334,2.379,1335,4.568,1336,2.379,1337,2.379,1338,2.379,1339,2.379,1340,2.379,1341,2.379,1342,2.379,1343,2.379,1344,2.379,1345,2.379,1346,2.379,1347,2.379,1348,4.144,1349,4.568,1350,2.379,1351,2.379,1352,2.379,1353,2.379,1354,2.379,1355,2.379,1356,2.379,1357,3.496,1358,2.379,1359,2.379,1360,2.379,1361,2.379,1362,2.379,1363,2.379,1364,2.379,1365,2.379,1366,2.379,1367,2.379,1368,2.379,1369,2.379,1370,4.867,1371,2.379,1372,2.379,1373,2.379,1374,2.379,1375,2.379,1376,2.379,1377,4.144,1378,2.379,1379,2.379,1380,2.379,1381,2.379,1382,2.379,1383,2.379,1384,2.379,1385,2.379,1386,2.379,1387,4.144,1388,2.379,1389,4.144,1390,2.379,1391,2.379,1392,2.379,1393,2.379,1394,2.379,1395,2.379,1396,2.379,1397,3.496,1398,2.379,1399,2.379,1400,2.379,1401,2.379,1402,2.379,1403,2.379,1404,2.379,1405,2.379,1406,2.379,1407,2.379,1408,3.496,1409,2.379,1410,2.379,1411,3.496,1412,3.496,1413,2.379,1414,2.379,1415,4.568,1416,3.496,1417,2.379,1418,2.379,1419,2.379,1420,2.379,1421,3.496,1422,2.379,1423,2.379,1424,2.379,1425,2.379,1426,2.379]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.2",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":504,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.10.0",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["100",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":315,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":826,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":892,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":603,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":316,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":317,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":318,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":319,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6px",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["9.1.9",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["90f88a5",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a9262c2",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1145,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":508,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1170,"title":{},"body":{"license.html":{}}}],["actions",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":149,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":606,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":879,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":976,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1136,"title":{},"body":{"license.html":{}}}],["angular",{"_index":671,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["appcomponent",{"_index":1243,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["applications",{"_index":1042,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1081,"title":{},"body":{"index.html":{}}}],["area",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1174,"title":{},"body":{"license.html":{}}}],["around",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":334,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1123,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1163,"title":{},"body":{"license.html":{}}}],["auto",{"_index":735,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":894,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1266,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["bae2216",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1265,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basicmarks",{"_index":1309,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1308,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1287,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["blur",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":307,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":343,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":540,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{}}}],["border",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["bottom",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1177,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1048,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsers",{"_index":1096,"title":{},"body":{"index.html":{}}}],["bug",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["bullet",{"_index":1092,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bullet_list",{"_index":314,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1112,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":585,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":587,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["charge",{"_index":1118,"title":{},"body":{"license.html":{}}}],["check",{"_index":932,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["chrome",{"_index":1098,"title":{},"body":{"index.html":{}}}],["ci",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1166,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":542,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":543,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":545,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":544,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1342,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":312,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_block",{"_index":1293,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1323,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1311,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockview(node",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":865,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1352,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1328,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1340,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1298,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1300,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["compatibility",{"_index":1094,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":344,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["component_template",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":346,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1329,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1144,"title":{},"body":{"license.html":{}}}],["config",{"_index":398,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{}}}],["configuration",{"_index":918,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1252,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1286,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1175,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(html);generating",{"_index":1281,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":64,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":574,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":565,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":282,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1344,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentnode",{"_index":1275,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1171,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1138,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1121,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1111,"title":{},"body":{"license.html":{}}}],["create",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":372,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["css",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":608,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d17c1dd",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1167,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["data",{"_index":1320,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1125,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1176,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":539,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["decoration",{"_index":327,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":337,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":575,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["demo",{"_index":1034,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":538,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":341,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1134,"title":{},"body":{"license.html":{}}}],["div",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["docs",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":599,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1089,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1088,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1279,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1297,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1292,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1302,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1301,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1317,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1291,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1316,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1282,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1285,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1274,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1280,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["down",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1100,"title":{},"body":{"index.html":{}}}],["edit",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":367,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor's",{"_index":768,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":378,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":548,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":551,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":396,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":564,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":579,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":578,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":580,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":566,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1087,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1306,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorstate",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1079,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1299,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1283,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["em",{"_index":310,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["emitter",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":646,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":757,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1260,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":882,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1095,"title":{},"body":{"index.html":{}}}],["example",{"_index":1241,"title":{},"body":{"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["examples",{"_index":1255,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1325,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["exporting",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":541,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1154,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1355,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1124,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["findparentnode(predicate)(state.selection",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findselectednodeoftype(type)(state.selection",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1102,"title":{},"body":{"index.html":{}}}],["firing",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1294,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1159,"title":{},"body":{"license.html":{}}}],["fix",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":382,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1143,"title":{},"body":{"license.html":{}}}],["font",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["forms",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":1083,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":549,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":550,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1117,"title":{},"body":{"license.html":{}}}],["from.marks",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["functions",{"_index":1058,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1141,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1273,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1105,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1315,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":290,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":336,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":583,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":1097,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1116,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handlebars",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["headings",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":623,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1115,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":631,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1164,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":528,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1284,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1277,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/sibiraj",{"_index":1304,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1264,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1248,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1249,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1256,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1324,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1093,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1295,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1107,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1086,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":304,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1155,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["imported",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1080,"title":{},"body":{"index.html":{}}}],["imports/variables",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1148,"title":{},"body":{"license.html":{}}}],["including",{"_index":1128,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1341,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":581,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1361,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":562,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":563,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":500,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":1242,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["inputs",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1072,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1071,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1350,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":301,"title":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":302,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1288,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ismarkactive",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":309,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":311,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1363,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1244,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":305,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":632,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1271,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":332,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1153,"title":{},"body":{"license.html":{}}}],["labels",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1312,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1346,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1168,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1165,"title":{},"body":{"license.html":{}}}],["license",{"_index":1109,"title":{"license.html":{}},"body":{"license.html":{}}}],["liftlistitem",{"_index":1258,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1262,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1129,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1156,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1354,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["list_item",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":306,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1074,"title":{},"body":{"index.html":{}}}],["manually",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["maxlengthvalidator",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["maybeescape(unit",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":289,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":279,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":294,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":62,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":151,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewspec",{"_index":48,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":340,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1067,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1158,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1132,"title":{},"body":{"license.html":{}}}],["meta",{"_index":63,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1099,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1057,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1110,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1253,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":47,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["modify",{"_index":1131,"title":{},"body":{"license.html":{}}}],["module",{"_index":535,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":537,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":552,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1290,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1101,"title":{},"body":{"index.html":{}}}],["multi",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["n",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n.type",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":625,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["newend",{"_index":1335,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1330,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1338,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1336,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1339,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngmodel",{"_index":859,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngoninit",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngx",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["ngx_editor_config_token",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":295,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":345,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":338,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":536,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["ngxeditormodule.forroot",{"_index":620,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["ngxeditorservice",{"_index":377,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":400,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":395,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["node.attrs.language",{"_index":1321,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.text",{"_index":1322,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodes",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1310,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["nodeview",{"_index":328,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":335,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1162,"title":{},"body":{"license.html":{}}}],["notable",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1146,"title":{},"body":{"license.html":{}}}],["now",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1076,"title":{},"body":{"index.html":{}}}],["null",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["obj[1",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(attrs).length",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1120,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1333,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1331,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1337,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1334,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1245,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["oninit",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["opacity",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1103,"title":{},"body":{"index.html":{}}}],["option",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ordered",{"_index":1091,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["ordered_list",{"_index":313,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1173,"title":{},"body":{"license.html":{}}}],["out",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1357,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1178,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":658,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":854,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1314,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1160,"title":{},"body":{"license.html":{}}}],["peer",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1114,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1139,"title":{},"body":{"license.html":{}}}],["person",{"_index":1119,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1140,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":569,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":324,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{}}}],["plugin.html",{"_index":1090,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":339,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["pointer",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1150,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["predicate",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1360,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":618,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["prosemirror/plugins/menu",{"_index":568,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":570,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":326,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1151,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":571,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":576,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":573,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1133,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1161,"title":{},"body":{"license.html":{}}}],["query",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["radius",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rc.0",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1251,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1303,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1247,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["registeronchange",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":380,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":296,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1358,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":547,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["restore",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1127,"title":{},"body":{"license.html":{}}}],["result",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["results",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["return",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["rewritten",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1130,"title":{},"body":{"license.html":{}}}],["root",{"_index":572,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["rxjs",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["s.github.io/ngx",{"_index":1108,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1305,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["satisfying",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1078,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1084,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1362,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":46,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["schema.marks[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1276,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.bullet_list",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1296,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1085,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1327,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["self",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1137,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["setblocktype(toggletype)(state",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1364,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["setupcommandlisteners",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1147,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1254,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":624,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1113,"title":{},"body":{"license.html":{}}}],["simple",{"_index":1070,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1259,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1263,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["software",{"_index":1122,"title":{},"body":{"license.html":{}}}],["solid",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":622,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["space",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spacing",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1257,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1261,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1063,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1062,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1181,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":350,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1066,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:174",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:189",{"_index":320,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:197",{"_index":322,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:230",{"_index":321,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:51",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:53",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:67",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":280,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":286,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":284,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":283,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":287,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":288,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":285,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":303,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1068,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":323,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":582,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1064,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1104,"title":{},"body":{"index.html":{}}}],["start",{"_index":1332,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["started",{"_index":584,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.selection",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1345,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":308,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":348,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":368,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["subject",{"_index":1142,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1135,"title":{},"body":{"license.html":{}}}],["submit",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1149,"title":{},"body":{"license.html":{}}}],["such",{"_index":1075,"title":{},"body":{"index.html":{}}}],["support",{"_index":607,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":908,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":767,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tabs",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":977,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":329,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":347,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["templateurl",{"_index":370,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["text",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["text/javascript",{"_index":1313,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1318,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["textcontent",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1326,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1351,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1359,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1356,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.forwardselection",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1348,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1349,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1246,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":181,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1347,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1353,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":292,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":293,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":297,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":300,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":291,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":299,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":298,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["title",{"_index":148,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1319,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1268,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1270,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1269,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1267,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":331,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":330,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":333,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1172,"title":{},"body":{"license.html":{}}}],["tr",{"_index":342,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":325,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1289,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transition",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":349,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["type.isinset(state.storedmarks",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1179,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":51,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1016,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1250,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upcoming",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":281,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1343,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1278,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":1307,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":665,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":756,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["usevalue",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":628,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils/flatdeep",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1182,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1073,"title":{},"body":{"index.html":{}}}],["video",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1106,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1157,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1152,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1169,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["width",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1126,"title":{},"body":{"license.html":{}}}],["work",{"_index":1082,"title":{},"body":{"index.html":{}}}],["working",{"_index":1272,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapinlist(type)(state",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["writevalue",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1041,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1077,"title":{},"body":{"index.html":{}}}],["yes",{"_index":567,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":546,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:53\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; updates: {}; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nconst isListItem = (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n};\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:189\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:189\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; update: (state: any) => void; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\nconst isListItem = (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n};\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!value) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins,\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n  }\n\n  ngOnInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')]\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../menu.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const predicate = (n: ProsemirrorNode) => n.type === type;\n  const node = findSelectedNodeOfType(type)(state.selection) || findParentNode(predicate)(state.selection);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  // check if heading is active\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
