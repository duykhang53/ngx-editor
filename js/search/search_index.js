var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.887,1,2.197]],["body/classes/DropDownView.html",[0,0.956,1,2.06,2,0.904,3,0.483,4,0.443,5,0.443,6,1.136,7,0.406,8,0.928,9,1.462,10,2.503,11,1.327,12,3.079,13,2.937,14,1.466,15,1.571,16,1.885,17,3.385,18,1.885,19,1.92,20,1.818,21,1.726,22,1.76,23,2.548,24,0.745,25,0.034,26,0.525,27,0.999,28,0.372,29,2.938,30,1.649,31,1.571,32,0.783,33,1.523,34,1.571,35,1.208,36,1.571,37,0.583,38,1.136,39,0.598,40,1.633,41,0.623,42,1.479,43,0.956,44,1.842,45,1.633,46,0.406,47,1.76,48,1.885,49,2.195,50,0.745,51,1.007,52,1.136,53,1.136,54,1.309,55,1.136,56,1.007,57,1.136,58,1.136,59,1.309,60,1.136,61,1.309,62,1.007,63,2.06,64,1.309,65,1.642,66,1.842,67,1.007,68,2.673,69,1.007,70,1.842,71,1.327,72,2.324,73,0.904,74,0.904,75,2.673,76,1.007,77,1.136,78,1.466,79,1.842,80,1.136,81,1.633,82,1.136,83,1.467,84,1.136,85,1.309,86,0.745,87,0.745,88,0.745,89,0.745,90,0.745,91,0.745,92,3.451,93,1.309,94,1.309,95,2.677,96,1.136,97,3.079,98,2.06,99,2.338,100,2.116,101,0.928,102,1.309,103,1.309,104,1.309,105,1.309,106,2.677,107,2.122,108,1.309,109,1.007,110,0.623,111,1.309,112,1.309,113,2.677,114,2.938,115,2.938,116,2.673,117,1.309,118,0.987,119,3.079,120,1.309,121,1.309,122,1.309,123,1.309,124,1.515,125,1.309,126,0.818,127,1.309,128,1.309,129,1.309,130,1.309,131,1.309,132,1.309,133,3.146,134,1.309,135,1.467,136,1.309,137,1.309,138,0.783,139,1.309,140,3.313,141,1.208,142,1.309,143,0.818,144,1.011,145,1.842,146,1.523,147,1.523,148,2.06,149,1.842,150,1.407,151,1.842,152,1.136,153,1.309,154,1.309,155,1.309,156,1.136,157,2.324,158,1.309,159,1.309,160,2.324,161,0.904,162,1.309,163,1.309,164,1.309,165,1.136,166,1.309,167,1.309,168,1.309,169,1.309,170,1.309,171,1.309,172,1.309,173,1.309,174,2.324,175,1.309,176,1.309,177,1.309,178,2.122,179,2.122,180,1.309,181,0.468,182,2.122,183,1.309,184,1.346,185,2.369,186,1.842,187,2.122,188,0.443,189,2.122,190,1.633,191,1.309,192,1.309,193,1.309,194,1.007,195,1.309,196,1.309,197,1.309,198,1.309,199,2.673,200,1.309,201,1.309,202,1.309,203,1.309,204,1.309,205,1.309,206,1.309,207,2.122,208,2.122,209,2.122,210,1.309,211,2.122,212,1.309,213,1.309,214,1.309,215,1.309,216,1.136,217,1.309,218,1.136,219,1.136,220,0.904,221,1.309,222,1.309,223,1.309,224,1.309,225,0.904,226,0.904,227,1.136,228,1.136,229,1.392,230,1.309,231,1.842,232,1.136,233,0.31,234,1.007,235,1.007,236,0.483,237,1.136,238,1.136,239,1.842,240,0.928,241,1.842,242,1.136,243,1.136,244,1.842,245,1.842,246,1.136,247,2.324,248,0.904,249,1.136,250,1.136,251,1.136,252,1.136,253,1.136,254,1.136,255,1.136,256,1.136,257,1.136,258,1.007,259,0.818,260,0.572,261,1.136,262,1.136,263,0.904,264,0.745,265,1.136,266,1.136,267,1.842,268,1.842,269,0.525,270,1.136,271,1.136,272,1.136,273,1.136,274,1.136,275,1.136,276,1.136,277,0.008,278,0.013,279,0.008]],["title/classes/MenuBarView.html",[0,0.887,280,2.855]],["body/classes/MenuBarView.html",[0,0.954,2,2.123,3,1.133,4,1.04,5,1.04,7,0.954,8,1.736,9,1.489,11,2.483,13,3.578,14,2.123,19,2.041,20,2.39,21,2.349,22,2.609,24,1.749,25,0.034,26,1.234,27,1.14,28,0.874,30,1.594,32,1.133,35,2.26,37,0.642,39,0.771,41,2.215,42,1.736,43,1.233,50,1.749,65,1.366,96,2.668,100,1.921,150,1.818,184,1.923,233,0.728,234,2.365,235,3.055,269,1.234,277,0.019,278,0.025,279,0.019,280,4.399,281,3.689,282,5.281,283,4.767,284,4.767,285,3.689,286,3.689,287,3.689,288,3.689,289,3.689,290,1.594,291,3.689,292,3.447,293,3.689,294,3.689,295,3.689,296,3.073,297,3.689,298,3.689,299,3.689,300,3.689,301,3.689]],["title/interfaces/MenuItemMeta.html",[63,2.197,302,1.248]],["body/interfaces/MenuItemMeta.html",[3,0.993,4,0.912,5,0.912,7,0.836,8,1.591,25,0.034,27,1.268,28,1.255,32,0.993,62,2.8,63,3.171,65,0.836,86,1.533,87,1.533,88,1.533,89,1.533,90,1.533,91,1.533,118,1.897,138,1.897,144,2.411,190,3.656,220,3.355,229,1.4,233,0.861,240,1.177,260,2.212,263,3.496,277,0.017,278,0.022,279,0.017,302,1.177,303,1.684,304,2.693,305,5.253,306,3.001,307,2.8,308,2.847,309,2.338,310,2.514,311,2.693,312,1.684,313,1.929,314,3.049,315,3.049,316,2.072,317,2.338,318,2.338,319,2.338,320,2.072,321,2.345,322,2.693]],["title/classes/MenuItemView.html",[0,0.887,148,2.197]],["body/classes/MenuItemView.html",[0,0.962,1,1.646,2,0.913,3,0.487,4,0.447,5,0.447,6,1.147,7,0.41,8,0.935,9,1.466,10,1.862,11,1.337,12,1.322,13,2.949,14,1.478,16,1.611,17,2.695,18,1.611,19,1.923,20,1.621,21,1.475,22,1.611,24,0.752,25,0.034,26,0.531,27,0.976,28,0.376,29,2.688,30,1.655,32,0.487,33,1.217,35,1.217,37,0.585,38,1.147,39,0.602,40,1.646,41,0.63,42,1.487,43,1.056,44,1.857,45,1.646,46,0.41,47,1.993,48,1.893,49,2.202,50,0.752,51,1.017,52,1.147,53,1.147,54,1.322,55,1.147,56,1.017,57,1.147,58,1.147,59,1.322,60,1.147,61,1.322,62,1.017,63,2.618,64,1.322,65,1.643,66,1.857,67,1.017,68,2.688,69,1.017,70,1.857,71,1.337,72,2.339,73,0.913,74,0.913,75,2.688,76,1.017,77,1.147,78,1.478,79,1.857,80,1.147,81,1.646,82,1.147,83,1.475,84,1.147,85,1.322,86,0.752,87,0.752,88,0.752,89,0.752,90,0.752,91,0.752,92,3.464,93,1.322,94,1.322,95,2.695,96,1.147,97,3.097,98,2.074,99,2.346,100,2.127,101,0.935,102,1.322,103,1.322,104,1.322,105,1.322,106,2.695,107,2.139,108,1.322,109,1.017,110,0.63,111,1.322,112,1.322,113,2.695,114,2.953,115,2.953,116,2.688,117,1.322,118,0.994,119,3.097,120,1.322,121,1.322,122,1.322,123,1.322,124,1.52,125,1.322,126,0.826,127,1.322,128,1.322,129,1.322,130,1.322,131,1.322,132,1.322,133,3.327,134,1.322,135,1.475,136,1.322,137,1.322,138,0.789,139,1.322,140,3.579,141,1.217,142,1.322,143,0.826,144,1.019,145,1.857,146,1.534,147,1.534,148,2.383,149,1.857,150,1.471,151,1.857,152,1.147,153,1.322,154,1.322,155,1.322,156,1.147,157,2.339,158,1.322,159,1.322,160,2.339,161,0.913,162,1.322,163,1.322,164,1.322,165,1.147,166,1.322,167,1.322,168,1.322,169,1.322,170,1.322,171,1.322,172,1.322,173,1.322,174,2.339,175,1.322,176,1.322,177,2.139,178,2.139,179,2.139,180,1.322,181,0.471,182,2.139,183,1.322,184,1.487,185,2.383,186,1.857,187,2.139,188,0.447,189,2.139,190,1.646,191,1.322,192,1.322,193,1.322,194,1.017,195,1.322,196,1.322,197,1.322,198,3.097,199,2.688,200,1.322,201,1.322,202,1.322,203,1.322,204,1.322,205,1.322,206,1.322,207,2.139,208,2.139,209,2.139,210,1.322,211,2.139,212,1.322,213,1.322,214,1.322,215,1.322,216,1.147,217,1.322,218,1.147,219,1.147,220,0.913,221,1.322,222,1.322,223,1.322,224,1.322,225,0.913,226,0.913,227,1.147,228,1.147,229,1.401,230,1.322,231,1.857,232,1.147,233,0.313,234,1.017,235,1.017,236,0.487,237,1.147,238,1.147,239,1.857,240,0.935,241,1.857,242,1.147,243,1.147,244,1.857,245,1.857,246,1.147,247,2.339,248,0.913,249,1.147,250,1.147,251,1.147,252,1.147,253,1.147,254,1.147,255,1.147,256,1.147,257,1.147,258,1.017,259,0.826,260,0.578,261,1.147,262,1.147,263,0.913,264,0.752,265,1.147,266,1.147,267,1.857,268,1.857,269,0.531,270,1.147,271,1.147,272,1.147,273,1.147,274,1.147,275,1.147,276,1.147,277,0.008,278,0.013,279,0.008,323,2.568,324,1.587,325,1.587]],["title/interfaces/MenuItemViewSpec.html",[47,1.485,302,1.248]],["body/interfaces/MenuItemViewSpec.html",[3,1.01,4,0.927,5,0.927,7,0.851,8,1.609,9,0.927,16,1.425,18,1.425,19,1.784,21,1.305,25,0.034,26,1.1,27,1.251,28,1.41,30,1.1,37,0.574,39,0.808,41,1.754,42,1.817,43,1.143,46,0.851,47,1.914,48,1.425,49,1.425,101,1.198,118,1.357,138,1.01,141,2.53,143,2.779,144,2.117,146,2.53,147,2.53,150,1.01,181,0.834,184,1.609,188,0.927,233,1.221,236,1.533,240,1.198,260,2.34,264,2.53,277,0.017,278,0.023,279,0.017,302,1.943,303,1.713,306,2.095,307,2.833,326,1.892,327,1.478,328,2.302,329,2.095,330,2.833,331,2.833,332,2.543,333,2.872,334,2.302,335,2.108,336,2.108,337,1.892,338,1.407,339,1.892,340,2.108,341,1.198,342,0.779,343,2.302,344,1.892,345,1.559,346,1.559]],["title/interfaces/MenuOptions.html",[21,1.36,302,1.248]],["body/interfaces/MenuOptions.html",[3,1.052,4,0.965,5,0.965,7,0.886,8,1.653,9,0.965,16,1.483,18,1.483,19,1.813,21,1.801,25,0.034,26,1.145,27,1.229,28,1.373,30,1.145,37,0.586,39,0.824,41,1.801,42,1.854,43,1.174,46,0.886,47,1.483,48,1.483,49,1.483,101,1.974,118,1.394,138,1.052,141,1.623,143,1.783,144,1.359,146,1.623,147,1.623,150,1.052,181,0.901,184,1.653,188,0.965,233,1.229,236,1.845,240,1.247,260,2.269,264,1.623,277,0.018,278,0.023,279,0.018,302,1.974,303,1.783,306,2.152,326,1.97,327,1.518,328,2.364,329,2.152,330,2.909,331,2.909,332,2.612,333,2.93,334,2.364,335,2.194,336,2.194,337,1.97,338,1.436,339,1.97,340,2.194,341,1.247,342,0.811,343,2.824,344,1.97,345,1.623,346,1.623]],["title/components/NgxEditorComponent.html",[347,1.972,348,2.197]],["body/components/NgxEditorComponent.html",[0,0.685,3,0.507,4,0.465,5,0.465,7,0.685,8,0.965,9,0.465,11,1.38,14,0.949,19,0.886,22,1.927,24,1.574,25,0.034,26,1.393,27,0.75,28,0.787,32,0.507,33,1.256,35,1.803,37,0.512,39,0.674,41,1.051,42,0.6,43,0.984,46,0.427,65,1.209,67,1.057,69,1.057,71,2.835,73,2.397,74,0.949,76,1.057,78,1.524,81,1.057,83,0.654,92,3.38,98,1.057,99,1.803,118,0.507,124,1.168,126,2.169,135,1.509,150,0.507,161,1.911,181,0.483,184,1.702,188,1.175,225,0.949,226,2.69,229,0.714,233,0.325,248,2.559,263,2.188,277,0.008,278,0.014,279,0.008,290,1.868,292,1.193,296,1.374,316,1.057,318,1.193,321,0.782,328,1.38,329,1.256,338,0.747,342,0.628,345,0.782,347,1.911,348,2.851,349,2.649,350,1.374,351,1.374,352,1.649,353,2.435,354,1.649,355,2.649,356,3.321,357,2.766,358,3.321,359,1.649,360,2.649,361,2.649,362,1.916,363,1.916,364,2.401,365,1.916,366,2.401,367,1.916,368,2.766,369,1.54,370,0.936,371,2.207,372,3.321,373,2.207,374,2.649,375,3.802,376,2.649,377,3.802,378,2.207,379,2.649,380,2.67,381,1.649,382,1.649,383,2.649,384,1.649,385,2.649,386,1.649,387,2.649,388,1.649,389,3.321,390,1.649,391,2.649,392,2.207,393,1.649,394,1.649,395,1.649,396,0.859,397,1.057,398,1.524,399,1.374,400,1.649,401,0.714,402,1.649,403,2.401,404,1.649,405,2.649,406,1.649,407,2.649,408,1.649,409,1.649,410,1.649,411,1.649,412,1.649,413,2.401,414,1.649,415,1.374,416,1.374,417,1.649,418,1.649,419,1.649,420,1.649,421,1.649,422,1.649,423,1.374,424,1.649,425,2.649,426,1.649,427,1.374,428,1.649,429,1.649,430,1.649,431,1.649,432,1.374,433,1.649,434,1.649,435,1.649,436,1.649,437,1.649,438,1.649,439,1.374,440,2.649,441,1.374,442,1.649,443,1.649,444,1.649,445,4.178,446,3.012,447,2.649,448,2.766,449,4.748,450,4.674,451,1.649,452,5.086,453,2.649,454,5.699,455,4.674,456,4.86,457,5.259,458,3.321,459,1.649,460,1.649,461,5.357,462,1.649,463,3.321,464,1.649,465,3.626,466,4.287,467,3.802,468,1.649,469,1.649,470,2.649,471,4.674,472,1.649,473,1.649,474,4.674,475,3.802,476,3.321,477,2.649,478,1.649,479,5.518,480,3.168,481,2.401,482,3.168,483,1.649,484,2.401,485,1.649,486,1.649,487,1.649,488,1.057,489,4.674,490,2.766,491,1.193,492,1.649,493,2.649,494,1.649,495,1.649,496,1.374,497,3.321,498,1.649,499,1.649,500,1.649,501,2.649,502,1.649,503,2.649,504,0.859,505,1.698,506,1.649,507,1.649,508,3.802,509,2.649,510,2.649,511,2.649,512,1.649,513,1.649,514,1.649,515,1.649,516,1.649,517,1.649,518,1.649,519,1.649,520,1.649,521,1.193,522,1.374,523,1.649,524,1.649,525,2.649,526,2.207,527,1.649,528,1.649,529,2.649,530,1.374,531,1.649,532,1.374,533,1.649,534,1.649,535,1.649,536,1.649,537,1.649,538,1.649,539,1.193,540,1.38,541,2.207,542,1.649,543,3.802,544,1.649,545,1.649,546,1.649]],["title/interfaces/NgxEditorConfig.html",[302,1.248,341,1.248]],["body/interfaces/NgxEditorConfig.html",[3,1.052,4,0.965,5,0.965,7,0.886,8,1.653,9,0.965,16,1.483,18,1.483,19,1.813,21,1.359,25,0.034,26,1.145,27,1.229,28,1.373,30,1.145,37,0.586,39,0.824,41,1.801,42,1.854,43,1.174,46,0.886,47,1.483,48,1.483,49,1.483,101,1.247,118,1.394,138,1.052,141,1.623,143,1.783,144,1.359,146,1.623,147,1.623,150,1.052,181,0.901,184,1.653,188,0.965,233,1.229,236,1.564,240,1.247,260,2.269,264,1.623,277,0.018,278,0.023,279,0.018,302,1.974,303,1.783,306,2.152,326,1.97,327,1.813,328,2.364,329,2.152,330,2.909,331,2.909,332,2.612,333,2.93,334,2.364,335,2.194,336,2.194,337,1.97,338,1.694,339,1.97,340,2.194,341,1.653,342,1.284,343,2.364,344,1.97,345,1.623,346,1.623]],["title/modules/NgxEditorModule.html",[547,1.625,548,1.485]],["body/modules/NgxEditorModule.html",[0,0.934,3,1.11,4,1.019,5,1.019,11,1.882,22,1.565,24,1.713,25,0.034,26,1.208,27,0.712,28,0.856,35,1.713,37,0.637,50,1.713,65,0.934,83,1.434,124,1.11,126,2.99,233,0.712,277,0.019,278,0.024,279,0.019,341,2.016,348,4.128,353,2.449,362,3.4,363,4.151,364,3.78,365,3.78,366,3.78,367,4.151,369,1.444,392,3.917,396,1.882,398,2.706,399,3.01,401,2.037,488,2.316,539,2.612,547,1.713,548,2.632,549,2.612,550,2.079,551,3.78,552,2.316,553,4.355,554,3.01,555,3.01,556,3.01,557,3.01,558,3.917,559,3.01,560,3.01,561,3.613,562,4.702,563,3.613,564,5.228,565,3.78,566,3.613,567,3.613,568,3.917,569,4.355,570,3.01,571,3.613,572,3.613,573,3.613]],["title/injectables/NgxEditorService.html",[380,2.197,574,2.197]],["body/injectables/NgxEditorService.html",[0,1.265,3,1.179,4,1.082,5,1.082,7,0.993,8,1.78,14,2.209,22,2.118,24,1.82,25,0.034,26,1.284,27,0.964,28,1.158,37,0.7,39,0.791,43,0.993,46,0.993,50,1.82,65,0.993,124,1.179,181,0.884,233,1.061,269,1.284,277,0.02,278,0.025,279,0.02,290,1.635,327,1.635,338,1.598,341,2.063,342,1.158,353,2.802,380,3.134,396,1.999,398,3.442,401,2.633,403,2.776,574,3.449,575,2.776,576,2.46,577,3.838,578,4.889,579,3.198,580,3.198,581,2.318,582,3.198,583,4.073,584,3.535,585,4.482,586,3.198,587,3.535,588,2.776,589,2.46]],["title/injectables/NgxEditorServiceConfig.html",[398,1.972,574,2.197]],["body/injectables/NgxEditorServiceConfig.html",[0,1.232,3,1.131,4,1.039,5,1.039,7,0.953,8,1.734,22,2.286,25,0.034,27,1.041,28,0.872,32,1.621,33,2.501,37,0.693,39,0.771,43,0.953,46,0.953,50,1.746,65,0.953,124,1.131,181,0.911,233,1.041,269,1.232,277,0.019,278,0.025,279,0.019,290,1.764,327,1.764,338,1.698,341,2.031,342,1.321,353,2.905,380,2.361,396,1.918,398,3.21,401,2.416,403,2.663,574,3.382,575,2.663,576,2.361,580,3.068,581,2.501,582,3.068,583,3.966,584,3.443,585,5.136,586,3.068,587,3.443,588,2.663,589,2.361,590,3.683,591,3.683,592,3.683]],["title/interfaces/NodeViews.html",[302,1.248,338,0.967]],["body/interfaces/NodeViews.html",[3,1.095,4,1.005,5,1.005,9,1.005,16,1.544,18,1.544,19,1.842,21,1.414,22,1.544,25,0.034,26,1.558,27,1.208,30,1.192,37,0.598,39,0.841,41,1.849,42,1.891,43,1.205,46,0.922,47,1.544,48,1.544,49,1.544,101,1.298,118,1.431,138,1.095,141,1.689,143,1.856,144,1.414,146,1.689,147,1.689,150,1.095,181,0.853,184,1.697,188,1.005,233,1.236,236,1.595,240,1.298,260,2.295,264,1.689,277,0.018,278,0.024,279,0.018,302,2.006,303,1.856,306,2.209,326,2.051,327,1.558,328,2.427,329,2.209,330,2.987,331,3.329,332,2.682,333,2.988,334,2.427,335,2.284,336,2.284,337,2.051,338,1.553,339,2.051,340,2.284,341,1.298,342,0.844,343,2.427,344,2.051,345,1.689,346,1.689,593,3.563,594,3.563]],["title/changelog.html",[595,1.879,596,1.879,597,2.442]],["body/changelog.html",[2,0.749,5,0.615,9,0.367,10,2.112,11,0.678,20,0.517,25,0.019,32,1.22,33,1.335,37,0.15,39,0.769,43,0.337,46,0.337,50,0.617,71,1.136,78,0.749,83,1.457,110,0.517,124,0.4,135,0.866,150,1.863,152,3.862,156,0.941,161,0.749,181,0.318,188,0.367,225,1.256,236,1.359,269,0.435,277,0.007,278,0.011,279,0.007,290,1.102,306,0.617,313,1.536,320,0.835,321,0.617,327,0.435,338,0.367,342,0.781,346,0.617,347,0.749,351,1.085,357,1.085,369,0.865,370,1.557,378,1.085,401,1.22,416,1.085,439,1.085,446,0.941,448,1.085,449,1.085,452,2.346,466,1.085,480,1.085,481,0.941,482,1.085,484,0.941,491,0.941,496,1.085,522,4.162,540,2.069,547,0.617,550,2.285,552,2.113,581,1.74,597,1.818,598,1.302,599,3.686,600,1.302,601,1.302,602,1.302,603,5.571,604,5.736,605,5.802,606,3.671,607,1.302,608,4.6,609,4.425,610,4.751,611,3.051,612,5.571,613,4.751,614,1.302,615,3.833,616,3.296,617,2.817,618,3.515,619,2.182,620,1.302,621,1.085,622,1.302,623,5.268,624,1.302,625,1.302,626,3.436,627,3.53,628,1.302,629,1.302,630,3.972,631,1.302,632,1.302,633,2.182,634,1.302,635,1.399,636,1.302,637,0.941,638,0.678,639,1.818,640,0.941,641,0.941,642,1.302,643,1.302,644,4.6,645,2.182,646,1.805,647,2.817,648,2.182,649,1.302,650,2.817,651,1.302,652,1.302,653,1.302,654,1.302,655,1.085,656,1.302,657,0.517,658,0.941,659,0.941,660,0.835,661,0.941,662,1.085,663,1.302,664,1.302,665,2.037,666,2.817,667,2.817,668,0.835,669,0.941,670,1.302,671,1.302,672,1.302,673,2.182,674,3.972,675,2.182,676,1.302,677,1.302,678,2.182,679,1.302,680,2.182,681,1.302,682,1.085,683,1.302,684,1.302,685,2.182,686,3.296,687,1.302,688,1.302,689,1.302,690,1.302,691,1.302,692,2.182,693,2.182,694,1.578,695,1.302,696,1.302,697,3.671,698,1.302,699,1.302,700,2.182,701,2.746,702,1.302,703,1.302,704,1.302,705,1.302,706,4.067,707,2.182,708,1.302,709,1.302,710,1.302,711,1.302,712,2.182,713,1.302,714,1.302,715,3.296,716,1.302,717,2.182,718,5.521,719,2.182,720,1.302,721,1.302,722,1.302,723,1.302,724,3.296,725,1.302,726,1.302,727,2.037,728,2.037,729,4.751,730,4.6,731,1.302,732,2.182,733,1.302,734,1.302,735,3.515,736,1.302,737,1.302,738,1.302,739,1.302,740,1.302,741,1.302,742,1.302,743,1.302,744,1.302,745,3.972,746,1.302,747,5.466,748,1.302,749,1.302,750,1.302,751,2.182,752,2.182,753,1.302,754,1.302,755,4.882,756,1.302,757,1.302,758,2.182,759,1.302,760,5.406,761,1.302,762,1.302,763,1.302,764,1.302,765,1.302,766,1.302,767,1.302,768,3.296,769,2.182,770,1.085,771,2.817,772,1.302,773,2.817,774,1.302,775,2.182,776,1.302,777,1.302,778,4.751,779,2.182,780,1.302,781,2.817,782,1.302,783,1.302,784,1.302,785,2.182,786,3.671,787,1.302,788,1.302,789,1.302,790,1.085,791,3.058,792,3.296,793,1.302,794,1.302,795,2.182,796,1.302,797,2.182,798,1.302,799,1.302,800,4.6,801,1.818,802,1.818,803,2.182,804,1.302,805,1.302,806,1.302,807,2.182,808,1.302,809,1.302,810,3.296,811,1.302,812,1.302,813,1.302,814,1.302,815,2.182,816,1.302,817,1.302,818,2.182,819,2.182,820,1.302,821,1.302,822,1.302,823,1.302,824,1.302,825,1.302,826,1.302,827,1.302,828,1.302,829,1.302,830,1.302,831,2.817,832,1.302,833,1.302,834,1.302,835,1.302,836,2.182,837,2.817,838,1.302,839,1.302,840,2.182,841,1.302,842,1.302,843,1.302,844,1.302,845,1.302,846,1.302,847,1.302,848,1.302,849,1.302,850,1.302,851,1.302,852,1.302,853,1.302,854,1.302,855,1.302,856,2.182,857,1.302,858,1.302,859,0.941,860,1.302,861,1.302,862,1.302,863,1.302,864,2.182,865,1.302,866,1.302,867,3.671,868,1.302,869,1.302,870,1.302,871,1.302,872,1.302,873,1.302,874,1.302,875,1.302,876,1.302,877,1.302,878,1.302,879,1.302,880,2.817,881,1.302,882,1.302,883,1.302,884,1.302,885,1.302,886,1.302,887,0.435,888,1.302,889,1.302,890,1.302,891,1.302,892,1.399,893,2.182,894,1.302,895,1.302,896,1.302,897,1.302,898,1.399,899,1.302,900,2.182,901,1.302,902,1.302,903,1.302,904,1.302,905,1.302,906,1.302,907,1.302,908,1.302,909,2.817,910,1.302,911,0.435,912,2.182,913,1.302,914,1.085,915,1.302,916,1.302,917,3.296,918,1.302,919,1.302,920,1.302,921,1.302,922,1.302,923,4.715,924,1.302,925,1.818,926,1.302,927,1.302,928,1.302,929,1.302,930,1.302,931,1.302,932,2.182,933,1.302,934,1.302,935,1.302,936,2.817,937,1.302,938,1.302,939,1.085,940,2.182,941,2.182,942,1.302,943,1.302,944,1.302,945,1.302,946,1.302,947,1.302,948,1.302,949,1.256,950,1.302,951,2.182,952,1.302,953,1.302,954,2.182,955,1.302,956,1.302,957,1.302,958,2.182,959,2.182,960,1.302,961,1.302,962,1.302,963,1.302,964,1.302,965,1.302,966,1.302,967,2.182,968,1.302,969,1.302,970,1.302,971,1.302,972,1.302,973,1.302,974,1.302,975,1.302,976,1.302,977,1.302,978,1.302,979,1.302,980,1.302,981,1.302,982,1.302,983,1.302,984,1.302,985,1.302,986,1.302,987,1.302,988,1.302,989,1.302,990,1.302,991,1.302,992,2.182,993,1.302,994,2.182,995,1.302,996,1.302,997,1.302,998,1.302,999,1.302,1000,1.302,1001,1.302,1002,1.302,1003,1.302,1004,1.302,1005,1.302,1006,1.302,1007,1.085,1008,1.085,1009,1.302,1010,1.302,1011,1.302,1012,1.302,1013,1.302,1014,1.302,1015,1.302,1016,1.302,1017,1.302,1018,1.302,1019,3.671,1020,1.302,1021,1.302,1022,1.302,1023,1.302,1024,1.302,1025,1.302,1026,1.302,1027,1.302,1028,1.302,1029,1.302,1030,4.425,1031,1.302,1032,2.182,1033,1.302,1034,2.817,1035,1.302,1036,1.302,1037,1.302,1038,1.302,1039,1.302,1040,1.302,1041,1.302,1042,1.302,1043,1.302,1044,1.302,1045,1.302,1046,1.302,1047,1.085,1048,1.302,1049,1.302,1050,1.302,1051,2.182,1052,1.302,1053,1.302,1054,1.302,1055,2.182,1056,1.302,1057,1.302,1058,1.302,1059,3.296,1060,2.817,1061,2.182,1062,1.302,1063,1.302,1064,1.302,1065,1.085,1066,2.182,1067,1.302,1068,1.302,1069,1.302,1070,1.302,1071,1.302,1072,1.085,1073,1.085]],["title/dependencies.html",[550,2.351,694,2.12]],["body/dependencies.html",[25,0.034,277,0.024,278,0.028,279,0.024,396,2.438,397,3,550,2.693,1074,4.68,1075,6.383,1076,3.899,1077,4.68,1078,4.6,1079,3.993,1080,4.68,1081,4.68,1082,4.68,1083,4.68,1084,4.68,1085,4.68,1086,4.68,1087,4.68]],["title/miscellaneous/functions.html",[1088,1.527,1089,3.403]],["body/miscellaneous/functions.html",[7,1.161,20,1.782,24,2.837,25,0.033,26,2.047,28,1.418,35,2.554,58,3.895,135,1.782,277,0.023,278,0.028,279,0.023,327,1.501,341,1.635,353,2.338,401,1.945,446,3.895,484,3.895,568,4.488,576,3.453,579,3.74,588,3.246,1088,2.338,1089,3.74,1090,4.488,1091,5.387,1092,5.387,1093,3.74,1094,3.74,1095,3.74,1096,4.489,1097,3.74,1098,3.74,1099,3.74,1100,4.489]],["title/index.html",[7,0.758,595,1.879,596,1.879]],["body/index.html",[0,0.948,20,1.454,25,0.033,28,1.319,32,1.125,37,0.641,73,2.108,86,1.737,87,1.737,88,1.737,89,1.737,90,1.737,91,1.737,99,1.737,101,1.334,110,1.883,138,1.617,181,0.69,233,0.722,236,1.125,259,1.908,277,0.019,278,0.024,279,0.019,290,1.76,308,3.028,310,2.108,312,2.471,313,1.916,314,2.73,315,2.73,338,1.033,342,0.868,369,1.815,370,1.696,397,2.348,504,1.908,540,1.908,547,1.737,548,2.055,565,2.649,581,1.737,595,2.348,596,2.348,611,3.431,626,2.649,646,2.348,657,1.454,658,2.649,659,2.649,660,3.042,665,2.649,694,2.649,706,3.052,735,3.052,770,3.052,892,2.348,898,2.348,939,3.052,949,2.108,1065,3.953,1072,3.052,1073,3.052,1101,3.663,1102,3.663,1103,4.745,1104,3.663,1105,3.663,1106,3.663,1107,4.745,1108,4.745,1109,3.663,1110,3.663,1111,3.052,1112,3.052,1113,3.663,1114,3.052,1115,3.052,1116,3.806,1117,3.431,1118,3.431,1119,2.649,1120,3.663,1121,3.663,1122,2.108,1123,2.108,1124,3.052,1125,3.663,1126,3.663,1127,3.663,1128,3.663,1129,3.663,1130,3.663,1131,3.663,1132,3.663,1133,3.663,1134,3.663,1135,3.663,1136,3.663,1137,3.663,1138,3.663,1139,3.663]],["title/license.html",[595,1.879,596,1.879,1140,2.442]],["body/license.html",[25,0.026,277,0.021,278,0.026,279,0.021,488,2.666,611,3.007,615,3.465,701,4.283,914,3.465,923,3.465,1140,3.465,1141,4.159,1142,5.581,1143,4.159,1144,4.159,1145,5.142,1146,4.159,1147,4.159,1148,4.159,1149,4.159,1150,4.159,1151,4.159,1152,5.142,1153,6.299,1154,4.159,1155,4.159,1156,4.159,1157,5.581,1158,4.159,1159,5.142,1160,4.159,1161,4.159,1162,4.159,1163,4.159,1164,4.159,1165,4.159,1166,4.159,1167,4.159,1168,4.159,1169,5.142,1170,4.159,1171,4.159,1172,4.159,1173,4.159,1174,4.159,1175,4.159,1176,4.159,1177,5.142,1178,5.142,1179,4.159,1180,4.159,1181,4.159,1182,3.465,1183,4.159,1184,4.159,1185,4.159,1186,4.159,1187,4.159,1188,4.159,1189,4.159,1190,4.159,1191,4.159,1192,4.159,1193,4.159,1194,4.159,1195,4.159,1196,4.159,1197,4.159,1198,4.159,1199,4.159,1200,3.465,1201,4.159,1202,4.159,1203,4.159,1204,4.159,1205,4.159,1206,4.159,1207,4.159]],["title/modules.html",[549,3.285]],["body/modules.html",[25,0.03,277,0.026,278,0.03,279,0.026,491,3.637,548,2.179,549,3.637,627,3.637,1079,3.637,1208,5.029]],["title/overview.html",[1209,3.784]],["body/overview.html",[2,2.447,25,0.033,126,3.14,229,2.258,277,0.022,278,0.027,279,0.022,303,2.215,316,2.726,317,3.075,319,3.075,347,2.447,348,4.143,362,3.075,363,4.076,364,4.076,365,4.076,366,4.076,367,4.36,488,2.726,539,3.075,547,2.471,548,2.612,550,2.447,551,3.075,552,2.726,553,3.542,554,3.542,555,3.542,556,3.542,557,3.542,558,4.342,559,3.542,575,3.075,1209,3.542]],["title/miscellaneous/typealiases.html",[1088,1.527,1210,4.085]],["body/miscellaneous/typealiases.html",[7,1.182,16,2.358,18,2.358,25,0.032,27,1.187,48,2.358,49,2.358,188,1.288,236,1.672,260,1.663,269,1.82,277,0.024,278,0.028,279,0.024,307,3.727,326,2.628,332,3.132,333,3.346,334,3.028,337,2.628,343,2.835,1088,2.379,1211,4.568,1212,6.396]],["title/miscellaneous/variables.html",[1088,1.527,1213,3.403]],["body/miscellaneous/variables.html",[1,0.943,6,1.064,7,0.381,9,0.681,10,0.847,13,1.548,16,0.637,18,0.637,19,1.189,20,1.219,21,1.219,25,0.034,27,1.228,29,1.064,30,0.808,32,1.89,33,2.917,42,1.623,43,1.091,44,1.064,45,3.179,47,0.637,48,1.7,51,1.548,52,1.746,53,1.746,55,1.746,56,1.548,57,1.746,60,1.746,62,1.548,65,1.498,66,2.221,67,0.943,68,2.839,69,0.943,70,2.221,71,1.258,72,2.221,73,0.847,74,0.847,75,2.839,76,0.943,77,1.746,78,0.847,79,1.746,80,1.746,81,0.943,82,1.746,83,1.558,84,1.064,86,1.145,87,1.145,88,1.145,89,1.145,90,1.145,91,1.145,99,1.685,100,0.766,101,0.879,110,0.958,118,1.593,124,1.754,133,1.746,138,1.67,140,1.746,141,0.698,144,1.968,145,1.064,146,0.698,147,0.698,148,0.943,149,1.064,150,0.742,151,1.064,160,1.746,161,1.768,181,0.614,184,1.536,185,2.704,188,0.681,190,1.969,194,1.969,199,1.746,216,1.064,220,2.428,229,1.7,231,2.221,232,1.064,234,1.548,235,0.943,236,0.944,237,1.064,238,1.064,239,1.746,240,1.295,241,1.746,242,1.064,243,1.064,244,1.746,245,1.746,246,1.064,247,2.221,248,1.39,249,1.064,250,1.064,251,1.064,252,1.064,253,1.064,254,1.064,255,1.064,256,1.064,257,1.064,258,1.969,259,1.6,260,1.694,261,1.064,262,1.064,263,2.564,264,0.698,265,1.064,266,1.064,267,1.746,268,1.746,269,0.492,270,1.064,271,1.064,272,1.064,273,1.064,274,1.064,275,1.064,276,1.064,277,0.008,278,0.012,279,0.008,290,0.808,304,1.226,305,4.321,306,2.459,307,0.943,308,2.564,309,1.064,310,2.046,311,1.226,312,1.6,313,1.694,314,2.678,315,2.678,316,0.943,317,1.064,318,1.064,319,1.064,320,0.943,321,1.861,322,2.559,328,1.6,338,0.415,341,0.536,342,0.349,343,0.766,344,2.773,345,1.456,346,1.145,353,1.258,465,1.746,505,1.548,530,1.226,560,2.012,569,2.012,570,1.226,576,1.548,587,1.746,589,2.279,660,0.943,682,2.012,859,1.746,1088,0.766,1090,3.713,1093,2.012,1094,2.012,1095,1.226,1097,1.226,1098,1.226,1099,1.226,1122,0.847,1123,0.847,1213,1.226,1214,5.081,1215,3.555,1216,4.456,1217,2.415,1218,2.415,1219,3.072,1220,3.072,1221,2.415,1222,3.072,1223,2.415,1224,2.415,1225,1.471,1226,1.471,1227,1.471,1228,3.555,1229,3.072,1230,2.221,1231,1.471,1232,2.559,1233,3.555,1234,2.415,1235,1.471,1236,1.471,1237,1.471,1238,1.471,1239,1.471,1240,3.072,1241,1.471,1242,1.471,1243,1.471,1244,1.471,1245,1.471,1246,1.471,1247,1.471,1248,1.471,1249,2.415,1250,2.415,1251,1.471,1252,1.471,1253,1.471,1254,1.471,1255,3.072,1256,1.471,1257,2.012,1258,1.471,1259,1.471,1260,1.471,1261,1.471,1262,1.471,1263,1.471,1264,1.471,1265,1.471,1266,1.471,1267,1.471,1268,1.471,1269,1.471,1270,1.471,1271,1.471,1272,1.471,1273,1.471,1274,1.471,1275,1.471,1276,1.471,1277,1.471,1278,1.471,1279,1.471]],["title/additional-documentation/configuration.html",[887,0.98,911,0.98,949,1.687]],["body/additional-documentation/configuration.html",[20,1.701,25,0.034,28,1.34,32,1.317,37,0.493,86,2.032,87,2.032,88,2.032,89,2.032,90,2.032,91,2.032,99,2.032,101,1.561,110,2.079,138,1.738,181,0.762,236,1.317,259,2.233,277,0.022,278,0.027,279,0.022,290,1.752,308,3.255,310,2.467,312,2.728,313,2.06,314,3.014,315,3.014,321,2.032,338,1.209,342,1.015,369,1.317,370,1.209,504,2.233,581,2.032,638,2.233,657,1.701,658,3.1,659,3.1,660,2.748,949,2.467,1115,3.571,1116,3.788,1117,3.1,1118,3.1,1119,3.1,1122,2.467,1123,2.467,1124,3.571]],["title/additional-documentation/ngmodel.html",[887,0.98,892,1.879,911,0.98]],["body/additional-documentation/ngmodel.html",[0,1.256,25,0.033,39,0.786,188,1.591,248,3.246,277,0.025,278,0.029,279,0.025,413,3.51,427,4.044,635,3.112,892,3.112,1047,4.044,1280,4.044,1281,4.854,1282,4.854,1283,4.044]],["title/additional-documentation/history.html",[668,1.879,887,0.98,911,0.98]],["body/additional-documentation/history.html",[25,0.033,37,0.631,39,0.887,277,0.024,278,0.028,279,0.024,342,1.094,370,1.302,521,3.962,627,3.962,657,1.833,661,3.34,668,3.954,669,4.224,791,4.564,1284,3.847,1285,4.618,1286,3.847,1287,4.564,1288,4.564,1289,4.618,1290,3.962,1291,3.847]],["title/additional-documentation/shortcuts.html",[661,2.12,887,0.98,911,0.98]],["body/additional-documentation/shortcuts.html",[25,0.034,37,0.703,38,3.013,39,0.944,40,2.671,110,2.217,181,0.813,277,0.021,278,0.026,279,0.021,309,3.013,312,2.17,313,1.517,342,1.219,369,1.581,370,1.452,481,3.013,641,3.013,657,2.043,669,4.415,801,3.472,1230,3.013,1284,4.289,1286,4.289,1290,4.335,1292,4.167,1293,4.167,1294,4.167,1295,4.167,1296,3.472,1297,4.167,1298,4.167,1299,5.148,1300,4.167,1301,4.167,1302,4.167,1303,4.167,1304,5.586,1305,4.167,1306,4.167,1307,4.167]],["title/additional-documentation/html.html",[540,1.527,887,0.98,911,0.98]],["body/additional-documentation/html.html",[25,0.034,37,0.69,39,0.874,46,1.397,65,1.496,100,2.348,165,3.26,181,0.786,277,0.023,278,0.028,279,0.023,369,1.659,370,1.523,432,4.499,540,3.122,1283,3.756,1308,4.509,1309,4.509,1310,4.509,1311,4.509,1312,4.509,1313,4.509,1314,4.509,1315,4.509,1316,4.509,1317,4.509,1318,4.509,1319,4.509,1320,4.509,1321,4.509]],["title/additional-documentation/menu-plugin.html",[290,0.857,327,0.857,887,0.857,911,0.857]],["body/additional-documentation/menu-plugin.html",[9,1.447,19,1.162,20,1.379,25,0.034,27,0.904,28,0.823,30,1.162,32,1.408,37,0.628,39,0.562,42,1.669,43,1.186,49,1.505,51,2.227,56,2.227,65,1.536,71,1.81,74,1.999,86,1.647,87,1.647,88,1.647,89,1.647,90,1.647,91,1.647,99,1.647,100,1.81,101,1.265,110,1.819,114,2.513,115,2.513,116,2.513,124,1.576,135,1.379,138,1.576,150,1.576,157,2.513,181,0.746,184,1.265,185,2.938,186,3.315,188,0.98,194,2.227,218,2.513,219,2.513,225,1.999,226,1.999,227,2.513,228,2.513,229,1.505,233,0.685,236,1.067,259,1.81,269,1.162,277,0.018,278,0.024,279,0.018,290,1.947,308,2.952,310,1.999,312,2.387,313,1.868,314,2.638,315,2.638,321,1.647,327,1.533,334,2.387,342,0.823,369,1.408,370,1.293,445,2.895,504,1.81,540,1.81,541,2.895,581,1.647,626,2.513,638,2.387,646,3.288,657,1.379,898,3.496,1116,2.513,1117,2.513,1118,2.513,1119,2.513,1122,1.999,1123,1.999,1322,3.475,1323,3.475,1324,3.475,1325,3.475,1326,3.475,1327,3.475,1328,4.584,1329,2.895,1330,3.475,1331,2.895,1332,3.475,1333,3.475,1334,3.475,1335,3.475,1336,3.475,1337,3.475,1338,3.475]],["title/additional-documentation/schema.html",[181,0.427,887,0.98,911,0.98]],["body/additional-documentation/schema.html",[9,1.111,25,0.034,30,1.317,32,1.673,37,0.627,39,0.638,46,1.019,65,1.409,83,1.563,109,2.525,118,1.21,124,1.527,135,1.973,144,1.563,181,0.89,233,0.777,258,2.525,277,0.02,278,0.026,279,0.02,290,1.317,329,2.356,369,1.527,370,1.402,401,1.707,505,2.525,532,4.141,581,1.868,589,2.525,637,2.849,638,2.052,646,2.525,655,3.282,657,1.563,665,2.849,949,2.86,1008,3.282,1182,3.282,1230,3.594,1232,4.537,1331,3.282,1339,3.282,1340,3.282,1341,3.282,1342,3.282,1343,4.971,1344,4.971,1345,4.971,1346,4.971,1347,5.719,1348,3.939,1349,3.939,1350,3.939,1351,3.939,1352,3.939,1353,3.939,1354,3.939,1355,3.939,1356,3.939,1357,3.939,1358,3.939]],["title/additional-documentation/inline-code-editor.html",[313,0.828,370,0.641,504,1.184,887,0.76,911,0.76]],["body/additional-documentation/inline-code-editor.html",[0,0.628,9,1.194,10,1.398,19,1.56,25,0.034,27,0.479,30,0.812,33,1.152,37,0.647,39,0.841,40,1.557,41,2.132,43,0.923,46,0.628,65,1.5,83,1.417,98,2.991,109,1.557,118,1.527,124,1.597,126,2.205,135,0.964,150,1.097,174,1.756,181,0.519,188,1.007,226,1.398,229,2.388,240,1.81,260,1.541,269,0.812,277,0.012,278,0.018,279,0.012,292,2.582,313,1.3,329,2.357,338,0.685,339,3.172,345,1.152,346,1.692,369,0.746,370,1.316,415,2.024,423,2.024,465,1.756,490,2.024,504,1.265,521,2.582,548,1.052,599,1.756,637,1.756,638,1.265,641,1.756,657,0.964,662,2.024,668,1.557,790,2.024,802,2.024,859,1.756,898,3.186,925,2.024,1007,2.974,1200,2.024,1287,2.024,1288,2.024,1290,3.374,1291,2.024,1296,2.024,1329,2.024,1339,2.024,1340,2.024,1341,2.024,1342,2.024,1359,2.429,1360,2.429,1361,2.429,1362,3.57,1363,2.429,1364,2.429,1365,3.57,1366,2.429,1367,4.592,1368,4.233,1369,2.429,1370,4.666,1371,2.429,1372,2.429,1373,2.429,1374,2.429,1375,2.429,1376,2.429,1377,2.429,1378,2.429,1379,2.429,1380,2.429,1381,2.429,1382,2.429,1383,4.233,1384,4.666,1385,2.429,1386,2.429,1387,2.429,1388,2.429,1389,2.429,1390,2.429,1391,2.429,1392,3.57,1393,2.429,1394,2.429,1395,2.429,1396,2.429,1397,2.429,1398,2.429,1399,2.429,1400,2.429,1401,2.429,1402,2.429,1403,2.429,1404,2.429,1405,4.971,1406,2.429,1407,2.429,1408,2.429,1409,2.429,1410,2.429,1411,2.429,1412,4.233,1413,2.429,1414,2.429,1415,2.429,1416,2.429,1417,2.429,1418,2.429,1419,2.429,1420,2.429,1421,2.429,1422,4.233,1423,2.429,1424,4.233,1425,2.429,1426,2.429,1427,2.429,1428,2.429,1429,2.429,1430,2.429,1431,2.429,1432,3.57,1433,2.429,1434,2.429,1435,2.429,1436,2.429,1437,2.429,1438,2.429,1439,2.429,1440,2.429,1441,2.429,1442,2.429,1443,3.57,1444,2.429,1445,2.024,1446,3.57,1447,3.57,1448,2.429,1449,2.429,1450,4.666,1451,3.57,1452,2.429,1453,2.429,1454,2.429,1455,2.429,1456,3.57,1457,2.429,1458,2.429,1459,2.429,1460,2.429,1461,2.429]],["title/additional-documentation/input-rules.html",[635,1.642,640,1.852,887,0.857,911,0.857]],["body/additional-documentation/input-rules.html",[4,0.84,25,0.034,27,1.061,35,2.427,37,0.546,39,0.669,45,4.001,46,0.771,65,0.771,110,2.032,118,1.709,124,1.709,135,1.182,138,1.269,181,0.745,220,2.728,233,1.097,240,1.958,269,1.861,277,0.015,278,0.021,279,0.015,313,1.727,320,1.91,321,1.958,327,1.381,342,0.706,369,0.915,370,1.165,401,1.291,413,2.154,505,3.039,526,2.482,547,1.412,548,1.291,618,2.482,621,2.482,635,3.729,638,1.552,640,4.024,657,1.182,1122,1.714,1123,2.377,1367,4.265,1445,2.482,1462,2.979,1463,2.979,1464,2.979,1465,2.979,1466,2.979,1467,2.979,1468,2.979,1469,2.979,1470,2.979,1471,4.742,1472,4.131,1473,4.131,1474,2.979,1475,4.131,1476,2.979,1477,6.041,1478,5.378,1479,5.378,1480,5.378,1481,5.378,1482,2.979,1483,2.979,1484,4.131,1485,2.979,1486,2.979,1487,2.979,1488,4.742,1489,2.979,1490,4.131,1491,2.979,1492,2.979,1493,2.979,1494,2.979,1495,2.979,1496,2.979,1497,2.979,1498,4.131,1499,2.979,1500,2.979,1501,2.979,1502,2.979,1503,2.979,1504,2.979,1505,2.979,1506,2.979,1507,2.979,1508,2.979,1509,2.979,1510,4.131,1511,2.979,1512,2.979,1513,2.979,1514,2.979,1515,2.979,1516,2.979,1517,2.979,1518,4.131,1519,2.979,1520,2.979,1521,2.979,1522,2.979,1523,2.979,1524,2.979]],["title/additional-documentation/reactive-forms.html",[727,1.852,728,1.852,887,0.857,911,0.857]],["body/additional-documentation/reactive-forms.html",[0,1.327,25,0.034,37,0.719,83,2.035,233,1.012,277,0.021,278,0.026,279,0.021,347,2.951,350,3.451,368,3.451,369,1.272,370,1.168,371,3.451,373,3.451,396,2.671,397,3.288,441,3.451,547,1.964,548,2.222,551,2.996,552,2.655,565,3.709,584,2.996,599,2.996,639,3.451,727,2.996,728,2.996,1076,3.451,1078,3.451,1079,2.996,1111,3.451,1112,3.451,1114,4.273,1257,3.451,1280,4.985,1525,5.129,1526,5.129,1527,5.129,1528,4.142,1529,5.129,1530,4.142,1531,4.142,1532,4.142,1533,4.142,1534,4.142,1535,4.142,1536,4.142,1537,4.142]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["0",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.2",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":508,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":535,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.10.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["100",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1rem",{"_index":536,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":316,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":859,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":923,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":615,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":317,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4",{"_index":318,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["453d807",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":319,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":320,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.4",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6e13142",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["84104c2",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["9.1.9",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["90f88a5",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["9c89d2a",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a26f192",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["a9262c2",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1176,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1201,"title":{},"body":{"license.html":{}}}],["actions",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":546,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":626,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":911,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1211,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["alpha.8",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":1007,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1167,"title":{},"body":{"license.html":{}}}],["angular",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1076,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/compiler",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":396,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/forms",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/platform",{"_index":1078,"title":{},"body":{"dependencies.html":{},"additional-documentation/reactive-forms.html":{}}}],["angular/router",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":639,"title":{},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["app.component",{"_index":1528,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.html",{"_index":1531,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["app.component.scss",{"_index":1532,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["appcomponent",{"_index":1280,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/reactive-forms.html":{}}}],["applications",{"_index":1073,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1112,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["area",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1205,"title":{},"body":{"license.html":{}}}],["around",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":337,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1154,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1495,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1463,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1194,"title":{},"body":{"license.html":{}}}],["auto",{"_index":770,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":925,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1302,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1501,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1301,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1515,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1344,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1343,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1323,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":321,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1482,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1517,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":308,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":346,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":552,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["border",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1208,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1079,"title":{},"body":{"dependencies.html":{},"modules.html":{},"additional-documentation/reactive-forms.html":{}}}],["browsermodule",{"_index":1526,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["browsers",{"_index":1127,"title":{},"body":{"index.html":{}}}],["bug",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1518,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1123,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":315,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1496,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1143,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["ce00b5f",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1432,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1436,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1438,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1437,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":597,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":599,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["characters",{"_index":1505,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1149,"title":{},"body":{"license.html":{}}}],["check",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1129,"title":{},"body":{"index.html":{}}}],["ci",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1197,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1442,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":313,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1329,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1358,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1346,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1502,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1461,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":898,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1444,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1363,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1440,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1334,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1336,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1525,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["compatibility",{"_index":1125,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":735,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":347,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["component_template",{"_index":544,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":349,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1364,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1433,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1175,"title":{},"body":{"license.html":{}}}],["config",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":949,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1289,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1322,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1206,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(\"value",{"_index":1537,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["console.log(html);generating",{"_index":1317,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":586,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":283,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1311,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1202,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1169,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1152,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1142,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["corresponds",{"_index":1507,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["creates",{"_index":1504,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1514,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["css",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1443,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1487,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1198,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1493,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1355,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1156,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1207,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":551,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/reactive-forms.html":{}}}],["decoration",{"_index":330,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":340,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":587,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1462,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1065,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":550,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":573,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1456,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":542,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":545,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":344,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1165,"title":{},"body":{"license.html":{}}}],["div",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["docs",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":611,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1120,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1119,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1315,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1333,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1328,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1338,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1337,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1352,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1327,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1351,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1318,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1321,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1310,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1316,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1485,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1448,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1131,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":370,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["editor's",{"_index":802,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":567,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":372,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":382,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":563,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":576,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":591,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":590,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":592,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":578,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1118,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1342,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorcontent",{"_index":1534,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["editorinitialized",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1110,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1335,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1319,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":1476,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["em",{"_index":311,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1475,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":682,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":791,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1296,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":914,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1126,"title":{},"body":{"index.html":{}}}],["example",{"_index":638,"title":{},"body":{"changelog.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":641,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1360,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1453,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["exporting",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1185,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1155,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["findnodetype",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findnodetype(type",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1133,"title":{},"body":{"index.html":{}}}],["firing",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1330,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1190,"title":{},"body":{"license.html":{}}}],["fix",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1484,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1174,"title":{},"body":{"license.html":{}}}],["font",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":1533,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol",{"_index":1530,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formcontrol(null",{"_index":1535,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["formgroup",{"_index":1529,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["forms",{"_index":728,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["formsmodule",{"_index":1114,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["forroot",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":562,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1148,"title":{},"body":{"license.html":{}}}],["from.depth",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(i).type",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1089,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1172,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1309,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1136,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1350,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":291,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":339,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":595,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1478,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1128,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1147,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handle",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["handlebars",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1509,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":660,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1146,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":668,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1195,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":540,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1320,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1313,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1469,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1340,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1300,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1285,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1468,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1286,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1292,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1359,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1124,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1331,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1138,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1117,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":305,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1186,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["imported",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1111,"title":{},"body":{"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["imports/variables",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1179,"title":{},"body":{"license.html":{}}}],["including",{"_index":1159,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":593,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":574,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":575,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":566,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":570,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":504,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":635,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1477,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1471,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1103,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1102,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":302,"title":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":303,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1324,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ismarkactive",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":51,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":310,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":312,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1281,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":306,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":669,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1307,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":335,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1184,"title":{},"body":{"license.html":{}}}],["labels",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1347,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1199,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1196,"title":{},"body":{"license.html":{}}}],["license",{"_index":1140,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift(state",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem",{"_index":1294,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1298,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1160,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1187,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":621,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["literal",{"_index":307,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1441,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1105,"title":{},"body":{"index.html":{}}}],["manually",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1488,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1490,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1513,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["maximum",{"_index":1503,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1510,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1455,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":290,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":280,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":295,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":63,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":148,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":149,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewspec",{"_index":47,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":343,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1098,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1189,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1163,"title":{},"body":{"license.html":{}}}],["meta",{"_index":64,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1130,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1088,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1141,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1290,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":46,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1162,"title":{},"body":{"license.html":{}}}],["module",{"_index":547,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["modules",{"_index":549,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":564,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1326,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1132,"title":{},"body":{"index.html":{}}}],["multi",{"_index":367,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":662,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["nested",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/reactive-forms.html":{}}}],["newend",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngmodel",{"_index":892,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":565,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngondestroy",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngoninit",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngx_editor_config_token",{"_index":569,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":296,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":348,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":341,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":548,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["ngxeditormodule.forroot",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":380,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":398,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1356,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1492,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1357,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1491,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["nodes",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1345,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":331,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":338,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1193,"title":{},"body":{"license.html":{}}}],["notable",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1177,"title":{},"body":{"license.html":{}}}],["now",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1107,"title":{},"body":{"index.html":{}}}],["null",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":589,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(attrs).length",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1151,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":400,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1282,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["oninit",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["opacity",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1134,"title":{},"body":{"index.html":{}}}],["option",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1489,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1122,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":314,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1486,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":1204,"title":{},"body":{"license.html":{}}}],["out",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1209,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":694,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":887,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1349,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1191,"title":{},"body":{"license.html":{}}}],["peer",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1145,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1170,"title":{},"body":{"license.html":{}}}],["person",{"_index":1150,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1171,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":581,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":658,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":327,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1121,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":342,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1494,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1181,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1457,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1460,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":655,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirror/plugins/menu",{"_index":580,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":582,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":329,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1182,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":583,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":568,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":588,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":585,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1164,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1192,"title":{},"body":{"license.html":{}}}],["query",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["quote",{"_index":322,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["quotes",{"_index":1516,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rc.0",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1464,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":727,"title":{"additional-documentation/reactive-forms.html":{}},"body":{"changelog.html":{},"additional-documentation/reactive-forms.html":{}}}],["reactiveformsmodule",{"_index":1527,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["readme",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1288,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1451,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1339,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1284,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1512,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":377,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":297,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["resolvedpos",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restore",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1158,"title":{},"body":{"license.html":{}}}],["result",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["results",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{},"additional-documentation/reactive-forms.html":{}}}],["return",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1161,"title":{},"body":{"license.html":{}}}],["root",{"_index":584,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"additional-documentation/reactive-forms.html":{}}}],["rule",{"_index":1479,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":640,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1520,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1522,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1523,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1524,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1521,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1498,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1139,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1341,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1109,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1115,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":181,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks[menuitem.key",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1312,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.blockquote",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.bullet_list",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1332,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1439,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1116,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1362,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":368,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["self",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1168,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":618,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1427,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1470,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1178,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1291,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":661,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1144,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1508,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["simple",{"_index":1101,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1295,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1299,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1474,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1519,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1153,"title":{},"body":{"license.html":{}}}],["solid",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":659,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1293,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1297,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1090,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1094,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1093,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglewrap.ts",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1212,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglewrap.ts",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitem.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1097,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:167",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:182",{"_index":323,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:190",{"_index":325,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:223",{"_index":324,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:44",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:46",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:60",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":281,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":287,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":285,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":284,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":288,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":289,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":286,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":304,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1099,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":326,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":594,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1095,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1135,"title":{},"body":{"index.html":{}}}],["start",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["started",{"_index":596,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1499,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.selection",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":309,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["subject",{"_index":1173,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1166,"title":{},"body":{"license.html":{}}}],["submit",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1180,"title":{},"body":{"license.html":{}}}],["such",{"_index":1106,"title":{},"body":{"index.html":{}}}],["support",{"_index":627,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":939,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":801,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tables",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":1008,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":332,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":350,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["templateurl",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/reactive-forms.html":{}}}],["text",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1348,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1353,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1481,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1473,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1511,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1361,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1428,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1458,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1434,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1430,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1429,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1459,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.form.valuechanges.subscribe((val",{"_index":1536,"title":{},"body":{"additional-documentation/reactive-forms.html":{}}}],["this.forwardselection",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1283,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1447,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1446,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":293,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":294,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":298,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":301,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":292,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":300,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":299,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1435,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1500,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1354,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1304,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1306,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1305,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1303,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglewrap",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglewrap(type",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toolbar",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":334,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":333,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":336,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":48,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1203,"title":{},"body":{"license.html":{}}}],["tr",{"_index":345,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":328,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1325,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":1465,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["transition",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1480,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1210,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1466,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1047,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1287,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1449,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1445,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":282,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1314,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":637,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":701,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":790,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":572,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1467,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":571,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["utils/flatdeep",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/reactive-forms.html":{}}}],["validation",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1431,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":543,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1213,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1104,"title":{},"body":{"index.html":{}}}],["video",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1450,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1454,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1137,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":395,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["vulnerabilities",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1188,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1183,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1200,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1506,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1157,"title":{},"body":{"license.html":{}}}],["work",{"_index":1113,"title":{},"body":{"index.html":{}}}],["working",{"_index":1308,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapin(type)(state",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapinlist(type)(state",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1472,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1497,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1483,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":378,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1072,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1452,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1108,"title":{},"body":{"index.html":{}}}],["yes",{"_index":579,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; updates: {}; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; update: (state: any) => void; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged && this.onChange) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngOnInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n\n  blockquote {\n    padding-left: 1rem;\n    border-left: 3px solid #ddd;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.8 (2020-06-08)\nBug Fixes\n\nset active state correctly for nested lists (453d807)\nfix vulnerabilities (9c89d2a)\n\nFeatures\n\nadd blockquote support (a26f192)\n\nv5.0.0-alpha.7 (2020-06-01)\nEnhancements\n\nremove dependencies prosemirror-utils and prosemirror-tables (6e13142)\n\nBug Fixes\n\nhandle null value correctly in input (84104c2)\nfix schema usage in example app (6e13142)\n\nDocumentation\n\nadd input-rules examples (ce00b5f)\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')]\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nOptional Configuration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            findNodeType   (src/.../isNodeActive.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                        \n                            toggleWrap   (src/.../toggleWrap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  quote\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading',\n  blockquote: 'Quote'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            findNodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const node: NodeType = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleWrap.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleWrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/reactive-forms.html":{"url":"additional-documentation/reactive-forms.html","title":"additional-page - Reactive Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nReactive Forms\nModule\nimport { CommonModule } from \"@angular/common\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { NgxEditorModule } from \"ngx-editor\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule, NgxEditorModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}AppComponent\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n  styleUrls: [\"app.component.scss\"]\n})\n\nexport class AppComponent {\n  form = new FormGroup({\n    editorContent: new FormControl(null)\n  });\n\n  ngOnInit() {\n    this.form.valueChanges.subscribe((val) => {\n      console.log(\"Value Changes:\", val);\n    });\n  }\n}Template\n\n  \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
