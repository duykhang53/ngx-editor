var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.926,1,2.15]],["body/classes/DropDownView.html",[0,1.012,1,2.044,2,0.899,3,0.472,4,0.432,5,0.432,6,1.134,7,0.395,8,0.91,9,1.414,10,2.473,11,1.314,12,3.064,13,2.905,14,1.454,15,1.574,16,1.85,17,3.364,18,1.85,19,1.864,20,1.78,21,1.691,22,1.729,23,2.547,24,0.738,25,0.035,26,0.516,27,0.951,28,0.36,29,2.915,30,1.605,31,1.574,32,0.764,33,1.503,34,1.574,35,1.193,36,1.574,37,0.608,38,1.134,39,0.564,40,1.623,41,0.615,42,1.447,43,1.012,44,1.834,45,1.623,46,0.395,47,1.729,48,1.85,49,2.151,50,0.738,51,1.003,52,1.134,53,1.134,54,1.309,55,1.134,56,1.003,57,1.134,58,1.134,59,1.309,60,1.134,61,1.309,62,1.003,63,2.044,64,1.309,65,1.577,66,1.834,67,1.003,68,2.654,69,1.003,70,1.834,71,1.314,72,2.31,73,0.899,74,0.899,75,2.654,76,1.003,77,1.134,78,1.454,79,1.834,80,1.134,81,1.623,82,1.134,83,1.574,84,1.134,85,1.309,86,0.738,87,0.738,88,0.738,89,0.738,90,0.738,91,0.738,92,3.418,93,1.309,94,1.309,95,2.666,96,1.134,97,3.064,98,2.044,99,2.297,100,2.088,101,0.91,102,1.309,103,1.309,104,1.309,105,1.309,106,2.666,107,2.117,108,1.309,109,1.003,110,0.615,111,1.309,112,1.309,113,2.666,114,2.915,115,2.915,116,2.654,117,1.309,118,0.962,119,3.064,120,1.309,121,1.309,122,1.309,123,1.309,124,1.47,125,1.309,126,0.812,127,1.309,128,1.309,129,1.309,130,1.309,131,1.309,132,1.309,133,3.119,134,1.309,135,1.439,136,1.309,137,1.309,138,0.764,139,1.309,140,3.283,141,1.193,142,1.309,143,0.812,144,0.995,145,1.834,146,1.503,147,1.503,148,2.044,149,1.834,150,1.367,151,1.834,152,1.134,153,1.309,154,1.309,155,1.309,156,1.134,157,2.31,158,1.309,159,1.309,160,2.31,161,0.899,162,1.309,163,1.309,164,1.309,165,1.134,166,1.309,167,1.309,168,1.309,169,1.309,170,1.309,171,1.309,172,1.309,173,1.309,174,2.31,175,1.309,176,1.309,177,1.309,178,2.117,179,2.117,180,1.309,181,0.438,182,2.117,183,1.309,184,1.317,185,2.348,186,1.834,187,2.117,188,0.432,189,2.117,190,1.623,191,1.309,192,1.309,193,1.309,194,1.003,195,1.309,196,1.309,197,1.309,198,1.309,199,2.654,200,1.309,201,1.309,202,1.309,203,1.309,204,1.309,205,1.309,206,1.309,207,2.117,208,2.117,209,2.117,210,1.309,211,2.117,212,1.309,213,1.309,214,1.309,215,1.309,216,1.134,217,1.309,218,1.134,219,1.134,220,0.899,221,1.309,222,1.309,223,1.309,224,1.309,225,0.899,226,0.899,227,1.134,228,1.134,229,1.37,230,1.309,231,1.834,232,1.134,233,0.328,234,1.003,235,1.003,236,0.472,237,1.134,238,1.134,239,1.834,240,0.91,241,1.834,242,1.134,243,1.134,244,1.834,245,1.834,246,1.134,247,2.31,248,0.899,249,1.134,250,1.134,251,1.134,252,1.134,253,1.134,254,1.134,255,1.134,256,1.134,257,1.134,258,1.003,259,0.812,260,0.563,261,1.134,262,1.134,263,0.899,264,0.738,265,1.134,266,1.134,267,1.834,268,1.834,269,0.516,270,1.134,271,1.134,272,1.134,273,1.134,274,1.134,275,1.134,276,1.134,277,0.008,278,0.014,279,0.008]],["title/classes/MenuBarView.html",[0,0.926,280,2.805]],["body/classes/MenuBarView.html",[0,1.007,2,2.095,3,1.101,4,1.007,5,1.007,7,0.921,8,1.692,9,1.438,11,2.441,13,3.527,14,2.095,19,1.98,20,2.33,21,2.291,22,2.55,24,1.72,25,0.035,26,1.202,27,1.082,28,0.84,30,1.55,32,1.101,35,2.218,37,0.669,39,0.724,41,2.161,42,1.692,43,1.299,50,1.72,65,1.314,96,2.643,100,1.893,150,1.759,184,1.873,233,0.764,234,2.339,235,3.016,269,1.202,277,0.02,278,0.025,279,0.02,280,4.355,281,3.67,282,5.239,283,4.733,284,4.733,285,3.67,286,3.67,287,3.67,288,3.67,289,3.67,290,1.55,291,3.67,292,3.409,293,3.67,294,3.67,295,3.67,296,3.051,297,3.67,298,3.67,299,3.67,300,3.67,301,3.67]],["title/interfaces/MenuItemMeta.html",[63,2.15,302,1.206]],["body/interfaces/MenuItemMeta.html",[3,0.966,4,0.884,5,0.884,7,0.808,8,1.552,25,0.035,27,1.202,28,1.203,32,0.966,62,2.767,63,3.131,65,0.808,86,1.509,87,1.509,88,1.509,89,1.509,90,1.509,91,1.509,118,1.835,138,1.835,144,2.351,190,3.604,220,3.301,229,1.376,233,0.904,240,1.151,260,2.152,263,3.437,277,0.017,278,0.023,279,0.017,302,1.151,303,1.661,304,2.678,305,5.192,306,2.937,307,2.767,308,2.805,309,2.32,310,2.48,311,2.678,312,1.661,313,1.88,314,3.002,315,3.002,316,2.053,317,2.32,318,2.32,319,2.32,320,2.053,321,2.534,322,2.678]],["title/classes/MenuItemView.html",[0,0.926,148,2.15]],["body/classes/MenuItemView.html",[0,1.017,1,1.636,2,0.908,3,0.477,4,0.436,5,0.436,6,1.145,7,0.399,8,0.918,9,1.418,10,1.844,11,1.324,12,1.322,13,2.916,14,1.466,16,1.584,17,2.684,18,1.584,19,1.868,20,1.588,21,1.447,22,1.584,24,0.745,25,0.035,26,0.521,27,0.929,28,0.364,29,2.669,30,1.611,32,0.477,33,1.203,35,1.203,37,0.61,38,1.145,39,0.567,40,1.636,41,0.621,42,1.454,43,1.116,44,1.849,45,1.636,46,0.399,47,1.955,48,1.858,49,2.158,50,0.745,51,1.013,52,1.145,53,1.145,54,1.322,55,1.145,56,1.013,57,1.145,58,1.145,59,1.322,60,1.145,61,1.322,62,1.013,63,2.592,64,1.322,65,1.578,66,1.849,67,1.013,68,2.669,69,1.013,70,1.849,71,1.324,72,2.325,73,0.908,74,0.908,75,2.669,76,1.013,77,1.145,78,1.466,79,1.849,80,1.145,81,1.636,82,1.145,83,1.584,84,1.145,85,1.322,86,0.745,87,0.745,88,0.745,89,0.745,90,0.745,91,0.745,92,3.43,93,1.322,94,1.322,95,2.684,96,1.145,97,3.081,98,2.058,99,2.305,100,2.098,101,0.918,102,1.322,103,1.322,104,1.322,105,1.322,106,2.684,107,2.134,108,1.322,109,1.013,110,0.621,111,1.322,112,1.322,113,2.684,114,2.929,115,2.929,116,2.669,117,1.322,118,0.968,119,3.081,120,1.322,121,1.322,122,1.322,123,1.322,124,1.475,125,1.322,126,0.82,127,1.322,128,1.322,129,1.322,130,1.322,131,1.322,132,1.322,133,3.296,134,1.322,135,1.447,136,1.322,137,1.322,138,0.77,139,1.322,140,3.543,141,1.203,142,1.322,143,0.82,144,1.003,145,1.849,146,1.513,147,1.513,148,2.362,149,1.849,150,1.428,151,1.849,152,1.145,153,1.322,154,1.322,155,1.322,156,1.145,157,2.325,158,1.322,159,1.322,160,2.325,161,0.908,162,1.322,163,1.322,164,1.322,165,1.145,166,1.322,167,1.322,168,1.322,169,1.322,170,1.322,171,1.322,172,1.322,173,1.322,174,2.325,175,1.322,176,1.322,177,2.134,178,2.134,179,2.134,180,1.322,181,0.441,182,2.134,183,1.322,184,1.454,185,2.362,186,1.849,187,2.134,188,0.436,189,2.134,190,1.636,191,1.322,192,1.322,193,1.322,194,1.013,195,1.322,196,1.322,197,1.322,198,3.081,199,2.669,200,1.322,201,1.322,202,1.322,203,1.322,204,1.322,205,1.322,206,1.322,207,2.134,208,2.134,209,2.134,210,1.322,211,2.134,212,1.322,213,1.322,214,1.322,215,1.322,216,1.145,217,1.322,218,1.145,219,1.145,220,0.908,221,1.322,222,1.322,223,1.322,224,1.322,225,0.908,226,0.908,227,1.145,228,1.145,229,1.379,230,1.322,231,1.849,232,1.145,233,0.331,234,1.013,235,1.013,236,0.477,237,1.145,238,1.145,239,1.849,240,0.918,241,1.849,242,1.145,243,1.145,244,1.849,245,1.849,246,1.145,247,2.325,248,0.908,249,1.145,250,1.145,251,1.145,252,1.145,253,1.145,254,1.145,255,1.145,256,1.145,257,1.145,258,1.013,259,0.82,260,0.568,261,1.145,262,1.145,263,0.908,264,0.745,265,1.145,266,1.145,267,1.849,268,1.849,269,0.521,270,1.145,271,1.145,272,1.145,273,1.145,274,1.145,275,1.145,276,1.145,277,0.009,278,0.014,279,0.009,323,2.567,324,1.59,325,1.59]],["title/interfaces/MenuItemViewSpec.html",[47,1.441,302,1.206]],["body/interfaces/MenuItemViewSpec.html",[3,0.983,4,0.899,5,0.899,7,0.822,8,1.57,9,0.899,16,1.4,18,1.4,19,1.734,21,1.279,25,0.035,26,1.073,27,1.186,28,1.35,30,1.073,37,0.599,39,0.758,41,1.715,42,1.771,43,1.206,46,0.822,47,1.877,48,1.4,49,1.4,101,1.171,118,1.317,138,0.983,141,2.481,143,2.731,144,2.068,146,2.481,147,2.481,150,0.983,181,0.776,184,1.57,188,0.899,233,1.277,236,1.486,240,1.171,260,2.275,264,2.481,277,0.018,278,0.024,279,0.018,302,1.893,303,1.69,306,2.058,307,2.799,326,1.871,327,1.438,328,2.266,329,2.058,330,2.799,331,2.799,332,2.508,333,2.829,334,2.266,335,2.088,336,2.088,337,1.871,338,1.36,339,1.871,340,2.088,341,1.171,342,0.75,343,2.266,344,1.871,345,1.535,346,1.535]],["title/interfaces/MenuOptions.html",[21,1.317,302,1.206]],["body/interfaces/MenuOptions.html",[3,1.022,4,0.936,5,0.936,7,0.855,8,1.612,9,0.936,16,1.456,18,1.456,19,1.761,21,1.761,25,0.035,26,1.116,27,1.165,28,1.316,30,1.116,37,0.611,39,0.774,41,1.761,42,1.807,43,1.238,46,0.855,47,1.456,48,1.456,49,1.456,101,1.923,118,1.353,138,1.022,141,1.597,143,1.758,144,1.331,146,1.597,147,1.597,150,1.022,181,0.837,184,1.612,188,0.936,233,1.285,236,1.785,240,1.218,260,2.206,264,1.597,277,0.018,278,0.024,279,0.018,302,1.923,303,1.758,306,2.113,326,1.946,327,1.477,328,2.326,329,2.113,330,2.874,331,2.874,332,2.575,333,2.886,334,2.326,335,2.172,336,2.172,337,1.946,338,1.387,339,1.946,340,2.172,341,1.218,342,0.78,343,2.775,344,1.946,345,1.597,346,1.597]],["title/components/NgxEditorComponent.html",[347,2.15,348,2.15]],["body/components/NgxEditorComponent.html",[0,0.728,3,0.496,4,0.454,5,0.454,7,0.665,8,0.948,9,0.454,11,1.368,14,0.945,19,0.868,22,1.892,24,1.554,25,0.035,26,1.359,27,0.716,28,0.759,32,0.496,33,1.242,35,1.777,37,0.535,39,0.635,41,1.035,42,0.592,43,1.041,46,0.415,65,1.167,67,1.055,69,1.055,71,2.788,73,2.37,74,0.945,76,1.055,78,1.514,81,1.055,83,0.707,92,3.35,98,1.055,99,1.777,118,0.496,124,1.138,126,2.141,135,1.481,150,0.496,161,1.894,181,0.453,184,1.663,188,1.139,225,0.945,226,2.656,229,0.707,233,0.345,248,2.529,263,2.166,277,0.009,278,0.014,279,0.009,290,1.815,292,1.192,296,1.376,316,1.055,318,1.192,321,0.854,328,1.368,329,1.242,338,0.728,342,0.607,345,0.775,347,2.114,348,2.822,349,2.651,350,1.655,351,1.376,352,1.655,353,2.399,354,1.655,355,2.651,356,3.317,357,3.317,358,3.317,359,1.655,360,2.651,361,2.651,362,1.909,363,1.909,364,2.389,365,1.909,366,2.389,367,1.909,368,3.317,369,1.633,370,0.995,371,2.651,372,3.317,373,2.651,374,2.651,375,3.793,376,2.651,377,3.793,378,2.204,379,2.651,380,2.645,381,1.655,382,1.655,383,2.651,384,1.655,385,2.651,386,1.655,387,2.651,388,1.655,389,3.317,390,1.655,391,2.651,392,2.204,393,1.655,394,1.655,395,1.655,396,0.945,397,1.192,398,1.514,399,1.376,400,1.655,401,0.707,402,1.655,403,2.389,404,1.655,405,2.651,406,1.655,407,1.655,408,1.655,409,1.655,410,1.655,411,1.655,412,1.655,413,2.389,414,1.655,415,1.376,416,1.376,417,1.655,418,1.655,419,1.655,420,1.655,421,1.655,422,1.655,423,1.376,424,1.655,425,2.651,426,1.655,427,1.376,428,1.655,429,1.655,430,1.655,431,1.655,432,1.376,433,1.655,434,1.655,435,1.655,436,1.655,437,1.655,438,1.655,439,1.376,440,2.651,441,1.655,442,1.655,443,1.655,444,1.655,445,4.145,446,2.989,447,2.651,448,2.757,449,4.702,450,4.652,451,1.655,452,5.031,453,2.651,454,5.656,455,4.652,456,4.834,457,5.225,458,3.317,459,1.655,460,1.655,461,5.321,462,1.655,463,3.317,464,1.655,465,3.591,466,4.252,467,3.793,468,1.655,469,1.655,470,2.651,471,4.652,472,1.655,473,1.655,474,4.652,475,3.793,476,3.317,477,2.651,478,1.655,479,5.479,480,3.153,481,2.389,482,3.153,483,1.655,484,2.389,485,1.655,486,1.655,487,1.655,488,1.055,489,4.652,490,2.757,491,1.192,492,1.655,493,2.651,494,1.655,495,1.655,496,1.376,497,3.317,498,1.655,499,1.655,500,1.655,501,2.651,502,1.655,503,2.651,504,0.854,505,1.689,506,1.655,507,1.655,508,3.793,509,2.651,510,2.651,511,2.651,512,1.655,513,1.655,514,1.655,515,1.655,516,1.655,517,1.655,518,1.655,519,1.655,520,1.655,521,1.192,522,1.376,523,1.655,524,1.655,525,2.651,526,2.204,527,1.655,528,1.655,529,2.651,530,1.376,531,1.655,532,1.376,533,1.655,534,1.655,535,1.655,536,1.655,537,1.655,538,1.655,539,1.192,540,1.368,541,2.204,542,1.655,543,3.793,544,1.655,545,1.655,546,1.655]],["title/interfaces/NgxEditorConfig.html",[302,1.206,341,1.206]],["body/interfaces/NgxEditorConfig.html",[3,1.022,4,0.936,5,0.936,7,0.855,8,1.612,9,0.936,16,1.456,18,1.456,19,1.761,21,1.331,25,0.035,26,1.116,27,1.165,28,1.316,30,1.116,37,0.611,39,0.774,41,1.761,42,1.807,43,1.238,46,0.855,47,1.456,48,1.456,49,1.456,101,1.218,118,1.353,138,1.022,141,1.597,143,1.758,144,1.331,146,1.597,147,1.597,150,1.022,181,0.837,184,1.612,188,0.936,233,1.285,236,1.516,240,1.218,260,2.206,264,1.597,277,0.018,278,0.024,279,0.018,302,1.923,303,1.758,306,2.113,326,1.946,327,1.761,328,2.326,329,2.113,330,2.874,331,2.874,332,2.575,333,2.886,334,2.326,335,2.172,336,2.172,337,1.946,338,1.634,339,1.946,340,2.172,341,1.612,342,1.231,343,2.326,344,1.946,345,1.597,346,1.597]],["title/modules/NgxEditorModule.html",[547,1.74,548,1.581]],["body/modules/NgxEditorModule.html",[0,0.987,3,1.078,4,0.987,5,0.987,11,1.854,22,1.536,24,1.684,25,0.035,26,1.177,27,0.679,28,0.823,35,1.684,37,0.663,50,1.684,65,0.902,83,1.536,124,1.078,126,2.936,233,0.749,277,0.019,278,0.025,279,0.019,341,1.963,348,4.063,353,2.409,362,3.363,363,4.099,364,3.736,365,3.736,366,3.736,367,4.099,369,1.529,392,3.882,396,2.053,398,2.666,399,2.988,401,1.995,488,2.291,539,2.589,547,1.854,548,2.821,549,2.589,550,2.053,551,4.312,552,2.589,553,4.312,554,2.988,555,2.988,556,2.988,557,2.988,558,3.882,559,2.988,560,2.988,561,3.595,562,4.67,563,3.595,564,5.187,565,4.312,566,3.595,567,3.595,568,3.882,569,4.312,570,2.988,571,3.595,572,3.595,573,3.595]],["title/injectables/NgxEditorService.html",[380,2.15,574,2.15]],["body/injectables/NgxEditorService.html",[0,1.332,3,1.144,4,1.047,5,1.047,7,0.957,8,1.735,14,2.179,22,2.073,24,1.788,25,0.035,26,1.25,27,0.916,28,1.111,37,0.728,39,0.743,43,1.047,46,0.957,50,1.788,65,0.957,124,1.144,181,0.822,233,1.111,269,1.25,277,0.02,278,0.026,279,0.02,290,1.589,327,1.589,338,1.541,341,2.007,342,1.111,353,2.752,380,3.092,396,2.179,398,3.384,401,2.572,403,2.748,574,3.4,575,2.748,576,2.432,577,3.816,578,4.853,579,3.172,580,3.172,581,2.274,582,3.172,583,4.034,584,4.034,585,4.436,586,3.172,587,3.495,588,2.748,589,2.432]],["title/injectables/NgxEditorServiceConfig.html",[398,1.926,574,2.15]],["body/injectables/NgxEditorServiceConfig.html",[0,1.298,3,1.099,4,1.006,5,1.006,7,0.919,8,1.69,22,2.236,25,0.035,27,0.988,28,0.838,32,1.57,33,2.453,37,0.721,39,0.724,43,1.006,46,0.919,50,1.717,65,0.919,124,1.099,181,0.847,233,1.09,269,1.2,277,0.02,278,0.025,279,0.02,290,1.714,327,1.714,338,1.637,341,1.977,342,1.266,353,2.853,380,2.335,396,2.092,398,3.158,401,2.363,403,2.639,574,3.336,575,2.639,576,2.335,580,3.046,581,2.453,582,3.046,583,3.93,584,3.93,585,5.077,586,3.046,587,3.405,588,2.639,589,2.335,590,3.664,591,3.664,592,3.664]],["title/interfaces/NodeViews.html",[302,1.206,338,0.926]],["body/interfaces/NodeViews.html",[3,1.064,4,0.973,5,0.973,9,0.973,16,1.515,18,1.515,19,1.789,21,1.385,22,1.515,25,0.035,26,1.516,27,1.146,30,1.161,37,0.623,39,0.789,41,1.808,42,1.842,43,1.271,46,0.89,47,1.515,48,1.515,49,1.515,101,1.268,118,1.388,138,1.064,141,1.662,143,1.829,144,1.385,146,1.662,147,1.662,150,1.064,181,0.794,184,1.655,188,0.973,233,1.293,236,1.545,240,1.268,260,2.231,264,1.662,277,0.019,278,0.025,279,0.019,302,1.953,303,1.829,306,2.169,326,2.025,327,1.516,328,2.388,329,2.169,330,2.95,331,3.284,332,2.643,333,2.942,334,2.388,335,2.26,336,2.26,337,2.025,338,1.499,339,2.025,340,2.26,341,1.268,342,0.812,343,2.388,344,2.025,345,1.662,346,1.662,593,3.546,594,3.546]],["title/changelog.html",[595,1.836,596,1.836,597,2.395]],["body/changelog.html",[2,0.756,5,0.606,9,0.363,10,2.106,11,0.683,20,0.517,25,0.02,32,1.195,33,1.332,37,0.16,39,0.727,46,0.332,50,0.62,71,0.683,78,0.756,83,1.576,110,0.517,124,0.397,135,0.863,150,1.806,152,3.833,156,0.954,161,0.756,181,0.302,188,0.363,225,1.261,236,1.329,269,0.434,277,0.007,278,0.012,279,0.007,290,1.086,306,0.62,313,1.511,320,0.844,327,0.434,338,0.363,342,0.759,346,0.62,347,0.844,351,1.101,369,0.931,370,1.648,378,1.101,401,1.214,416,1.101,439,1.101,446,0.954,448,1.101,449,1.101,452,2.363,466,1.101,480,1.101,481,0.954,482,1.101,484,0.954,491,0.954,496,1.101,522,4.146,540,2.056,547,0.683,550,2.275,552,2.39,581,1.728,597,1.837,598,1.324,599,4.228,600,1.324,601,1.324,602,1.324,603,5.496,604,5.669,605,5.737,606,3.688,607,1.324,608,4.601,609,4.43,610,4.748,611,3.045,612,5.545,613,4.601,614,1.324,615,3.683,616,2.842,617,3.985,618,1.324,619,1.324,620,2.209,621,1.324,622,1.324,623,1.408,624,1.324,625,5.173,626,0.954,627,0.683,628,2.209,629,3.314,630,0.954,631,0.954,632,1.324,633,1.324,634,4.601,635,2.209,636,3.42,637,1.811,638,2.842,639,2.209,640,1.324,641,2.842,642,1.324,643,1.324,644,1.324,645,2.209,646,1.324,647,1.101,648,1.324,649,0.517,650,0.954,651,0.954,652,0.844,653,0.954,654,1.101,655,1.324,656,1.324,657,2.047,658,2.842,659,2.842,660,0.844,661,0.954,662,1.324,663,1.324,664,1.324,665,2.209,666,3.985,667,2.209,668,1.324,669,1.324,670,2.209,671,1.324,672,2.209,673,1.324,674,1.101,675,1.324,676,1.324,677,2.209,678,3.318,679,1.324,680,1.324,681,1.324,682,1.324,683,1.324,684,2.209,685,2.209,686,1.591,687,1.324,688,1.324,689,3.688,690,1.324,691,1.324,692,2.209,693,2.758,694,1.324,695,1.324,696,1.324,697,1.324,698,4.053,699,2.209,700,1.324,701,1.324,702,1.324,703,1.324,704,2.209,705,1.324,706,1.324,707,3.318,708,1.324,709,2.209,710,5.496,711,2.209,712,1.324,713,1.324,714,1.324,715,1.324,716,3.318,717,1.324,718,1.324,719,2.842,720,2.842,721,4.748,722,4.601,723,1.324,724,2.209,725,1.324,726,1.324,727,3.515,728,1.324,729,1.324,730,1.324,731,1.324,732,1.324,733,1.324,734,1.324,735,1.324,736,1.324,737,3.985,738,1.324,739,5.443,740,1.324,741,1.324,742,1.324,743,2.209,744,2.209,745,1.324,746,1.324,747,4.876,748,1.324,749,1.324,750,2.209,751,1.324,752,5.385,753,1.324,754,1.324,755,1.324,756,1.324,757,1.324,758,1.324,759,1.324,760,3.318,761,2.209,762,1.101,763,2.842,764,1.324,765,2.842,766,1.324,767,2.209,768,1.324,769,1.324,770,4.748,771,2.209,772,1.324,773,2.842,774,1.324,775,1.324,776,1.324,777,2.209,778,3.313,779,3.688,780,1.324,781,1.324,782,1.324,783,1.101,784,3.066,785,3.318,786,1.324,787,1.324,788,2.209,789,1.324,790,2.209,791,1.324,792,1.324,793,4.601,794,1.837,795,1.837,796,2.209,797,1.324,798,1.324,799,1.324,800,2.209,801,1.324,802,1.324,803,3.318,804,1.324,805,1.324,806,1.324,807,1.324,808,2.209,809,1.324,810,1.324,811,2.209,812,2.209,813,1.324,814,1.324,815,1.324,816,1.324,817,1.324,818,1.324,819,1.324,820,1.324,821,1.324,822,1.324,823,1.324,824,2.842,825,1.324,826,1.324,827,1.324,828,1.324,829,2.209,830,2.842,831,1.324,832,1.324,833,2.209,834,1.324,835,1.324,836,1.324,837,1.324,838,1.324,839,1.324,840,1.324,841,1.324,842,1.324,843,1.324,844,1.324,845,1.324,846,1.324,847,1.324,848,1.324,849,2.209,850,1.324,851,1.324,852,0.954,853,1.324,854,1.324,855,1.324,856,1.324,857,2.209,858,1.324,859,1.324,860,3.688,861,1.324,862,1.324,863,1.324,864,1.324,865,1.324,866,1.324,867,1.324,868,1.324,869,1.324,870,1.324,871,1.324,872,1.324,873,2.842,874,1.324,875,1.324,876,1.324,877,1.324,878,1.324,879,1.324,880,0.473,881,1.324,882,1.324,883,1.324,884,1.324,885,1.408,886,2.209,887,1.324,888,1.324,889,1.324,890,1.324,891,1.408,892,1.324,893,2.209,894,1.324,895,1.324,896,1.324,897,1.324,898,1.324,899,1.324,900,1.324,901,1.324,902,2.842,903,1.324,904,0.473,905,2.209,906,1.324,907,1.101,908,1.324,909,1.324,910,3.318,911,1.324,912,1.324,913,1.324,914,1.324,915,1.324,916,4.681,917,1.324,918,1.837,919,1.324,920,1.324,921,1.324,922,1.324,923,1.324,924,1.324,925,2.209,926,1.324,927,1.324,928,1.324,929,2.842,930,1.324,931,1.324,932,1.101,933,2.209,934,2.209,935,1.324,936,1.324,937,1.324,938,1.324,939,1.324,940,1.324,941,1.324,942,1.261,943,1.324,944,2.209,945,1.324,946,1.324,947,2.209,948,1.324,949,1.324,950,1.324,951,2.209,952,2.209,953,1.324,954,1.324,955,1.324,956,1.324,957,1.324,958,1.324,959,1.324,960,2.209,961,1.324,962,1.324,963,1.324,964,1.324,965,1.324,966,1.324,967,1.324,968,1.324,969,1.324,970,1.324,971,1.324,972,1.324,973,1.324,974,1.324,975,1.324,976,1.324,977,1.324,978,1.324,979,1.324,980,1.324,981,1.324,982,1.324,983,1.324,984,1.324,985,1.324,986,2.209,987,1.324,988,2.209,989,1.324,990,1.324,991,1.324,992,1.324,993,1.324,994,1.324,995,1.324,996,1.324,997,1.324,998,1.324,999,1.324,1000,1.324,1001,1.101,1002,1.101,1003,1.324,1004,1.324,1005,1.324,1006,1.324,1007,1.324,1008,1.324,1009,1.324,1010,1.324,1011,1.324,1012,1.324,1013,3.688,1014,1.324,1015,1.324,1016,1.324,1017,1.324,1018,1.324,1019,1.324,1020,1.324,1021,1.324,1022,1.324,1023,1.324,1024,4.43,1025,1.324,1026,2.209,1027,1.324,1028,2.842,1029,1.324,1030,1.324,1031,1.324,1032,1.324,1033,1.324,1034,1.324,1035,1.324,1036,1.324,1037,1.324,1038,1.324,1039,1.324,1040,1.324,1041,1.101,1042,1.324,1043,1.324,1044,1.324,1045,2.209,1046,1.324,1047,1.324,1048,1.324,1049,2.209,1050,1.324,1051,1.324,1052,1.324,1053,3.318,1054,2.842,1055,2.209,1056,1.324,1057,1.324,1058,1.324,1059,1.101,1060,2.209,1061,1.324,1062,1.324,1063,1.324,1064,1.324,1065,1.324,1066,1.101,1067,1.101]],["title/dependencies.html",[550,2.297,686,2.075]],["body/dependencies.html",[25,0.035,277,0.025,278,0.029,279,0.025,396,2.649,397,3.342,550,2.649,1068,4.64,1069,6.318,1070,4.64,1071,4.64,1072,5.47,1073,4.548,1074,4.64,1075,4.64,1076,4.64,1077,4.64,1078,4.64,1079,4.64,1080,4.64,1081,4.64]],["title/miscellaneous/functions.html",[1082,1.486,1083,3.344]],["body/miscellaneous/functions.html",[7,1.117,20,1.739,24,2.778,25,0.034,26,1.985,28,1.357,35,2.502,58,3.845,135,1.739,277,0.024,278,0.029,279,0.024,327,1.458,341,1.592,353,2.297,401,1.903,446,3.845,484,3.845,568,4.438,576,3.402,579,3.702,588,3.207,1082,2.297,1083,3.702,1084,4.438,1085,5.339,1086,5.339,1087,3.702,1088,3.702,1089,3.702,1090,4.453,1091,3.702,1092,3.702,1093,3.702,1094,4.453]],["title/index.html",[7,0.723,595,1.836,596,1.836]],["body/index.html",[0,1.002,20,1.426,25,0.035,28,1.196,32,1.095,37,0.667,73,2.085,86,1.711,87,1.711,88,1.711,89,1.711,90,1.711,91,1.711,99,1.711,101,1.305,110,1.842,138,1.567,181,0.644,233,0.76,236,1.095,259,1.883,277,0.02,278,0.025,279,0.02,290,1.711,308,2.984,310,2.085,312,2.433,313,1.868,314,2.693,315,2.693,338,1.002,342,0.836,369,1.918,370,1.787,397,2.629,504,1.883,540,1.883,547,1.883,548,2.21,565,3.035,581,1.711,595,2.326,596,2.326,611,3.397,629,2.629,637,2.326,649,1.426,650,2.629,651,2.629,652,3.006,657,2.629,686,2.629,698,3.035,727,3.035,762,3.035,885,2.326,891,2.326,932,3.035,942,2.085,1059,3.921,1066,3.035,1067,3.035,1095,3.651,1096,3.651,1097,4.717,1098,3.651,1099,3.651,1100,3.651,1101,4.717,1102,4.717,1103,3.651,1104,3.651,1105,3.651,1106,3.651,1107,3.651,1108,3.651,1109,3.035,1110,3.764,1111,3.397,1112,3.397,1113,2.629,1114,3.651,1115,3.651,1116,2.085,1117,2.085,1118,3.035,1119,3.651,1120,3.651,1121,3.651,1122,3.651,1123,3.651,1124,3.651,1125,3.651,1126,3.651,1127,3.651,1128,3.651,1129,3.651,1130,3.651,1131,3.651,1132,3.651,1133,3.651]],["title/license.html",[595,1.836,596,1.836,1134,2.395]],["body/license.html",[25,0.027,277,0.022,278,0.027,279,0.022,488,2.632,611,2.975,615,3.434,693,4.239,907,3.434,916,3.434,1134,3.434,1135,4.13,1136,5.532,1137,4.13,1138,4.13,1139,5.099,1140,4.13,1141,4.13,1142,4.13,1143,4.13,1144,4.13,1145,4.13,1146,5.099,1147,6.238,1148,4.13,1149,4.13,1150,4.13,1151,5.532,1152,4.13,1153,5.099,1154,4.13,1155,4.13,1156,4.13,1157,4.13,1158,4.13,1159,4.13,1160,4.13,1161,4.13,1162,4.13,1163,5.099,1164,4.13,1165,4.13,1166,4.13,1167,4.13,1168,4.13,1169,4.13,1170,4.13,1171,5.099,1172,5.099,1173,4.13,1174,4.13,1175,4.13,1176,3.434,1177,4.13,1178,4.13,1179,4.13,1180,4.13,1181,4.13,1182,4.13,1183,4.13,1184,4.13,1185,4.13,1186,4.13,1187,4.13,1188,4.13,1189,4.13,1190,4.13,1191,4.13,1192,4.13,1193,4.13,1194,3.434,1195,4.13,1196,4.13,1197,4.13,1198,4.13,1199,4.13,1200,4.13,1201,4.13]],["title/modules.html",[549,3.226]],["body/modules.html",[25,0.031,277,0.027,278,0.031,279,0.027,491,3.587,548,2.333,549,3.587,636,3.587,1073,4.14,1202,4.98]],["title/overview.html",[1203,3.724]],["body/overview.html",[2,2.41,25,0.035,126,3.081,229,2.208,277,0.023,278,0.028,279,0.023,303,2.178,316,2.69,317,3.04,319,3.04,347,2.69,348,4.077,362,3.04,363,4.023,364,4.023,365,4.023,366,4.023,367,4.301,488,2.69,539,3.04,547,2.666,548,2.798,550,2.41,551,3.509,552,3.04,553,3.509,554,3.509,555,3.509,556,3.509,557,3.509,558,4.297,559,3.509,575,3.04,1203,3.509]],["title/miscellaneous/typealiases.html",[1082,1.486,1204,4.023]],["body/miscellaneous/typealiases.html",[7,1.137,16,2.304,18,2.304,25,0.033,27,1.125,48,2.304,49,2.304,188,1.243,236,1.617,260,1.619,269,1.766,277,0.024,278,0.029,279,0.024,307,3.67,326,2.587,332,3.079,333,3.288,334,2.971,337,2.587,343,2.782,1082,2.337,1205,4.53,1206,6.332]],["title/miscellaneous/variables.html",[1082,1.486,1207,3.344]],["body/miscellaneous/variables.html",[1,0.94,6,1.062,7,0.37,9,0.663,10,0.842,13,1.539,16,0.63,18,0.63,19,1.161,20,1.198,21,1.198,25,0.035,27,1.165,29,1.062,30,0.791,32,1.829,33,2.858,42,1.585,43,1.153,44,1.062,45,3.141,47,0.63,48,1.671,51,1.539,52,1.74,53,1.74,55,1.74,56,1.539,57,1.74,60,1.74,62,1.539,65,1.441,66,2.209,67,0.94,68,2.817,69,0.94,70,2.209,71,1.246,72,2.209,73,0.842,74,0.842,75,2.817,76,0.94,77,1.74,78,0.842,79,1.74,80,1.74,81,0.94,82,1.74,83,1.671,84,1.062,86,1.132,87,1.132,88,1.132,89,1.132,90,1.132,91,1.132,99,1.661,100,0.761,101,0.864,110,0.943,118,1.545,124,1.699,133,1.74,138,1.619,140,1.74,141,0.691,144,1.925,145,1.062,146,0.691,147,0.691,148,0.94,149,1.062,150,0.724,151,1.062,160,1.74,161,1.751,181,0.574,184,1.502,185,2.677,188,0.663,190,1.955,194,1.955,199,1.74,216,1.062,220,2.399,229,1.671,231,2.209,232,1.062,234,1.539,235,0.94,236,0.92,237,1.062,238,1.062,239,1.74,240,1.267,241,1.74,242,1.062,243,1.062,244,1.74,245,1.74,246,1.062,247,2.209,248,1.379,249,1.062,250,1.062,251,1.062,252,1.062,253,1.062,254,1.062,255,1.062,256,1.062,257,1.062,258,1.955,259,1.582,260,1.654,261,1.062,262,1.062,263,2.532,264,0.691,265,1.062,266,1.062,267,1.74,268,1.74,269,0.483,270,1.062,271,1.062,272,1.062,273,1.062,274,1.062,275,1.062,276,1.062,277,0.008,278,0.013,279,0.008,290,0.791,304,1.226,305,4.284,306,2.414,307,0.94,308,2.532,309,1.062,310,2.025,311,1.226,312,1.582,313,1.654,314,2.643,315,2.643,316,0.94,317,1.062,318,1.062,319,1.062,320,0.94,321,2.018,322,2.55,328,1.582,338,0.405,341,0.527,342,0.338,343,0.761,344,2.736,345,1.437,346,1.132,353,1.246,465,1.74,505,1.539,530,1.226,560,2.008,569,2.008,570,1.226,576,1.539,587,1.74,589,2.259,652,0.94,674,2.008,852,1.74,1082,0.761,1084,3.687,1087,2.008,1088,2.008,1089,1.226,1091,1.226,1092,1.226,1093,1.226,1116,0.842,1117,0.842,1207,1.226,1208,5.049,1209,3.546,1210,4.435,1211,2.416,1212,2.416,1213,3.067,1214,3.067,1215,2.416,1216,3.067,1217,2.416,1218,2.416,1219,1.475,1220,1.475,1221,1.475,1222,3.546,1223,3.067,1224,2.209,1225,1.475,1226,2.55,1227,3.546,1228,2.416,1229,1.475,1230,1.475,1231,1.475,1232,1.475,1233,1.475,1234,3.067,1235,1.475,1236,1.475,1237,1.475,1238,1.475,1239,1.475,1240,1.475,1241,1.475,1242,1.475,1243,2.416,1244,2.416,1245,1.475,1246,1.475,1247,1.475,1248,1.475,1249,3.067,1250,1.475,1251,2.416,1252,1.475,1253,1.475,1254,1.475,1255,1.475,1256,1.475,1257,1.475,1258,1.475,1259,1.475,1260,1.475,1261,1.475,1262,1.475,1263,1.475,1264,1.475,1265,1.475,1266,1.475,1267,1.475,1268,1.475,1269,1.475,1270,1.475,1271,1.475,1272,1.475,1273,1.475]],["title/additional-documentation/configuration.html",[880,1.03,904,1.03,942,1.645]],["body/additional-documentation/configuration.html",[20,1.662,25,0.035,28,1.283,32,1.276,37,0.514,86,1.994,87,1.994,88,1.994,89,1.994,90,1.994,91,1.994,99,1.994,101,1.521,110,2.028,138,1.681,181,0.709,236,1.276,259,2.195,277,0.023,278,0.028,279,0.023,290,1.701,308,3.201,310,2.43,312,2.679,313,2.004,314,2.966,315,2.966,321,2.195,338,1.168,342,0.974,369,1.393,370,1.276,504,2.195,581,1.994,627,2.195,649,1.662,650,3.065,651,3.065,652,2.712,942,2.43,1109,3.538,1110,3.741,1111,3.065,1112,3.065,1113,3.065,1116,2.43,1117,2.43,1118,3.538]],["title/additional-documentation/ngmodel.html",[880,1.03,885,1.836,904,1.03]],["body/additional-documentation/ngmodel.html",[0,1.32,25,0.034,39,0.736,188,1.533,248,3.19,277,0.026,278,0.03,279,0.026,413,3.464,427,3.998,623,3.065,885,3.065,1041,3.998,1274,4.809,1275,4.809,1276,4.809,1277,3.998]],["title/additional-documentation/history.html",[660,1.836,880,1.03,904,1.03]],["body/additional-documentation/history.html",[25,0.034,37,0.656,39,0.831,277,0.025,278,0.029,279,0.025,342,1.048,370,1.373,521,3.909,636,3.909,649,1.788,653,3.298,660,3.892,661,4.167,784,4.512,1278,3.807,1279,4.579,1280,3.807,1281,4.512,1282,4.512,1283,4.579,1284,3.909,1285,3.807]],["title/additional-documentation/shortcuts.html",[653,2.075,880,1.03,904,1.03]],["body/additional-documentation/shortcuts.html",[25,0.035,37,0.731,38,2.981,39,0.885,40,2.637,110,2.162,181,0.756,277,0.022,278,0.027,279,0.022,309,2.981,312,2.135,313,1.479,342,1.169,369,1.672,370,1.531,481,2.981,631,2.981,649,1.994,661,4.356,794,3.44,1224,2.981,1278,4.244,1280,4.244,1284,4.277,1286,4.138,1287,4.138,1288,4.138,1289,4.138,1290,3.44,1291,4.138,1292,4.138,1293,5.106,1294,4.138,1295,4.138,1296,4.138,1297,4.138,1298,5.537,1299,4.138,1300,4.138,1301,4.138]],["title/additional-documentation/html.html",[540,1.486,880,1.03,904,1.03]],["body/additional-documentation/html.html",[25,0.035,37,0.717,39,0.819,46,1.343,65,1.437,100,2.307,165,3.221,181,0.731,277,0.024,278,0.029,279,0.024,369,1.752,370,1.605,432,4.449,540,3.062,1277,3.718,1302,4.472,1303,4.472,1304,4.472,1305,4.472,1306,4.472,1307,4.472,1308,4.472,1309,4.472,1310,4.472,1311,4.472,1312,4.472,1313,4.472,1314,4.472,1315,4.472]],["title/additional-documentation/menu-plugin.html",[290,0.823,327,0.823,880,0.899,904,0.899]],["body/additional-documentation/menu-plugin.html",[9,1.397,19,1.133,20,1.351,25,0.035,27,0.86,28,0.792,30,1.133,32,1.366,37,0.654,39,0.529,42,1.628,43,1.25,49,1.478,51,2.204,56,2.204,65,1.476,71,1.784,74,1.975,86,1.621,87,1.621,88,1.621,89,1.621,90,1.621,91,1.621,99,1.621,100,1.784,101,1.236,110,1.778,114,2.491,115,2.491,116,2.491,124,1.527,135,1.351,138,1.527,150,1.527,157,2.491,181,0.695,184,1.236,185,2.902,186,3.28,188,0.949,194,2.204,218,2.491,219,2.491,225,1.975,226,1.975,227,2.491,228,2.491,229,1.478,233,0.72,236,1.037,259,1.784,269,1.133,277,0.019,278,0.024,279,0.019,290,1.89,308,2.907,310,1.975,312,2.349,313,1.82,314,2.6,315,2.6,321,1.784,327,1.491,334,2.349,342,0.792,369,1.491,370,1.366,445,2.876,504,1.784,540,1.784,541,2.876,581,1.621,627,2.349,629,2.491,637,3.244,649,1.351,891,3.448,1110,2.491,1111,2.491,1112,2.491,1113,2.491,1116,1.975,1117,1.975,1316,3.459,1317,3.459,1318,3.459,1319,3.459,1320,3.459,1321,3.459,1322,4.554,1323,2.876,1324,3.459,1325,2.876,1326,3.459,1327,3.459,1328,3.459,1329,3.459,1330,3.459,1331,3.459,1332,3.459]],["title/additional-documentation/schema.html",[181,0.393,880,1.03,904,1.03]],["body/additional-documentation/schema.html",[9,1.075,25,0.035,30,1.282,32,1.619,37,0.652,39,0.599,46,0.982,65,1.355,83,1.673,109,2.495,118,1.174,124,1.479,135,1.926,144,1.529,181,0.827,233,0.815,258,2.495,277,0.021,278,0.026,279,0.021,290,1.282,329,2.311,369,1.615,370,1.479,401,1.673,505,2.495,532,4.1,581,1.835,589,2.495,626,2.82,627,2.02,637,2.495,647,3.255,649,1.529,657,2.82,942,2.816,1002,3.255,1176,3.255,1224,3.552,1226,4.489,1325,3.255,1333,3.255,1334,3.255,1335,3.255,1336,3.255,1337,4.932,1338,4.932,1339,4.932,1340,4.932,1341,5.668,1342,3.915,1343,3.915,1344,3.915,1345,3.915,1346,3.915,1347,3.915,1348,3.915,1349,3.915,1350,3.915,1351,3.915,1352,3.915]],["title/additional-documentation/inline-code-editor.html",[313,0.797,370,0.669,504,1.15,880,0.797,904,0.797]],["body/additional-documentation/inline-code-editor.html",[0,0.666,9,1.156,10,1.386,19,1.519,25,0.035,27,0.458,30,0.795,33,1.137,37,0.674,39,0.79,40,1.547,41,2.083,43,0.977,46,0.609,65,1.443,83,1.52,98,2.956,109,1.547,118,1.481,124,1.548,126,2.173,135,0.948,150,1.067,174,1.748,181,0.486,188,0.977,226,1.386,229,2.337,240,1.765,260,1.506,269,0.795,277,0.013,278,0.019,279,0.013,292,2.562,313,1.272,329,2.314,338,0.666,339,3.123,345,1.137,346,1.667,369,0.795,370,1.391,415,2.018,423,2.018,465,1.748,490,2.018,504,1.252,521,2.562,548,1.137,599,2.018,626,1.748,627,1.252,631,1.748,649,0.948,654,2.018,660,1.547,783,2.018,795,2.018,852,1.748,891,3.147,918,2.018,1001,2.958,1194,2.018,1281,2.018,1282,2.018,1284,3.341,1285,2.018,1290,2.018,1323,2.018,1333,2.018,1334,2.018,1335,2.018,1336,2.018,1353,2.427,1354,2.427,1355,2.427,1356,3.558,1357,2.427,1358,2.427,1359,3.558,1360,2.427,1361,4.547,1362,4.212,1363,2.427,1364,4.639,1365,2.427,1366,2.427,1367,2.427,1368,2.427,1369,2.427,1370,2.427,1371,2.427,1372,2.427,1373,2.427,1374,2.427,1375,2.427,1376,2.427,1377,4.212,1378,4.639,1379,2.427,1380,2.427,1381,2.427,1382,2.427,1383,2.427,1384,2.427,1385,2.427,1386,3.558,1387,2.427,1388,2.427,1389,2.427,1390,2.427,1391,2.427,1392,2.427,1393,2.427,1394,2.427,1395,2.427,1396,2.427,1397,2.427,1398,2.427,1399,4.939,1400,2.427,1401,2.427,1402,2.427,1403,2.427,1404,2.427,1405,2.427,1406,4.212,1407,2.427,1408,2.427,1409,2.427,1410,2.427,1411,2.427,1412,2.427,1413,2.427,1414,2.427,1415,2.427,1416,4.212,1417,2.427,1418,4.212,1419,2.427,1420,2.427,1421,2.427,1422,2.427,1423,2.427,1424,2.427,1425,2.427,1426,3.558,1427,2.427,1428,2.427,1429,2.427,1430,2.427,1431,2.427,1432,2.427,1433,2.427,1434,2.427,1435,2.427,1436,2.427,1437,3.558,1438,2.427,1439,2.018,1440,3.558,1441,3.558,1442,2.427,1443,2.427,1444,4.639,1445,3.558,1446,2.427,1447,2.427,1448,2.427,1449,2.427,1450,3.558,1451,2.427,1452,2.427,1453,2.427,1454,2.427,1455,2.427]],["title/additional-documentation/input-rules.html",[623,1.602,630,1.811,880,0.899,904,0.899]],["body/additional-documentation/input-rules.html",[4,0.816,25,0.035,27,1.008,35,2.382,37,0.569,39,0.629,45,3.94,46,0.745,65,0.745,110,1.985,118,1.655,124,1.655,135,1.16,138,1.232,181,0.694,220,2.69,233,1.149,240,1.908,269,1.807,277,0.016,278,0.022,279,0.016,313,1.684,320,1.893,321,2.12,327,1.346,342,0.68,369,0.973,370,1.232,401,1.269,413,2.14,505,3.002,526,2.47,547,1.533,548,1.392,623,3.675,627,1.533,630,3.975,649,1.16,778,2.47,1116,1.696,1117,2.347,1361,4.226,1439,2.47,1456,2.971,1457,2.971,1458,2.971,1459,2.971,1460,2.971,1461,2.971,1462,2.971,1463,2.971,1464,2.971,1465,4.711,1466,4.11,1467,4.11,1468,2.971,1469,4.11,1470,2.971,1471,5.987,1472,5.337,1473,5.337,1474,5.337,1475,5.337,1476,2.971,1477,2.971,1478,4.11,1479,2.971,1480,2.971,1481,2.971,1482,4.711,1483,2.971,1484,4.11,1485,2.971,1486,2.971,1487,2.971,1488,2.971,1489,2.971,1490,2.971,1491,2.971,1492,4.11,1493,2.971,1494,2.971,1495,2.971,1496,2.971,1497,2.971,1498,2.971,1499,2.971,1500,2.971,1501,2.971,1502,2.971,1503,2.971,1504,4.11,1505,2.971,1506,2.971,1507,2.971,1508,2.971,1509,2.971,1510,2.971,1511,2.971,1512,2.971,1513,4.11,1514,2.971,1515,2.971,1516,2.971,1517,2.971,1518,2.971,1519,2.971]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["0",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.2",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":508,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":535,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.10.0",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["100",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1rem",{"_index":536,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":316,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":852,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":916,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":615,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":317,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["3px",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4",{"_index":318,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":319,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":320,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.4",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6e13142",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["84104c2",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["9.1.9",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["90f88a5",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a9262c2",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1170,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1195,"title":{},"body":{"license.html":{}}}],["actions",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":546,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":629,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":904,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["aliases",{"_index":1205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":1001,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1161,"title":{},"body":{"license.html":{}}}],["angular",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":396,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["appcomponent",{"_index":1274,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["applications",{"_index":1067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1106,"title":{},"body":{"index.html":{}}}],["area",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1199,"title":{},"body":{"license.html":{}}}],["around",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":337,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1148,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1489,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1457,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1188,"title":{},"body":{"license.html":{}}}],["auto",{"_index":762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":918,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1296,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1495,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1295,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1509,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1338,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1337,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1317,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":321,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1476,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1512,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":308,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":346,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":552,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{}}}],["border",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1202,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1073,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsers",{"_index":1121,"title":{},"body":{"index.html":{}}}],["bug",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1513,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1117,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":315,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1490,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1137,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["ce00b5f",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1430,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1432,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1431,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":597,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":599,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["characters",{"_index":1499,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1143,"title":{},"body":{"license.html":{}}}],["check",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1123,"title":{},"body":{"index.html":{}}}],["ci",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1191,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1436,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":313,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1323,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1352,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1340,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1496,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1455,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":891,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1438,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1357,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1434,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1328,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1330,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["compatibility",{"_index":1119,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":347,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["component_template",{"_index":544,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":349,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1358,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1427,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1169,"title":{},"body":{"license.html":{}}}],["config",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":942,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1283,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1316,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1200,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(html);generating",{"_index":1311,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":586,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":283,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1305,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1196,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1163,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1146,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1136,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["corresponds",{"_index":1501,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["creates",{"_index":1498,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1508,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["css",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1437,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":637,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1481,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1192,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1487,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1349,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1150,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1201,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":551,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["decoration",{"_index":330,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":340,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":587,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1456,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1059,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":550,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":573,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1450,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":542,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":545,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":344,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1159,"title":{},"body":{"license.html":{}}}],["div",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["docs",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":611,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1114,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1113,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1309,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1327,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1322,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1332,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1331,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1346,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1321,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1345,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1312,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1315,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1304,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1310,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1479,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1442,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1125,"title":{},"body":{"index.html":{}}}],["edit",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":370,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["editor's",{"_index":795,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":567,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":372,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":382,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":563,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":576,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":591,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":590,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":592,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":578,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1112,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1336,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorinitialized",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1104,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1329,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1313,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":1470,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["em",{"_index":311,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1469,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":674,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":784,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1290,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":907,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1120,"title":{},"body":{"index.html":{}}}],["example",{"_index":627,"title":{},"body":{"changelog.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":631,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1354,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1447,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["exporting",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1179,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1149,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["findnodetype",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findnodetype(type",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":1127,"title":{},"body":{"index.html":{}}}],["firing",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1324,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1184,"title":{},"body":{"license.html":{}}}],["fix",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1478,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1168,"title":{},"body":{"license.html":{}}}],["font",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["forms",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":1108,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":562,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1142,"title":{},"body":{"license.html":{}}}],["from.depth",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(i).type",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1083,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1166,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1303,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1130,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1344,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":291,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":339,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":595,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1472,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1122,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1141,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handle",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["handlebars",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1503,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":652,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1140,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":660,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1189,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":540,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1314,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1307,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1463,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1334,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1294,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1279,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1462,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1280,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1286,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1353,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1118,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1325,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1132,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1111,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":305,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1180,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["imported",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1105,"title":{},"body":{"index.html":{}}}],["imports/variables",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1173,"title":{},"body":{"license.html":{}}}],["including",{"_index":1153,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":593,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":574,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":575,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":566,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":570,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":504,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":623,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1471,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1465,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1097,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1096,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":302,"title":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":303,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1318,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["ismarkactive",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":51,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":310,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":312,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1275,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":306,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":661,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1301,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":335,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1178,"title":{},"body":{"license.html":{}}}],["labels",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1341,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1193,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1190,"title":{},"body":{"license.html":{}}}],["license",{"_index":1134,"title":{"license.html":{}},"body":{"license.html":{}}}],["lift(state",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem",{"_index":1288,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1292,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1154,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1181,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":1511,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["literal",{"_index":307,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1435,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1099,"title":{},"body":{"index.html":{}}}],["manually",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1482,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1484,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1507,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["maximum",{"_index":1497,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1504,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1449,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":290,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":280,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":295,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":63,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":148,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":149,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewspec",{"_index":47,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":343,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1092,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1183,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1157,"title":{},"body":{"license.html":{}}}],["meta",{"_index":64,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1124,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1082,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1135,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1284,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":46,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1156,"title":{},"body":{"license.html":{}}}],["module",{"_index":547,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{}}}],["modules",{"_index":549,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":564,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1320,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1126,"title":{},"body":{"index.html":{}}}],["multi",{"_index":367,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":654,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["new",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["newend",{"_index":1364,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1359,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngafterviewinit",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngmodel",{"_index":885,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":565,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngx",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngx_editor_config_token",{"_index":569,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":296,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":348,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":341,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":548,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditormodule.forroot",{"_index":649,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":380,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":398,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1350,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1486,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1351,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1485,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["nodes",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1339,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":331,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":338,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1187,"title":{},"body":{"license.html":{}}}],["notable",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1171,"title":{},"body":{"license.html":{}}}],["now",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1101,"title":{},"body":{"index.html":{}}}],["null",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":589,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(attrs).length",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1145,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1362,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1360,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1363,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":400,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1276,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["oninit",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1128,"title":{},"body":{"index.html":{}}}],["option",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1483,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1116,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":314,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1480,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":1198,"title":{},"body":{"license.html":{}}}],["out",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1203,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":686,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":880,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1343,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1185,"title":{},"body":{"license.html":{}}}],["peer",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1139,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1164,"title":{},"body":{"license.html":{}}}],["person",{"_index":1144,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1165,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":581,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":327,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1115,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":342,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1488,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1175,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1451,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1454,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":647,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirror/plugins/menu",{"_index":580,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":582,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":329,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1176,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":583,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":568,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":588,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":585,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1158,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1186,"title":{},"body":{"license.html":{}}}],["query",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["quote",{"_index":322,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["quotes",{"_index":1510,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rc.0",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1458,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1282,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1445,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1333,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1278,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1506,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":377,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":297,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["resolvedpos",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restore",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1152,"title":{},"body":{"license.html":{}}}],["result",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["results",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["return",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1155,"title":{},"body":{"license.html":{}}}],["root",{"_index":584,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["rule",{"_index":1473,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":630,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1515,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1517,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1518,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1519,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1516,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1492,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1133,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1335,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1103,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1109,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":181,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks[menuitem.key",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1306,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.blockquote",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.bullet_list",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1326,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1433,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1110,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1356,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":368,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["self",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1162,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":778,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1464,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1172,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1285,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":653,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1138,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1502,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["simple",{"_index":1095,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1289,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1293,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1468,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1514,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1147,"title":{},"body":{"license.html":{}}}],["solid",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":651,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1287,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1291,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1088,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglewrap.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglewrap.ts",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitem.ts",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1091,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:167",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:182",{"_index":323,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:190",{"_index":325,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:223",{"_index":324,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:44",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:46",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:60",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":281,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":287,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":285,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":284,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":288,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":289,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":286,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":304,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1093,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":326,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":594,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1089,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1129,"title":{},"body":{"index.html":{}}}],["start",{"_index":1361,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["started",{"_index":596,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1493,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.selection",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":309,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["subject",{"_index":1167,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1160,"title":{},"body":{"license.html":{}}}],["submit",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1174,"title":{},"body":{"license.html":{}}}],["such",{"_index":1100,"title":{},"body":{"index.html":{}}}],["support",{"_index":636,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":932,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":794,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tables",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":1002,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":332,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":350,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["templateurl",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["text",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1342,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1347,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1475,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1467,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1505,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1355,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1452,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1428,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1453,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.forwardselection",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1277,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1441,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1440,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":293,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":294,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":298,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":301,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":292,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":300,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":299,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1429,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1494,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1348,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1298,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1300,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1299,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1297,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglewrap",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglewrap(type",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toolbar",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":334,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":333,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":336,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":48,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1197,"title":{},"body":{"license.html":{}}}],["tr",{"_index":345,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":328,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1319,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":1459,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["transition",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1474,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1204,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1460,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1041,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1281,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1443,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1439,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":282,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1308,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":626,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":693,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":783,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":572,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1461,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":571,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["utils/flatdeep",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":543,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1207,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1098,"title":{},"body":{"index.html":{}}}],["video",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1444,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1448,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1131,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":395,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1182,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1177,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1194,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1500,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1151,"title":{},"body":{"license.html":{}}}],["work",{"_index":1107,"title":{},"body":{"index.html":{}}}],["working",{"_index":1302,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapin(type)(state",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapinlist(type)(state",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1466,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1491,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1477,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":378,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1066,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1446,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1102,"title":{},"body":{"index.html":{}}}],["yes",{"_index":579,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; updates: {}; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; update: (state: any) => void; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem } from '../../helpers';\nimport { toggleList, toggleBlockType, toggleWrap } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n        isActive = isNodeActive(state, type, menuItem.attrs);\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n\n      if (type === schema.nodes.blockquote) {\n        command = toggleWrap(type);\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, AfterViewInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngAfterViewInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n\n  blockquote {\n    padding-left: 1rem;\n    border-left: 3px solid #ddd;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.7 (2020-06-01)\nEnhancements\n\nremove dependencies prosemirror-utils and prosemirror-tables (6e13142)\n\nBug Fixes\n\nhandle null value correctly in input (84104c2)\nfix schema usage in example app (6e13142)\n\nDocumentation\n\nadd input-rules examples (ce00b5f)\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')],\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            findNodeType   (src/.../isNodeActive.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                        \n                            toggleWrap   (src/.../toggleWrap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  quote\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading',\n  blockquote: 'Quote'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            findNodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n\n  const node: NodeType = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  },\n  blockquote: {\n    key: 'blockquote',\n    i18nKey: 'blockquote',\n    icon: 'quote',\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleWrap.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleWrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type);\n\n    if (isActive) {\n      return lift(state, dispatch);\n    }\n\n    return wrapIn(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic'], // inline icons\n        ['code', 'blockquote'],\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
