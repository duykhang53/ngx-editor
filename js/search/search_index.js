var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.926,1,2.15]],["body/classes/DropDownView.html",[0,1.005,1,2.029,2,0.889,3,0.467,4,0.428,5,0.428,6,1.122,7,0.391,8,0.903,9,1.409,10,2.46,11,1.302,12,3.044,13,2.892,14,1.442,15,1.558,16,1.841,17,3.346,18,1.841,19,1.861,20,1.772,21,1.683,22,1.719,23,2.525,24,0.73,25,0.035,26,0.51,27,0.947,28,0.356,29,2.899,30,1.599,31,1.558,32,0.757,33,1.492,34,1.558,35,1.183,36,1.558,37,0.606,38,1.122,39,0.561,40,1.609,41,0.608,42,1.439,43,1.005,44,1.818,45,1.609,46,0.55,47,0.391,48,1.719,49,1.841,50,2.087,51,0.73,52,0.993,53,1.122,54,1.122,55,1.122,56,1.295,57,1.122,58,0.993,59,1.122,60,1.295,61,1.122,62,1.295,63,0.993,64,2.029,65,1.295,66,1.578,67,1.818,68,0.993,69,2.637,70,0.993,71,1.818,72,1.302,73,2.293,74,0.889,75,0.889,76,2.637,77,0.993,78,1.122,79,1.442,80,1.818,81,1.122,82,1.609,83,1.122,84,1.565,85,1.122,86,1.295,87,0.73,88,0.73,89,0.73,90,0.73,91,0.73,92,0.73,93,3.404,94,1.295,95,1.295,96,2.647,97,1.122,98,3.044,99,1.818,100,2.289,101,2.076,102,0.903,103,1.295,104,1.295,105,1.295,106,1.295,107,2.647,108,2.099,109,1.295,110,0.993,111,0.608,112,1.295,113,1.295,114,2.647,115,2.899,116,2.899,117,2.637,118,1.295,119,0.955,120,3.044,121,1.295,122,1.295,123,1.295,124,1.295,125,1.465,126,1.295,127,0.803,128,1.295,129,1.295,130,1.295,131,1.295,132,1.295,133,1.295,134,3.103,135,1.295,136,1.43,137,1.295,138,1.295,139,0.757,140,1.295,141,3.268,142,1.183,143,1.295,144,0.803,145,0.986,146,1.818,147,1.492,148,1.492,149,2.029,150,1.818,151,1.361,152,1.818,153,1.122,154,1.295,155,1.295,156,1.295,157,1.122,158,2.293,159,1.295,160,1.295,161,2.293,162,0.889,163,1.295,164,1.295,165,1.295,166,1.122,167,1.295,168,1.295,169,1.295,170,1.295,171,1.295,172,1.295,173,1.295,174,1.295,175,2.293,176,1.295,177,1.295,178,1.295,179,2.099,180,2.099,181,1.295,182,2.099,183,1.295,184,1.309,185,2.565,186,1.122,187,1.565,188,1.818,189,2.099,190,0.467,191,2.099,192,1.609,193,1.295,194,1.295,195,1.295,196,2.099,197,1.122,198,0.993,199,1.295,200,1.295,201,1.295,202,1.295,203,2.637,204,1.295,205,1.295,206,1.295,207,1.295,208,1.295,209,1.295,210,1.295,211,2.099,212,2.099,213,2.099,214,1.295,215,2.099,216,1.295,217,1.295,218,1.295,219,1.122,220,1.295,221,1.122,222,1.122,223,0.889,224,1.295,225,1.295,226,0.889,227,0.889,228,1.122,229,1.122,230,1.295,231,1.818,232,1.122,233,0.324,234,0.993,235,0.993,236,0.467,237,1.122,238,1.122,239,1.818,240,0.903,241,1.818,242,1.122,243,1.122,244,1.818,245,1.818,246,1.122,247,2.293,248,0.889,249,1.122,250,1.122,251,1.122,252,1.122,253,1.122,254,1.122,255,1.122,256,1.122,257,1.122,258,0.993,259,0.803,260,0.557,261,1.122,262,1.122,263,0.889,264,0.73,265,1.122,266,1.122,267,1.818,268,1.818,269,0.51,270,1.122,271,1.122,272,1.122,273,1.122,274,1.122,275,1.122,276,1.122,277,0.008,278,0.014,279,0.008]],["title/classes/MenuBarView.html",[0,0.926,280,2.805]],["body/classes/MenuBarView.html",[0,1.005,2,2.091,3,1.098,4,1.005,5,1.005,7,0.919,8,1.689,9,1.436,11,2.438,13,3.524,14,2.091,19,1.979,20,2.329,21,2.289,22,2.548,24,1.716,25,0.035,26,1.199,27,1.081,28,0.838,30,1.547,32,1.098,35,2.214,37,0.668,39,0.723,41,2.159,42,1.689,43,1.297,51,1.716,66,1.313,97,2.637,101,1.889,151,1.758,184,1.871,233,0.762,234,2.333,235,3.012,269,1.199,277,0.02,278,0.025,279,0.02,280,4.35,281,3.662,282,5.233,283,4.726,284,4.726,285,3.662,286,3.662,287,3.662,288,3.662,289,3.662,290,1.547,291,3.662,292,3.404,293,3.662,294,3.662,295,3.662,296,3.044,297,3.662,298,3.662,299,3.662,300,3.662,301,3.662]],["title/interfaces/MenuItemMeta.html",[64,2.15,302,1.206]],["body/interfaces/MenuItemMeta.html",[3,0.98,4,0.897,5,0.897,7,0.82,8,1.567,25,0.035,27,1.201,28,1.21,32,0.98,63,2.794,64,3.153,66,0.82,87,1.531,88,1.531,89,1.531,90,1.531,91,1.531,92,1.531,119,1.826,139,1.839,145,2.357,187,1.396,192,3.619,223,3.312,233,0.913,240,1.168,260,2.157,263,3.41,277,0.018,278,0.024,279,0.018,302,1.168,303,1.685,304,2.716,305,5.18,306,2.932,307,2.794,308,2.825,309,2.353,310,2.503,311,2.716,312,1.685,313,1.89,314,3.02,315,3.02,316,2.082,317,2.353,318,2.353,319,2.353,320,2.082]],["title/classes/MenuItemView.html",[0,0.926,149,2.15]],["body/classes/MenuItemView.html",[0,1.011,1,1.622,2,0.898,3,0.472,4,0.432,5,0.432,6,1.133,7,0.395,8,0.91,9,1.413,10,1.83,11,1.313,12,1.308,13,2.903,14,1.453,16,1.574,17,2.665,18,1.574,19,1.864,20,1.58,21,1.438,22,1.574,24,0.737,25,0.035,26,0.515,27,0.925,28,0.36,29,2.653,30,1.605,32,0.472,33,1.192,35,1.192,37,0.608,38,1.133,39,0.564,40,1.622,41,0.614,42,1.446,43,1.11,44,1.833,45,1.622,46,0.552,47,0.395,48,1.947,49,1.849,50,2.094,51,0.737,52,1.002,53,1.133,54,1.133,55,1.133,56,1.308,57,1.133,58,1.002,59,1.133,60,1.308,61,1.133,62,1.308,63,1.002,64,2.578,65,1.308,66,1.579,67,1.833,68,1.002,69,2.653,70,1.002,71,1.833,72,1.313,73,2.308,74,0.898,75,0.898,76,2.653,77,1.002,78,1.133,79,1.453,80,1.833,81,1.133,82,1.622,83,1.133,84,1.574,85,1.133,86,1.308,87,0.737,88,0.737,89,0.737,90,0.737,91,0.737,92,0.737,93,3.417,94,1.308,95,1.308,96,2.665,97,1.133,98,3.062,99,1.83,100,2.296,101,2.086,102,0.91,103,1.308,104,1.308,105,1.308,106,1.308,107,2.665,108,2.116,109,1.308,110,1.002,111,0.614,112,1.308,113,1.308,114,2.665,115,2.913,116,2.913,117,2.653,118,1.308,119,0.961,120,3.062,121,1.308,122,1.308,123,1.308,124,1.308,125,1.47,126,1.308,127,0.811,128,1.308,129,1.308,130,1.308,131,1.308,132,1.308,133,1.308,134,3.282,135,1.308,136,1.438,137,1.308,138,1.308,139,0.763,140,1.308,141,3.53,142,1.192,143,1.308,144,0.811,145,0.994,146,1.833,147,1.502,148,1.502,149,2.347,150,1.833,151,1.423,152,1.833,153,1.133,154,1.308,155,1.308,156,1.308,157,1.133,158,2.308,159,1.308,160,1.308,161,2.308,162,0.898,163,1.308,164,1.308,165,1.308,166,1.133,167,1.308,168,1.308,169,1.308,170,1.308,171,1.308,172,1.308,173,1.308,174,1.308,175,2.308,176,1.308,177,1.308,178,2.116,179,2.116,180,2.116,181,1.308,182,2.116,183,1.308,184,1.446,185,2.578,186,1.133,187,1.574,188,1.833,189,2.116,190,0.472,191,2.116,192,1.622,193,1.308,194,1.308,195,1.308,196,2.116,197,1.133,198,1.002,199,1.308,200,1.308,201,1.308,202,3.062,203,2.653,204,1.308,205,1.308,206,1.308,207,1.308,208,1.308,209,1.308,210,1.308,211,2.116,212,2.116,213,2.116,214,1.308,215,2.116,216,1.308,217,1.308,218,1.308,219,1.133,220,1.308,221,1.133,222,1.133,223,0.898,224,1.308,225,1.308,226,0.898,227,0.898,228,1.133,229,1.133,230,1.308,231,1.833,232,1.133,233,0.328,234,1.002,235,1.002,236,0.472,237,1.133,238,1.133,239,1.833,240,0.91,241,1.833,242,1.133,243,1.133,244,1.833,245,1.833,246,1.133,247,2.308,248,0.898,249,1.133,250,1.133,251,1.133,252,1.133,253,1.133,254,1.133,255,1.133,256,1.133,257,1.133,258,1.002,259,0.811,260,0.562,261,1.133,262,1.133,263,0.898,264,0.737,265,1.133,266,1.133,267,1.833,268,1.833,269,0.515,270,1.133,271,1.133,272,1.133,273,1.133,274,1.133,275,1.133,276,1.133,277,0.008,278,0.014,279,0.008,321,2.545,322,1.573,323,1.573]],["title/interfaces/MenuItemViewSpec.html",[48,1.441,302,1.206]],["body/interfaces/MenuItemViewSpec.html",[3,0.98,4,0.897,5,0.897,7,0.82,8,1.567,9,0.897,16,1.396,18,1.396,19,1.732,21,1.276,25,0.035,26,1.07,27,1.185,28,1.35,30,1.07,37,0.598,39,0.757,41,1.712,42,1.769,43,1.203,46,0.775,47,0.82,48,1.873,49,1.396,50,1.396,102,1.168,119,1.315,139,0.98,142,2.478,144,2.728,145,2.065,147,2.478,148,2.478,151,0.98,184,1.567,190,0.98,233,1.277,236,1.484,240,1.168,260,2.274,264,2.478,277,0.018,278,0.024,279,0.018,302,1.89,303,1.685,306,2.054,307,2.794,324,1.865,325,1.435,326,2.261,327,2.054,328,2.794,329,2.794,330,2.503,331,2.825,332,2.261,333,2.082,334,2.082,335,1.865,336,1.358,337,1.865,338,2.082,339,1.168,340,0.748,341,2.261,342,1.865,343,1.531,344,1.531]],["title/interfaces/MenuOptions.html",[21,1.317,302,1.206]],["body/interfaces/MenuOptions.html",[3,1.02,4,0.933,5,0.933,7,0.853,8,1.609,9,0.933,16,1.452,18,1.452,19,1.759,21,1.758,25,0.035,26,1.113,27,1.165,28,1.315,30,1.113,37,0.61,39,0.773,41,1.758,42,1.804,43,1.236,46,0.837,47,0.853,48,1.452,49,1.452,50,1.452,102,1.921,119,1.35,139,1.02,142,1.593,144,1.754,145,1.328,147,1.593,148,1.593,151,1.02,184,1.609,190,1.02,233,1.285,236,1.784,240,1.215,260,2.205,264,1.593,277,0.018,278,0.024,279,0.018,302,1.921,303,1.754,306,2.109,324,1.941,325,1.474,326,2.322,327,2.109,328,2.869,329,2.869,330,2.571,331,2.882,332,2.322,333,2.166,334,2.166,335,1.941,336,1.386,337,1.941,338,2.166,339,1.215,340,0.778,341,2.772,342,1.941,343,1.593,344,1.593]],["title/components/NgxEditorComponent.html",[345,2.15,346,2.15]],["body/components/NgxEditorComponent.html",[0,0.732,3,0.5,4,0.458,5,0.458,7,0.669,8,0.954,9,0.458,11,1.376,14,0.953,19,0.874,22,1.899,24,1.563,25,0.035,26,1.365,27,0.719,28,0.763,32,0.5,33,1.25,35,1.786,37,0.537,39,0.638,41,1.042,42,0.596,43,1.046,46,0.455,47,0.419,66,1.171,68,1.063,70,1.063,72,2.793,74,2.38,75,0.953,77,1.063,79,1.524,82,1.063,84,0.713,93,3.361,99,0.953,100,1.786,119,0.5,125,1.143,127,2.15,136,1.488,151,0.5,162,1.904,184,1.668,187,0.713,190,1.25,226,0.953,227,2.176,233,0.347,248,2.538,263,2.176,277,0.009,278,0.014,279,0.009,290,1.819,292,1.201,296,1.387,316,1.063,318,1.201,326,1.376,327,1.25,336,0.732,340,0.611,343,0.782,345,2.125,346,2.832,347,2.668,348,1.668,349,1.387,350,1.668,351,2.407,352,1.668,353,2.668,354,3.335,355,3.335,356,3.335,357,1.668,358,2.668,359,2.668,360,1.922,361,1.922,362,2.402,363,1.922,364,2.402,365,1.922,366,3.335,367,1.637,368,1,369,2.668,370,3.335,371,2.668,372,2.668,373,3.811,374,2.668,375,3.811,376,2.218,377,2.668,378,2.656,379,1.668,380,1.668,381,2.668,382,1.668,383,2.668,384,1.668,385,2.668,386,1.668,387,3.335,388,1.668,389,2.668,390,2.218,391,1.668,392,1.668,393,1.668,394,0.953,395,1.201,396,1.524,397,1.387,398,1.668,399,0.713,400,1.668,401,2.402,402,1.668,403,2.668,404,1.668,405,1.668,406,1.668,407,1.668,408,1.668,409,1.668,410,1.668,411,2.402,412,1.668,413,1.387,414,1.387,415,1.668,416,1.668,417,1.668,418,1.668,419,1.668,420,1.668,421,1.387,422,1.668,423,2.668,424,1.668,425,1.387,426,1.668,427,1.668,428,1.668,429,1.668,430,1.387,431,1.668,432,1.668,433,1.668,434,1.668,435,1.668,436,1.668,437,1.387,438,2.668,439,1.668,440,1.668,441,1.668,442,1.668,443,4.156,444,3.001,445,2.668,446,2.772,447,4.666,448,4.667,449,1.668,450,5.036,451,1.668,452,5.665,453,4.667,454,4.848,455,5.237,456,3.335,457,1.668,458,1.668,459,5.237,460,1.668,461,3.335,462,1.668,463,3.361,464,4.263,465,3.811,466,1.668,467,1.668,468,2.668,469,4.445,470,1.668,471,1.668,472,2.668,473,2.218,474,1.387,475,1.668,476,1.668,477,4.167,478,3.335,479,1.668,480,4.667,481,3.811,482,2.668,483,1.668,484,5.489,485,3.168,486,2.402,487,3.168,488,1.668,489,2.402,490,1.668,491,1.668,492,1.668,493,1.063,494,2.218,495,1.201,496,1.668,497,2.668,498,1.668,499,1.668,500,1.387,501,3.335,502,1.668,503,1.668,504,1.668,505,2.668,506,1.668,507,2.668,508,0.861,509,1.7,510,1.668,511,1.668,512,3.811,513,2.668,514,2.668,515,2.668,516,1.668,517,1.668,518,1.668,519,1.668,520,1.668,521,1.668,522,1.668,523,1.668,524,1.668,525,1.201,526,1.387,527,1.668,528,1.668,529,1.668,530,1.668,531,2.668,532,1.387,533,1.668,534,1.668,535,1.201,536,1.376,537,2.218,538,1.668,539,3.811,540,1.668,541,1.668,542,1.668]],["title/interfaces/NgxEditorConfig.html",[302,1.206,339,1.206]],["body/interfaces/NgxEditorConfig.html",[3,1.02,4,0.933,5,0.933,7,0.853,8,1.609,9,0.933,16,1.452,18,1.452,19,1.759,21,1.328,25,0.035,26,1.113,27,1.165,28,1.315,30,1.113,37,0.61,39,0.773,41,1.758,42,1.804,43,1.236,46,0.837,47,0.853,48,1.452,49,1.452,50,1.452,102,1.215,119,1.35,139,1.02,142,1.593,144,1.754,145,1.328,147,1.593,148,1.593,151,1.02,184,1.609,190,1.02,233,1.285,236,1.514,240,1.215,260,2.205,264,1.593,277,0.018,278,0.024,279,0.018,302,1.921,303,1.754,306,2.109,324,1.941,325,1.759,326,2.322,327,2.109,328,2.869,329,2.869,330,2.571,331,2.882,332,2.322,333,2.166,334,2.166,335,1.941,336,1.633,337,1.941,338,2.166,339,1.609,340,1.23,341,2.322,342,1.941,343,1.593,344,1.593]],["title/modules/NgxEditorModule.html",[543,1.74,544,1.581]],["body/modules/NgxEditorModule.html",[0,0.984,3,1.075,4,0.984,5,0.984,11,1.85,22,1.532,24,1.68,25,0.035,26,1.174,27,0.677,28,0.821,35,1.68,37,0.663,51,1.68,66,0.9,84,1.532,125,1.075,127,2.933,233,0.747,277,0.019,278,0.025,279,0.019,339,1.961,346,4.062,351,2.405,360,3.358,361,4.096,362,3.732,363,3.732,364,3.732,365,4.096,367,1.527,390,3.876,394,2.048,396,2.662,397,2.981,399,1.992,493,2.285,535,2.583,543,1.85,544,2.82,545,2.583,546,2.048,547,4.307,548,2.583,549,4.307,550,2.981,551,2.981,552,2.981,553,2.981,554,3.876,555,2.981,556,2.981,557,3.586,558,4.663,559,3.586,560,5.181,561,4.307,562,3.586,563,3.586,564,3.876,565,4.307,566,2.981,567,3.586,568,3.586,569,3.586]],["title/injectables/NgxEditorService.html",[378,2.15,570,2.15]],["body/injectables/NgxEditorService.html",[0,1.33,3,1.142,4,1.045,5,1.045,7,0.955,8,1.732,14,2.174,22,2.071,24,1.784,25,0.035,26,1.247,27,0.915,28,1.109,37,0.727,39,0.742,43,1.045,46,0.822,47,0.955,51,1.784,66,0.955,125,1.142,233,1.11,269,1.247,277,0.02,278,0.026,279,0.02,290,1.587,325,1.587,336,1.54,339,2.006,340,1.109,351,2.75,378,3.088,394,2.174,396,3.382,399,2.571,401,2.743,570,3.397,571,2.743,572,2.427,573,3.808,574,4.846,575,3.166,576,3.166,577,2.271,578,3.166,579,4.029,580,4.029,581,4.432,582,3.166,583,3.491,584,2.743,585,2.427]],["title/injectables/NgxEditorServiceConfig.html",[396,1.926,570,2.15]],["body/injectables/NgxEditorServiceConfig.html",[0,1.296,3,1.096,4,1.003,5,1.003,7,0.917,8,1.687,22,2.234,25,0.035,27,0.987,28,0.837,32,1.568,33,2.45,37,0.72,39,0.723,43,1.003,46,0.847,47,0.917,51,1.713,66,0.917,125,1.096,233,1.089,269,1.197,277,0.02,278,0.025,279,0.02,290,1.712,325,1.712,336,1.636,339,1.975,340,1.265,351,2.85,378,2.329,394,2.087,396,3.155,399,2.361,401,2.633,570,3.332,571,2.633,572,2.329,576,3.039,577,2.45,578,3.039,579,3.924,580,3.924,581,5.075,582,3.039,583,3.4,584,2.633,585,2.329,586,3.655,587,3.655,588,3.655]],["title/interfaces/NodeViews.html",[302,1.206,336,0.926]],["body/interfaces/NodeViews.html",[3,1.061,4,0.971,5,0.971,9,0.971,16,1.511,18,1.511,19,1.787,21,1.381,22,1.511,25,0.035,26,1.513,27,1.145,30,1.158,37,0.622,39,0.788,41,1.805,42,1.84,43,1.269,46,0.793,47,0.888,48,1.511,49,1.511,50,1.511,102,1.265,119,1.386,139,1.061,142,1.658,144,1.825,145,1.381,147,1.658,148,1.658,151,1.061,184,1.652,190,1.061,233,1.292,236,1.544,240,1.265,260,2.23,264,1.658,277,0.019,278,0.025,279,0.019,302,1.951,303,1.825,306,2.165,324,2.02,325,1.513,326,2.384,327,2.165,328,2.945,329,3.28,330,2.639,331,2.939,332,2.384,333,2.254,334,2.254,335,2.02,336,1.498,337,2.02,338,2.254,339,1.265,340,0.81,341,2.384,342,2.02,343,1.658,344,1.658,589,3.538,590,3.538]],["title/changelog.html",[591,1.836,592,1.836,593,2.395]],["body/changelog.html",[2,0.752,5,0.603,9,0.361,10,2.099,11,0.679,20,0.514,25,0.02,32,1.192,33,1.326,37,0.159,39,0.725,46,0.3,47,0.33,51,0.617,72,0.679,79,0.752,84,1.571,111,0.514,125,0.395,136,0.858,151,1.805,153,3.827,157,0.948,162,0.752,186,0.948,190,0.395,226,1.255,236,1.325,269,0.431,277,0.007,278,0.012,279,0.007,290,1.082,306,0.617,313,1.507,320,0.839,325,0.431,336,0.361,340,0.757,344,0.617,345,0.839,349,1.094,367,0.927,368,1.646,376,1.094,399,1.209,414,1.094,437,1.094,444,0.948,446,1.094,447,1.094,450,2.353,464,1.094,485,1.094,486,0.948,487,1.094,489,0.948,495,0.948,500,1.094,526,4.138,536,2.049,543,0.679,546,2.269,548,2.381,577,1.723,593,1.827,594,1.316,595,4.22,596,1.316,597,1.316,598,1.316,599,5.489,600,5.663,601,5.732,602,3.676,603,1.316,604,4.591,605,4.419,606,4.738,607,3.037,608,5.538,609,4.591,610,1.316,611,3.674,612,2.83,613,3.973,614,1.316,615,1.316,616,2.198,617,1.316,618,1.316,619,1.401,620,1.316,621,5.164,622,0.948,623,0.679,624,2.198,625,3.306,626,0.948,627,0.948,628,1.316,629,1.316,630,4.591,631,2.198,632,3.413,633,1.804,634,2.83,635,2.198,636,1.316,637,2.83,638,1.316,639,1.316,640,1.316,641,2.198,642,1.316,643,1.094,644,1.316,645,0.514,646,0.948,647,0.948,648,0.839,649,0.948,650,1.094,651,1.316,652,1.316,653,2.039,654,2.83,655,2.83,656,0.839,657,0.948,658,1.316,659,1.316,660,1.316,661,2.198,662,3.973,663,2.198,664,1.316,665,1.316,666,2.198,667,1.316,668,2.198,669,1.316,670,1.094,671,1.316,672,1.316,673,2.198,674,3.306,675,1.316,676,1.316,677,1.316,678,1.316,679,1.316,680,2.198,681,2.198,682,1.583,683,1.316,684,1.316,685,3.676,686,1.316,687,1.316,688,2.198,689,2.748,690,1.316,691,1.316,692,1.316,693,1.316,694,4.045,695,2.198,696,1.316,697,1.316,698,1.316,699,1.316,700,2.198,701,1.316,702,1.316,703,3.306,704,1.316,705,2.198,706,5.489,707,2.198,708,1.316,709,1.316,710,1.316,711,1.316,712,3.306,713,1.316,714,1.316,715,2.83,716,2.83,717,4.738,718,4.591,719,1.316,720,2.198,721,1.316,722,1.316,723,3.505,724,1.316,725,1.316,726,1.316,727,1.316,728,1.316,729,1.316,730,1.316,731,1.316,732,1.316,733,3.973,734,1.316,735,5.436,736,1.316,737,1.316,738,1.316,739,2.198,740,2.198,741,1.316,742,1.316,743,4.866,744,1.316,745,1.316,746,2.198,747,1.316,748,5.378,749,1.316,750,1.316,751,1.316,752,1.316,753,1.316,754,1.316,755,1.316,756,3.306,757,2.198,758,1.094,759,2.83,760,1.316,761,2.83,762,1.316,763,2.198,764,1.316,765,1.316,766,4.738,767,2.198,768,1.316,769,2.83,770,1.316,771,1.316,772,1.316,773,2.198,774,3.303,775,3.676,776,1.316,777,1.316,778,1.316,779,1.094,780,3.056,781,3.306,782,1.316,783,1.316,784,2.198,785,1.316,786,2.198,787,1.316,788,1.316,789,4.591,790,1.827,791,1.827,792,2.198,793,1.316,794,1.316,795,1.316,796,2.198,797,1.316,798,1.316,799,3.306,800,1.316,801,1.316,802,1.316,803,1.316,804,2.198,805,1.316,806,1.316,807,2.198,808,2.198,809,1.316,810,1.316,811,1.316,812,1.316,813,1.316,814,1.316,815,1.316,816,1.316,817,1.316,818,1.316,819,1.316,820,2.83,821,1.316,822,1.316,823,1.316,824,1.316,825,2.198,826,2.83,827,1.316,828,1.316,829,2.198,830,1.316,831,1.316,832,1.316,833,1.316,834,1.316,835,1.316,836,1.316,837,1.316,838,1.316,839,1.316,840,1.316,841,1.316,842,1.316,843,1.316,844,1.316,845,2.198,846,1.316,847,1.316,848,0.948,849,1.316,850,1.316,851,1.316,852,1.316,853,2.198,854,1.316,855,1.316,856,3.676,857,1.316,858,1.316,859,1.316,860,1.316,861,1.316,862,1.316,863,1.316,864,1.316,865,1.316,866,1.316,867,1.316,868,1.316,869,2.83,870,1.316,871,1.316,872,1.316,873,1.316,874,1.316,875,1.316,876,0.471,877,1.316,878,1.316,879,1.316,880,1.401,881,2.198,882,1.316,883,1.316,884,1.316,885,1.316,886,1.401,887,1.316,888,2.198,889,1.316,890,1.316,891,1.316,892,1.316,893,1.316,894,1.316,895,1.316,896,1.316,897,2.83,898,1.316,899,0.471,900,2.198,901,1.316,902,1.094,903,1.316,904,1.316,905,3.306,906,1.316,907,1.316,908,1.316,909,1.316,910,1.316,911,4.676,912,1.316,913,1.827,914,1.316,915,1.316,916,1.316,917,1.316,918,1.316,919,1.316,920,2.198,921,1.316,922,1.316,923,1.316,924,2.83,925,1.316,926,1.316,927,1.094,928,2.198,929,2.198,930,1.316,931,1.316,932,1.316,933,1.316,934,1.316,935,1.316,936,1.316,937,1.255,938,1.316,939,2.198,940,1.316,941,1.316,942,2.198,943,1.316,944,1.316,945,1.316,946,2.198,947,2.198,948,1.316,949,1.316,950,1.316,951,1.316,952,1.316,953,1.316,954,1.316,955,2.198,956,1.316,957,1.316,958,1.316,959,1.316,960,1.316,961,1.316,962,1.316,963,1.316,964,1.316,965,1.316,966,1.316,967,1.316,968,1.316,969,1.316,970,1.316,971,1.316,972,1.316,973,1.316,974,1.316,975,1.316,976,1.316,977,1.316,978,1.316,979,1.316,980,1.316,981,2.198,982,1.316,983,2.198,984,1.316,985,1.316,986,1.316,987,1.316,988,1.316,989,1.316,990,1.316,991,1.316,992,1.316,993,1.316,994,1.316,995,1.316,996,1.094,997,1.094,998,1.316,999,1.316,1000,1.316,1001,1.316,1002,1.316,1003,1.316,1004,1.316,1005,1.316,1006,1.316,1007,1.316,1008,3.676,1009,1.316,1010,1.316,1011,1.316,1012,1.316,1013,1.316,1014,1.316,1015,1.316,1016,1.316,1017,1.316,1018,1.316,1019,4.419,1020,1.316,1021,2.198,1022,1.316,1023,2.83,1024,1.316,1025,1.316,1026,1.316,1027,1.316,1028,1.316,1029,1.316,1030,1.316,1031,1.316,1032,1.316,1033,1.316,1034,1.316,1035,1.316,1036,1.094,1037,1.316,1038,1.316,1039,1.316,1040,2.198,1041,1.316,1042,1.316,1043,1.316,1044,2.198,1045,1.316,1046,1.316,1047,1.316,1048,3.306,1049,2.83,1050,2.198,1051,1.316,1052,1.316,1053,1.316,1054,1.094,1055,2.198,1056,1.316,1057,1.316,1058,1.316,1059,1.316,1060,1.316,1061,1.094,1062,1.094]],["title/dependencies.html",[546,2.297,682,2.075]],["body/dependencies.html",[25,0.035,277,0.025,278,0.029,279,0.025,394,2.647,395,3.339,546,2.647,1063,4.636,1064,6.318,1065,4.636,1066,4.636,1067,5.468,1068,4.546,1069,4.636,1070,4.636,1071,4.636,1072,4.636,1073,4.636,1074,4.636,1075,4.636,1076,4.636]],["title/miscellaneous/functions.html",[1077,1.486,1078,3.344]],["body/miscellaneous/functions.html",[7,1.116,20,1.737,24,2.777,25,0.034,26,1.984,28,1.356,35,2.5,59,3.843,136,1.737,277,0.024,278,0.029,279,0.024,325,1.457,339,1.59,351,2.295,399,1.901,444,3.843,489,3.843,564,4.435,572,3.4,575,3.698,584,3.204,1077,2.295,1078,3.698,1079,4.435,1080,5.335,1081,5.335,1082,3.698,1083,3.698,1084,3.698,1085,4.449,1086,3.698,1087,3.698,1088,3.698,1089,4.449]],["title/index.html",[7,0.723,591,1.836,592,1.836]],["body/index.html",[0,1,20,1.422,25,0.035,28,1.195,32,1.092,37,0.667,46,0.643,74,2.08,87,1.707,88,1.707,89,1.707,90,1.707,91,1.707,92,1.707,100,1.707,102,1.302,111,1.839,139,1.565,233,0.758,236,1.092,259,1.879,277,0.02,278,0.025,279,0.02,290,1.709,308,2.98,310,2.08,312,2.43,313,1.866,314,2.689,315,2.689,336,1,340,0.834,367,1.917,368,1.787,395,2.623,508,1.879,536,1.879,543,1.879,544,2.207,561,3.028,577,1.707,591,2.321,592,2.321,607,3.392,625,2.623,633,2.321,645,1.422,646,2.623,647,2.623,648,3.001,653,2.623,682,2.623,694,3.028,723,3.028,758,3.028,880,2.321,886,2.321,927,3.028,937,2.08,1054,3.916,1061,3.028,1062,3.028,1090,3.642,1091,3.642,1092,4.71,1093,3.642,1094,3.642,1095,3.642,1096,4.71,1097,4.71,1098,3.642,1099,3.642,1100,3.642,1101,3.642,1102,3.642,1103,3.642,1104,3.028,1105,3.76,1106,3.392,1107,3.392,1108,2.623,1109,3.642,1110,3.642,1111,2.08,1112,2.08,1113,3.028,1114,3.642,1115,3.642,1116,3.642,1117,3.642,1118,3.642,1119,3.642,1120,3.642,1121,3.642,1122,3.642,1123,3.642,1124,3.642,1125,3.642,1126,3.642,1127,3.642,1128,3.642]],["title/license.html",[591,1.836,592,1.836,1129,2.395]],["body/license.html",[25,0.027,277,0.022,278,0.027,279,0.022,493,2.628,607,2.97,611,3.428,689,4.235,902,3.428,911,3.428,1129,3.428,1130,4.124,1131,5.528,1132,4.124,1133,4.124,1134,5.095,1135,4.124,1136,4.124,1137,4.124,1138,4.124,1139,4.124,1140,4.124,1141,5.095,1142,6.236,1143,4.124,1144,4.124,1145,4.124,1146,5.528,1147,4.124,1148,5.095,1149,4.124,1150,4.124,1151,4.124,1152,4.124,1153,4.124,1154,4.124,1155,4.124,1156,4.124,1157,4.124,1158,5.095,1159,4.124,1160,4.124,1161,4.124,1162,4.124,1163,4.124,1164,4.124,1165,4.124,1166,5.095,1167,5.095,1168,4.124,1169,4.124,1170,4.124,1171,3.428,1172,4.124,1173,4.124,1174,4.124,1175,4.124,1176,4.124,1177,4.124,1178,4.124,1179,4.124,1180,4.124,1181,4.124,1182,4.124,1183,4.124,1184,4.124,1185,4.124,1186,4.124,1187,4.124,1188,4.124,1189,3.428,1190,4.124,1191,4.124,1192,4.124,1193,4.124,1194,4.124,1195,4.124,1196,4.124]],["title/modules.html",[545,3.226]],["body/modules.html",[25,0.031,277,0.027,278,0.031,279,0.027,495,3.586,544,2.333,545,3.586,632,3.586,1068,4.139,1197,4.979]],["title/overview.html",[1198,3.724]],["body/overview.html",[2,2.407,25,0.035,127,3.079,187,2.206,277,0.023,278,0.028,279,0.023,303,2.174,316,2.686,317,3.036,319,3.036,345,2.686,346,4.077,360,3.036,361,4.021,362,4.021,363,4.021,364,4.021,365,4.299,493,2.686,535,3.036,543,2.664,544,2.797,546,2.407,547,3.504,548,3.036,549,3.504,550,3.504,551,3.504,552,3.504,553,3.504,554,4.293,555,3.504,571,3.036,1198,3.504]],["title/miscellaneous/typealiases.html",[1077,1.486,1199,4.023]],["body/miscellaneous/typealiases.html",[7,1.136,16,2.303,18,2.303,25,0.033,27,1.125,49,2.303,50,2.303,190,1.357,236,1.617,260,1.618,269,1.765,277,0.024,278,0.029,279,0.024,307,3.668,324,2.584,330,3.078,331,3.287,332,2.969,335,2.584,341,2.78,1077,2.335,1200,4.526,1201,6.331]],["title/miscellaneous/variables.html",[1077,1.486,1202,3.344]],["body/miscellaneous/variables.html",[1,0.97,6,1.096,7,0.382,9,0.68,10,0.869,13,1.579,16,0.65,18,0.65,19,1.183,20,1.224,21,1.224,25,0.035,27,1.162,29,1.096,30,0.812,32,1.831,33,2.861,42,1.607,43,1.17,44,1.096,45,2.864,46,0.582,48,0.65,49,1.699,52,1.579,53,1.785,54,1.785,55,1.785,57,1.785,58,1.579,61,1.785,63,1.579,66,1.449,67,2.258,68,0.97,69,2.864,70,0.97,71,2.258,72,1.278,73,2.258,74,0.869,75,0.869,76,2.864,77,0.97,78,1.785,79,0.869,80,1.785,81,1.785,82,0.97,83,1.785,84,1.699,85,1.096,87,1.161,88,1.161,89,1.161,90,1.161,91,1.161,92,1.161,99,0.869,100,1.693,101,0.785,102,0.886,111,0.968,119,1.453,125,1.667,134,1.785,139,1.631,141,1.785,142,0.713,145,1.945,146,1.096,147,0.713,148,0.713,149,0.97,150,1.096,151,0.743,152,1.096,161,1.785,162,1.79,184,1.422,185,2.302,187,1.699,192,1.998,197,1.096,198,0.97,203,1.785,219,1.096,223,2.434,231,2.258,232,1.096,234,1.579,235,0.97,236,0.94,237,1.096,238,1.096,239,1.785,240,1.292,241,1.785,242,1.096,243,1.096,244,1.785,245,1.785,246,1.096,247,2.258,248,1.415,249,1.096,250,1.096,251,1.096,252,1.096,253,1.096,254,1.096,255,1.096,256,1.096,257,1.096,258,1.998,259,1.617,260,1.675,261,1.096,262,1.096,263,2.434,264,0.713,265,1.096,266,1.096,267,1.785,268,1.785,269,0.498,270,1.096,271,1.096,272,1.096,273,1.096,274,1.096,275,1.096,276,1.096,277,0.008,278,0.013,279,0.008,290,0.812,304,1.266,305,4.238,306,2.389,307,0.97,308,2.566,309,1.096,310,2.063,311,1.266,312,1.617,313,1.675,314,2.675,315,2.675,316,0.97,317,1.096,318,1.096,319,1.096,320,0.97,326,1.278,336,0.418,339,0.544,340,0.348,341,0.785,342,2.434,343,1.161,344,1.469,351,1.278,463,1.096,509,1.579,532,1.266,556,2.06,565,2.06,566,1.266,572,1.579,583,1.785,585,2.302,648,0.97,670,2.06,848,1.785,1077,0.785,1079,3.737,1082,2.06,1083,2.06,1084,1.266,1086,1.266,1087,1.266,1088,1.266,1111,0.869,1112,0.869,1202,1.266,1203,5.098,1204,3.613,1205,4.495,1206,2.478,1207,2.478,1208,3.135,1209,3.135,1210,2.478,1211,3.135,1212,1.522,1213,1.522,1214,1.522,1215,1.522,1216,1.522,1217,3.613,1218,3.135,1219,2.258,1220,1.522,1221,2.606,1222,3.613,1223,2.478,1224,1.522,1225,1.522,1226,1.522,1227,1.522,1228,3.135,1229,1.522,1230,1.522,1231,1.522,1232,1.522,1233,1.522,1234,1.522,1235,1.522,1236,3.135,1237,1.522,1238,2.478,1239,1.522,1240,1.522,1241,1.522,1242,1.522,1243,1.522,1244,1.522,1245,1.522,1246,3.135,1247,2.478,1248,1.522,1249,1.266,1250,1.522,1251,1.522,1252,1.522,1253,1.522,1254,1.522,1255,1.522,1256,1.522,1257,1.522,1258,1.522,1259,1.522,1260,1.522,1261,1.522,1262,1.522,1263,1.522,1264,1.522,1265,1.522,1266,1.522]],["title/additional-documentation/configuration.html",[876,1.03,899,1.03,937,1.645]],["body/additional-documentation/configuration.html",[20,1.663,25,0.035,28,1.283,32,1.277,37,0.515,46,0.71,87,1.995,88,1.995,89,1.995,90,1.995,91,1.995,92,1.995,100,1.995,102,1.522,111,2.029,139,1.682,236,1.277,259,2.197,277,0.023,278,0.028,279,0.023,290,1.701,308,3.202,310,2.431,312,2.68,313,2.004,314,2.967,315,2.967,336,1.169,340,0.975,367,1.394,368,1.277,508,2.197,577,1.995,623,2.197,645,1.663,646,3.067,647,3.067,648,2.714,937,2.431,1104,3.54,1105,3.742,1106,3.067,1107,3.067,1108,3.067,1111,2.431,1112,2.431,1113,3.54]],["title/additional-documentation/ngmodel.html",[876,1.03,880,1.836,899,1.03]],["body/additional-documentation/ngmodel.html",[0,1.319,25,0.034,39,0.736,190,1.675,248,3.189,277,0.026,278,0.03,279,0.026,411,3.462,425,3.996,619,3.063,880,3.063,1036,3.996,1267,4.807,1268,4.807,1269,4.807,1270,3.996]],["title/additional-documentation/history.html",[656,1.836,876,1.03,899,1.03]],["body/additional-documentation/history.html",[25,0.034,37,0.656,39,0.83,277,0.025,278,0.029,279,0.025,340,1.047,368,1.372,525,3.907,632,3.907,645,1.787,649,3.295,656,3.891,657,4.165,780,4.51,1271,3.804,1272,4.575,1273,3.804,1274,4.51,1275,4.51,1276,4.575,1277,3.907,1278,3.804]],["title/additional-documentation/shortcuts.html",[649,2.075,876,1.03,899,1.03]],["body/additional-documentation/shortcuts.html",[25,0.035,37,0.73,38,2.976,39,0.884,40,2.633,46,0.756,111,2.161,277,0.022,278,0.027,279,0.022,309,2.976,312,2.131,313,1.477,340,1.167,367,1.67,368,1.53,486,2.976,627,2.976,645,1.992,657,4.354,790,3.435,1219,2.976,1271,4.24,1273,4.24,1277,4.275,1279,4.132,1280,4.132,1281,4.132,1282,4.132,1283,3.435,1284,4.132,1285,4.132,1286,5.101,1287,4.132,1288,4.132,1289,4.132,1290,4.132,1291,5.533,1292,4.132,1293,4.132,1294,4.132]],["title/additional-documentation/html.html",[536,1.486,876,1.03,899,1.03]],["body/additional-documentation/html.html",[25,0.035,37,0.717,39,0.819,46,0.73,47,1.342,66,1.436,101,2.305,166,3.218,277,0.024,278,0.029,279,0.024,367,1.751,368,1.604,430,4.447,536,3.061,1270,3.714,1295,4.468,1296,4.468,1297,4.468,1298,4.468,1299,4.468,1300,4.468,1301,4.468,1302,4.468,1303,4.468,1304,4.468,1305,4.468,1306,4.468,1307,4.468,1308,4.468]],["title/additional-documentation/menu-plugin.html",[290,0.823,325,0.823,876,0.899,899,0.899]],["body/additional-documentation/menu-plugin.html",[9,1.397,19,1.132,20,1.35,25,0.035,27,0.859,28,0.791,30,1.132,32,1.365,37,0.653,39,0.529,42,1.627,43,1.249,46,0.695,50,1.476,52,2.202,58,2.202,66,1.476,72,1.783,75,1.973,87,1.619,88,1.619,89,1.619,90,1.619,91,1.619,92,1.619,100,1.619,101,1.783,102,1.235,111,1.777,115,2.489,116,2.489,117,2.489,125,1.526,136,1.35,139,1.526,151,1.526,158,2.489,184,1.235,185,2.9,187,1.476,188,3.278,190,1.036,198,2.202,221,2.489,222,2.489,226,1.973,227,1.973,228,2.489,229,2.489,233,0.72,236,1.036,259,1.783,269,1.132,277,0.019,278,0.024,279,0.019,290,1.889,308,2.906,310,1.973,312,2.348,313,1.819,314,2.599,315,2.599,325,1.49,332,2.348,340,0.791,367,1.49,368,1.365,443,2.873,508,1.783,536,1.783,537,2.873,577,1.619,623,2.348,625,2.489,633,3.243,645,1.35,886,3.446,1105,2.489,1106,2.489,1107,2.489,1108,2.489,1111,1.973,1112,1.973,1309,3.456,1310,3.456,1311,3.456,1312,3.456,1313,3.456,1314,3.456,1315,4.551,1316,2.873,1317,3.456,1318,2.873,1319,3.456,1320,3.456,1321,3.456,1322,3.456,1323,3.456,1324,3.456,1325,3.456]],["title/additional-documentation/schema.html",[46,0.393,876,1.03,899,1.03]],["body/additional-documentation/schema.html",[9,1.073,25,0.035,30,1.28,32,1.618,37,0.652,39,0.598,46,0.827,47,0.981,66,1.354,84,1.67,110,2.49,119,1.172,125,1.477,136,1.924,145,1.526,233,0.814,258,2.49,277,0.021,278,0.026,279,0.021,290,1.28,327,2.308,367,1.613,368,1.477,399,1.67,474,4.095,509,2.49,577,1.831,585,2.49,622,2.815,623,2.016,633,2.49,643,3.249,645,1.526,653,2.815,937,2.813,997,3.249,1171,3.249,1219,3.548,1221,4.485,1318,3.249,1326,3.249,1327,3.249,1328,3.249,1329,3.249,1330,4.926,1331,4.926,1332,4.926,1333,4.926,1334,5.665,1335,3.908,1336,3.908,1337,3.908,1338,3.908,1339,3.908,1340,3.908,1341,3.908,1342,3.908,1343,3.908,1344,3.908,1345,3.908]],["title/additional-documentation/inline-code-editor.html",[313,0.797,368,0.669,508,1.15,876,0.797,899,0.797]],["body/additional-documentation/inline-code-editor.html",[0,0.663,9,1.153,10,1.38,19,1.516,25,0.035,27,0.456,30,0.791,33,1.132,37,0.674,39,0.789,40,1.54,41,2.08,43,0.974,46,0.484,47,0.606,66,1.441,84,1.515,99,2.643,110,1.54,119,1.479,125,1.546,127,2.167,136,0.944,151,1.064,175,1.741,187,2.334,190,1.064,227,1.38,240,1.762,260,1.502,269,0.791,277,0.013,278,0.019,279,0.013,292,2.555,313,1.268,327,2.31,336,0.663,337,3.119,343,1.132,344,1.662,367,0.791,368,1.388,413,2.009,421,2.009,463,1.741,494,2.009,508,1.247,525,2.555,544,1.132,595,2.009,622,1.741,623,1.247,627,1.741,645,0.944,650,2.009,656,1.54,779,2.009,791,2.009,848,1.741,886,3.142,913,2.009,996,2.949,1189,2.009,1274,2.009,1275,2.009,1277,3.334,1278,2.009,1283,2.009,1316,2.009,1326,2.009,1327,2.009,1328,2.009,1329,2.009,1346,2.417,1347,2.417,1348,2.417,1349,3.547,1350,2.417,1351,2.417,1352,3.547,1353,2.417,1354,4.542,1355,4.202,1356,2.417,1357,4.629,1358,2.417,1359,2.417,1360,2.417,1361,2.417,1362,2.417,1363,2.417,1364,2.417,1365,2.417,1366,2.417,1367,2.417,1368,2.417,1369,2.417,1370,4.202,1371,4.629,1372,2.417,1373,2.417,1374,2.417,1375,2.417,1376,2.417,1377,2.417,1378,2.417,1379,3.547,1380,2.417,1381,2.417,1382,2.417,1383,2.417,1384,2.417,1385,2.417,1386,2.417,1387,2.417,1388,2.417,1389,2.417,1390,2.417,1391,2.417,1392,4.93,1393,2.417,1394,2.417,1395,2.417,1396,2.417,1397,2.417,1398,2.417,1399,4.202,1400,2.417,1401,2.417,1402,2.417,1403,2.417,1404,2.417,1405,2.417,1406,2.417,1407,2.417,1408,2.417,1409,4.202,1410,2.417,1411,4.202,1412,2.417,1413,2.417,1414,2.417,1415,2.417,1416,2.417,1417,2.417,1418,2.417,1419,3.547,1420,2.417,1421,2.417,1422,2.417,1423,2.417,1424,2.417,1425,2.417,1426,2.417,1427,2.417,1428,2.417,1429,2.417,1430,3.547,1431,2.417,1432,2.009,1433,3.547,1434,3.547,1435,2.417,1436,2.417,1437,4.629,1438,3.547,1439,2.417,1440,2.417,1441,2.417,1442,2.417,1443,3.547,1444,2.417,1445,2.417,1446,2.417,1447,2.417,1448,2.417]],["title/additional-documentation/input-rules.html",[619,1.602,626,1.811,876,0.899,899,0.899]],["body/additional-documentation/input-rules.html",[4,0.813,25,0.035,27,1.006,35,2.379,37,0.568,39,0.628,45,3.938,46,0.693,47,0.743,66,0.743,111,1.982,119,1.654,125,1.654,136,1.156,139,1.23,223,2.685,233,1.148,240,1.905,269,1.805,277,0.016,278,0.022,279,0.016,313,1.681,320,1.887,325,1.343,340,0.678,367,0.97,368,1.23,399,1.265,411,2.133,473,2.462,509,2.997,543,1.527,544,1.388,619,3.672,623,1.527,626,3.971,645,1.156,774,2.462,1111,1.691,1112,2.341,1249,2.462,1354,4.22,1432,2.462,1449,2.961,1450,2.961,1451,2.961,1452,2.961,1453,2.961,1454,2.961,1455,2.961,1456,2.961,1457,2.961,1458,4.703,1459,4.1,1460,4.1,1461,2.961,1462,4.1,1463,2.961,1464,5.983,1465,5.33,1466,4.1,1467,5.33,1468,5.33,1469,5.33,1470,2.961,1471,2.961,1472,4.1,1473,2.961,1474,2.961,1475,2.961,1476,4.703,1477,2.961,1478,4.1,1479,2.961,1480,2.961,1481,2.961,1482,2.961,1483,2.961,1484,2.961,1485,4.1,1486,2.961,1487,2.961,1488,2.961,1489,2.961,1490,2.961,1491,2.961,1492,2.961,1493,2.961,1494,2.961,1495,2.961,1496,2.961,1497,4.1,1498,2.961,1499,2.961,1500,2.961,1501,2.961,1502,2.961,1503,2.961,1504,2.961,1505,2.961,1506,4.1,1507,2.961,1508,2.961,1509,2.961,1510,2.961,1511,2.961,1512,2.961]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["0",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.2",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.10.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["100",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":316,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":848,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":911,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":611,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":317,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":318,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":504,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":319,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":320,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.4",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6e13142",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["84104c2",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["9.1.9",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["90f88a5",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a9262c2",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1165,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1190,"title":{},"body":{"license.html":{}}}],["actions",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":542,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":625,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":899,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["aliases",{"_index":1200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["alpha.7",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":996,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1156,"title":{},"body":{"license.html":{}}}],["angular",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":395,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["appcomponent",{"_index":1267,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["applications",{"_index":1062,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1101,"title":{},"body":{"index.html":{}}}],["area",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1194,"title":{},"body":{"license.html":{}}}],["around",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":335,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1143,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1482,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1450,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1183,"title":{},"body":{"license.html":{}}}],["auto",{"_index":758,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":913,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1289,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1488,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1288,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1502,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1331,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1330,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1310,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":1466,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1470,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1505,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":308,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":344,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":548,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{}}}],["border",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1197,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1068,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsers",{"_index":1116,"title":{},"body":{"index.html":{}}}],["bug",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1506,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1112,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":315,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1483,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1132,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["ce00b5f",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":593,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":595,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["characters",{"_index":1492,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1138,"title":{},"body":{"license.html":{}}}],["check",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1118,"title":{},"body":{"index.html":{}}}],["ci",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1186,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":550,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":551,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":552,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1364,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1429,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":313,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1316,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1345,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1333,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1489,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1448,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":886,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1431,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1350,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1427,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1362,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1321,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1323,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["compatibility",{"_index":1114,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":723,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":345,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["component_template",{"_index":540,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":347,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1351,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1164,"title":{},"body":{"license.html":{}}}],["config",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":937,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1276,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1309,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1195,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(html);generating",{"_index":1304,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":582,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":573,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":283,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":377,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1298,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1191,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1158,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1141,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1131,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["corresponds",{"_index":1494,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["creates",{"_index":1491,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1501,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["css",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1430,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":633,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1475,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1187,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1480,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1342,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1145,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1196,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":547,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["decoration",{"_index":328,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":338,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":583,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1449,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1054,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":546,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":569,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1443,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":148,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":342,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1154,"title":{},"body":{"license.html":{}}}],["div",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["docs",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":607,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1109,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1108,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1302,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1320,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1315,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1325,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1324,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1339,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1314,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1338,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1305,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1308,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1297,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1303,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1473,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1435,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1120,"title":{},"body":{"index.html":{}}}],["edit",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":368,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["editor's",{"_index":791,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":563,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":372,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":370,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":382,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":380,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":572,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":587,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":586,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":588,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":574,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1107,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1329,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorinitialized",{"_index":400,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1099,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1322,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1306,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":1463,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["em",{"_index":311,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1462,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":670,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":780,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1283,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":902,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1115,"title":{},"body":{"index.html":{}}}],["example",{"_index":623,"title":{},"body":{"changelog.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":627,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1347,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1440,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["exporting",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":549,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1174,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1144,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["firefox",{"_index":1122,"title":{},"body":{"index.html":{}}}],["firing",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1317,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1179,"title":{},"body":{"license.html":{}}}],["fix",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1472,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1163,"title":{},"body":{"license.html":{}}}],["font",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["forms",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":1103,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1137,"title":{},"body":{"license.html":{}}}],["from.blockrange($to",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(range.depth).type",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1078,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1161,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1296,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1125,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1337,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":291,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":337,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":591,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1465,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1117,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1136,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handle",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["handlebars",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1496,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1135,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":656,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1184,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":536,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1307,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1300,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1456,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1327,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1287,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1272,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1455,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1273,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1279,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1346,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1113,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1318,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1127,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1106,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":305,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1175,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["imported",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1100,"title":{},"body":{"index.html":{}}}],["imports/variables",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1168,"title":{},"body":{"license.html":{}}}],["including",{"_index":1148,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1363,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":589,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":570,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":571,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":562,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":566,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":508,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":619,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1464,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1458,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1092,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1091,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":302,"title":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":303,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1311,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(node.firstchild.type",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islistitemactive",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitemactive(state",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":310,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":312,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1268,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":306,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":657,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1294,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":333,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1173,"title":{},"body":{"license.html":{}}}],["labels",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1334,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":535,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1188,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1185,"title":{},"body":{"license.html":{}}}],["license",{"_index":1129,"title":{"license.html":{}},"body":{"license.html":{}}}],["liftlistitem",{"_index":1281,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1285,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1149,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1176,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":1504,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["literal",{"_index":307,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1428,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1094,"title":{},"body":{"index.html":{}}}],["manually",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1476,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1478,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1500,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["maximum",{"_index":1490,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1497,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1442,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":290,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":280,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":295,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":64,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":63,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":149,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewspec",{"_index":48,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":341,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1178,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1152,"title":{},"body":{"license.html":{}}}],["meta",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1119,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1077,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1130,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1277,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":47,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1151,"title":{},"body":{"license.html":{}}}],["module",{"_index":543,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{}}}],["modules",{"_index":545,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1313,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1121,"title":{},"body":{"index.html":{}}}],["multi",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":650,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["newend",{"_index":1357,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1352,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1360,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1358,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1361,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngafterviewinit",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngmodel",{"_index":880,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngx",{"_index":367,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngx_editor_config_token",{"_index":565,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":296,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":346,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":339,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":544,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditormodule.forroot",{"_index":645,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":378,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":396,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1343,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1479,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1344,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodes",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1332,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":329,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":336,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1182,"title":{},"body":{"license.html":{}}}],["notable",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1166,"title":{},"body":{"license.html":{}}}],["now",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1096,"title":{},"body":{"index.html":{}}}],["null",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":585,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1140,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1355,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1353,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1359,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1356,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":398,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1269,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["oninit",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1123,"title":{},"body":{"index.html":{}}}],["option",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1477,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1111,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":314,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1474,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":1193,"title":{},"body":{"license.html":{}}}],["out",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1198,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":682,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":876,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1336,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1180,"title":{},"body":{"license.html":{}}}],["peer",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1134,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1159,"title":{},"body":{"license.html":{}}}],["person",{"_index":1139,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1160,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":325,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1110,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":340,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1481,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1170,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1444,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1447,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":643,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirror/plugins/menu",{"_index":576,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":578,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":327,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1171,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":579,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":564,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":584,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":581,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1153,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1181,"title":{},"body":{"license.html":{}}}],["query",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["quotes",{"_index":1503,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["range",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rc.0",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1451,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1275,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1438,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1326,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1271,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1499,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":297,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["restore",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1147,"title":{},"body":{"license.html":{}}}],["result",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["results",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["return",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1150,"title":{},"body":{"license.html":{}}}],["root",{"_index":580,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["rule",{"_index":1467,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":626,"title":{"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1508,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1510,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1511,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1512,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1509,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1485,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1128,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1328,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1098,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1104,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":46,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1299,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.bullet_list",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1319,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1105,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1349,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["self",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1157,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":774,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1457,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1167,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1278,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":649,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1133,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1495,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["simple",{"_index":1090,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1282,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1286,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1461,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1507,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1142,"title":{},"body":{"license.html":{}}}],["solid",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":647,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1280,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1284,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1079,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../islistitemactive.ts",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitem.ts",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitemactive.ts",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1086,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:167",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:182",{"_index":321,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:190",{"_index":323,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:230",{"_index":322,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:44",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:46",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:60",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":281,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":287,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":285,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":284,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":288,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":289,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":286,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":304,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1088,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":324,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":590,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1124,"title":{},"body":{"index.html":{}}}],["start",{"_index":1354,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["started",{"_index":592,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1486,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.schema",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.selection",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":309,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":349,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["subject",{"_index":1162,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1155,"title":{},"body":{"license.html":{}}}],["submit",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1169,"title":{},"body":{"license.html":{}}}],["such",{"_index":1095,"title":{},"body":{"index.html":{}}}],["support",{"_index":632,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":927,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":790,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tables",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":997,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":330,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":348,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["templateurl",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["text",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1335,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1340,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1469,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1460,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1498,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1348,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1445,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1446,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.forwardselection",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":181,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1270,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1434,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1433,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":293,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":294,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":298,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":301,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":292,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":300,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":299,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1487,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1341,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1291,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1293,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1292,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1290,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":332,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":331,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":334,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1192,"title":{},"body":{"license.html":{}}}],["tr",{"_index":343,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":326,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1312,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":1452,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["transition",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":350,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1468,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1199,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1453,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":51,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1036,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1274,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1436,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1432,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":282,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1301,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":622,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":689,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":779,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":568,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1454,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":567,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":653,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["utils/flatdeep",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1202,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1093,"title":{},"body":{"index.html":{}}}],["video",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1437,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1441,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1126,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1177,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1172,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1189,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1493,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1146,"title":{},"body":{"license.html":{}}}],["work",{"_index":1102,"title":{},"body":{"index.html":{}}}],["working",{"_index":1295,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapinlist(type)(state",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1459,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1484,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1471,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1061,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1439,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1097,"title":{},"body":{"index.html":{}}}],["yes",{"_index":575,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; updates: {}; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem, isListItemActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const one = 1;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n\n        if (isListItem(type, schema)) {\n          isActive = isListItemActive(state, type);\n        } else {\n          isActive = isNodeActive(state, type, menuItem.attrs);\n        }\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; update: (state: any) => void; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem, isListItemActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const one = 1;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n\n        if (isListItem(type, schema)) {\n          isActive = isListItemActive(state, type);\n        } else {\n          isActive = isNodeActive(state, type, menuItem.attrs);\n        }\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, AfterViewInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngAfterViewInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.7 (2020-06-01)\nEnhancements\n\nremove dependencies prosemirror-utils and prosemirror-tables (6e13142)\n\nBug Fixes\n\nhandle null value correctly in input (84104c2)\nfix schema usage in example app (6e13142)\n\nDocumentation\n\nadd input-rules examples (ce00b5f)\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')],\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isListItemActive   (src/.../isListItemActive.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItemActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItemActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, ): boolean => {\n  const { $from, $to } = state.selection;\n  const range = $from.blockRange($to, node => {\n    return node.childCount && isListItem(node.firstChild.type, state.schema);\n  });\n\n  if (!range) {\n    return false;\n  }\n\n  return $from.node(range.depth).type === type;\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isListItemActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
