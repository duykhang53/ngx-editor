var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/DropDownView.html",[0,0.926,1,2.15]],["body/classes/DropDownView.html",[0,1.004,1,2.025,2,0.887,3,0.466,4,0.426,5,0.426,6,1.119,7,0.39,8,0.901,9,1.408,10,2.457,11,1.3,12,3.039,13,2.888,14,1.438,15,1.553,16,1.839,17,3.341,18,1.839,19,1.86,20,1.77,21,1.681,22,1.717,23,2.519,24,0.728,25,0.035,26,0.509,27,0.947,28,0.356,29,2.894,30,1.598,31,1.553,32,0.756,33,1.489,34,1.553,35,1.18,36,1.553,37,0.606,38,1.119,39,0.56,40,1.605,41,0.607,42,1.437,43,1.004,44,1.814,45,1.605,46,0.549,47,0.39,48,1.717,49,1.839,50,2.085,51,0.728,52,0.99,53,1.119,54,1.119,55,1.119,56,1.291,57,1.119,58,0.99,59,1.119,60,1.291,61,1.119,62,1.291,63,0.99,64,2.025,65,1.291,66,1.577,67,1.814,68,0.99,69,2.633,70,0.99,71,1.814,72,1.3,73,2.289,74,0.887,75,0.887,76,2.633,77,0.99,78,1.119,79,1.438,80,1.814,81,1.119,82,1.605,83,1.119,84,1.562,85,1.119,86,1.291,87,0.728,88,0.728,89,0.728,90,0.728,91,0.728,92,0.728,93,3.401,94,1.291,95,1.291,96,2.642,97,1.119,98,3.039,99,1.815,100,2.286,101,2.073,102,0.901,103,1.291,104,1.291,105,1.291,106,1.291,107,2.642,108,2.094,109,1.291,110,0.99,111,0.607,112,1.291,113,1.291,114,2.642,115,2.894,116,2.894,117,2.633,118,1.291,119,0.953,120,3.039,121,1.291,122,1.291,123,1.291,124,1.291,125,1.463,126,1.291,127,0.801,128,1.291,129,1.291,130,1.291,131,1.291,132,1.291,133,1.291,134,3.099,135,1.291,136,1.428,137,1.291,138,1.291,139,0.756,140,1.291,141,3.265,142,1.18,143,1.291,144,0.801,145,0.984,146,1.814,147,1.489,148,1.489,149,2.025,150,1.814,151,1.359,152,1.814,153,1.119,154,1.291,155,1.291,156,1.291,157,1.119,158,2.289,159,1.291,160,1.291,161,2.289,162,0.887,163,1.291,164,1.291,165,1.291,166,1.119,167,1.291,168,1.291,169,1.291,170,1.291,171,1.291,172,1.291,173,1.291,174,1.291,175,2.289,176,1.291,177,1.291,178,1.291,179,2.094,180,2.094,181,1.291,182,2.094,183,1.291,184,1.307,185,2.561,186,1.119,187,1.562,188,1.814,189,2.094,190,0.509,191,2.094,192,1.605,193,1.291,194,1.291,195,1.291,196,2.094,197,1.119,198,0.99,199,1.291,200,1.291,201,1.291,202,1.291,203,2.633,204,1.291,205,1.291,206,1.291,207,1.291,208,1.291,209,1.291,210,1.291,211,2.094,212,2.094,213,2.094,214,1.291,215,2.094,216,1.291,217,1.291,218,1.291,219,1.119,220,1.291,221,1.119,222,1.119,223,0.887,224,1.291,225,1.291,226,0.887,227,0.887,228,1.119,229,1.119,230,1.291,231,1.814,232,1.119,233,0.323,234,0.99,235,0.99,236,0.466,237,1.119,238,1.119,239,1.814,240,0.901,241,1.814,242,1.119,243,1.119,244,1.814,245,1.814,246,1.119,247,2.289,248,0.887,249,1.119,250,1.119,251,1.119,252,1.119,253,1.119,254,1.119,255,1.119,256,1.119,257,1.119,258,0.99,259,0.801,260,0.555,261,1.119,262,1.119,263,0.887,264,0.728,265,1.119,266,1.119,267,1.814,268,1.814,269,0.509,270,1.119,271,1.119,272,1.119,273,1.119,274,1.119,275,1.119,276,1.119,277,0.008,278,0.014,279,0.008]],["title/classes/MenuBarView.html",[0,0.926,280,2.805]],["body/classes/MenuBarView.html",[0,1.004,2,2.088,3,1.097,4,1.004,5,1.004,7,0.918,8,1.688,9,1.436,11,2.436,13,3.522,14,2.088,19,1.978,20,2.329,21,2.289,22,2.548,24,1.714,25,0.035,26,1.198,27,1.08,28,0.837,30,1.546,32,1.097,35,2.213,37,0.668,39,0.723,41,2.159,42,1.688,43,1.296,51,1.714,66,1.312,97,2.634,101,1.887,151,1.757,184,1.87,233,0.762,234,2.331,235,3.009,269,1.198,277,0.02,278,0.025,279,0.02,280,4.348,281,3.657,282,5.23,283,4.723,284,4.723,285,3.657,286,3.657,287,3.657,288,3.657,289,3.657,290,1.546,291,3.657,292,3.401,293,3.657,294,3.657,295,3.657,296,3.041,297,3.657,298,3.657,299,3.657,300,3.657,301,3.657]],["title/interfaces/MenuItemMeta.html",[64,2.15,302,1.206]],["body/interfaces/MenuItemMeta.html",[3,0.978,4,0.895,5,0.895,7,0.818,8,1.566,25,0.035,27,1.201,28,1.21,32,0.978,63,2.791,64,3.151,66,0.818,87,1.528,88,1.528,89,1.528,90,1.528,91,1.528,92,1.528,119,1.825,139,1.838,145,2.356,187,1.394,192,3.617,223,3.311,233,0.912,240,1.166,260,2.157,263,3.409,277,0.018,278,0.024,279,0.018,302,1.166,303,1.683,304,2.712,305,5.179,306,2.931,307,2.791,308,2.823,309,2.349,310,2.501,311,2.712,312,1.683,313,1.889,314,3.018,315,3.018,316,2.079,317,2.349,318,2.349,319,2.349,320,2.079]],["title/classes/MenuItemView.html",[0,0.926,149,2.15]],["body/classes/MenuItemView.html",[0,1.009,1,1.618,2,0.896,3,0.47,4,0.431,5,0.431,6,1.13,7,0.394,8,0.908,9,1.412,10,1.827,11,1.31,12,1.304,13,2.9,14,1.45,16,1.571,17,2.66,18,1.571,19,1.863,20,1.577,21,1.436,22,1.571,24,0.735,25,0.035,26,0.514,27,0.924,28,0.359,29,2.648,30,1.603,32,0.47,33,1.19,35,1.19,37,0.608,38,1.13,39,0.563,40,1.618,41,0.613,42,1.444,43,1.109,44,1.829,45,1.618,46,0.552,47,0.394,48,1.944,49,1.847,50,2.092,51,0.735,52,1,53,1.13,54,1.13,55,1.13,56,1.304,57,1.13,58,1,59,1.13,60,1.304,61,1.13,62,1.304,63,1,64,2.574,65,1.304,66,1.578,67,1.829,68,1,69,2.648,70,1,71,1.829,72,1.31,73,2.304,74,0.896,75,0.896,76,2.648,77,1,78,1.13,79,1.45,80,1.829,81,1.13,82,1.618,83,1.13,84,1.571,85,1.13,86,1.304,87,0.735,88,0.735,89,0.735,90,0.735,91,0.735,92,0.735,93,3.413,94,1.304,95,1.304,96,2.66,97,1.13,98,3.057,99,1.827,100,2.294,101,2.083,102,0.908,103,1.304,104,1.304,105,1.304,106,1.304,107,2.66,108,2.111,109,1.304,110,1,111,0.613,112,1.304,113,1.304,114,2.66,115,2.909,116,2.909,117,2.648,118,1.304,119,0.959,120,3.057,121,1.304,122,1.304,123,1.304,124,1.304,125,1.468,126,1.304,127,0.809,128,1.304,129,1.304,130,1.304,131,1.304,132,1.304,133,1.304,134,3.278,135,1.304,136,1.436,137,1.304,138,1.304,139,0.762,140,1.304,141,3.526,142,1.19,143,1.304,144,0.809,145,0.992,146,1.829,147,1.499,148,1.499,149,2.343,150,1.829,151,1.421,152,1.829,153,1.13,154,1.304,155,1.304,156,1.304,157,1.13,158,2.304,159,1.304,160,1.304,161,2.304,162,0.896,163,1.304,164,1.304,165,1.304,166,1.13,167,1.304,168,1.304,169,1.304,170,1.304,171,1.304,172,1.304,173,1.304,174,1.304,175,2.304,176,1.304,177,1.304,178,2.111,179,2.111,180,2.111,181,1.304,182,2.111,183,1.304,184,1.444,185,2.574,186,1.13,187,1.571,188,1.829,189,2.111,190,0.514,191,2.111,192,1.618,193,1.304,194,1.304,195,1.304,196,2.111,197,1.13,198,1,199,1.304,200,1.304,201,1.304,202,3.057,203,2.648,204,1.304,205,1.304,206,1.304,207,1.304,208,1.304,209,1.304,210,1.304,211,2.111,212,2.111,213,2.111,214,1.304,215,2.111,216,1.304,217,1.304,218,1.304,219,1.13,220,1.304,221,1.13,222,1.13,223,0.896,224,1.304,225,1.304,226,0.896,227,0.896,228,1.13,229,1.13,230,1.304,231,1.829,232,1.13,233,0.327,234,1,235,1,236,0.47,237,1.13,238,1.13,239,1.829,240,0.908,241,1.829,242,1.13,243,1.13,244,1.829,245,1.829,246,1.13,247,2.304,248,0.896,249,1.13,250,1.13,251,1.13,252,1.13,253,1.13,254,1.13,255,1.13,256,1.13,257,1.13,258,1,259,0.809,260,0.561,261,1.13,262,1.13,263,0.896,264,0.735,265,1.13,266,1.13,267,1.829,268,1.829,269,0.514,270,1.13,271,1.13,272,1.13,273,1.13,274,1.13,275,1.13,276,1.13,277,0.008,278,0.014,279,0.008,321,2.539,322,1.569,323,1.569]],["title/interfaces/MenuItemViewSpec.html",[48,1.441,302,1.206]],["body/interfaces/MenuItemViewSpec.html",[3,0.978,4,0.895,5,0.895,7,0.818,8,1.566,9,0.895,16,1.394,18,1.394,19,1.731,21,1.274,25,0.035,26,1.068,27,1.185,28,1.349,30,1.068,37,0.597,39,0.757,41,1.71,42,1.768,43,1.202,46,0.775,47,0.818,48,1.871,49,1.394,50,1.394,102,1.166,119,1.313,139,0.978,142,2.477,144,2.726,145,2.064,147,2.477,148,2.477,151,0.978,184,1.566,190,1.068,233,1.276,236,1.483,240,1.166,260,2.274,264,2.477,277,0.018,278,0.024,279,0.018,302,1.889,303,1.683,306,2.052,307,2.791,324,1.863,325,1.434,326,2.259,327,2.052,328,2.791,329,2.791,330,2.501,331,2.823,332,2.259,333,2.079,334,2.079,335,1.863,336,1.357,337,1.863,338,2.079,339,1.166,340,0.747,341,2.259,342,1.863,343,1.528,344,1.528]],["title/interfaces/MenuOptions.html",[21,1.317,302,1.206]],["body/interfaces/MenuOptions.html",[3,1.018,4,0.932,5,0.932,7,0.852,8,1.608,9,0.932,16,1.45,18,1.45,19,1.758,21,1.757,25,0.035,26,1.112,27,1.165,28,1.314,30,1.112,37,0.61,39,0.772,41,1.757,42,1.803,43,1.235,46,0.837,47,0.852,48,1.45,49,1.45,50,1.45,102,1.92,119,1.349,139,1.018,142,1.591,144,1.751,145,1.326,147,1.591,148,1.591,151,1.018,184,1.608,190,1.112,233,1.284,236,1.784,240,1.214,260,2.205,264,1.591,277,0.018,278,0.024,279,0.018,302,1.92,303,1.751,306,2.108,324,1.938,325,1.473,326,2.32,327,2.108,328,2.866,329,2.866,330,2.568,331,2.88,332,2.32,333,2.163,334,2.163,335,1.938,336,1.385,337,1.938,338,2.163,339,1.214,340,0.777,341,2.77,342,1.938,343,1.591,344,1.591]],["title/components/NgxEditorComponent.html",[345,2.15,346,2.15]],["body/components/NgxEditorComponent.html",[0,0.731,3,0.499,4,0.457,5,0.457,7,0.668,8,0.952,9,0.457,11,1.373,14,0.95,19,0.872,22,1.897,24,1.56,25,0.035,26,1.363,27,0.718,28,0.762,32,0.499,33,1.248,35,1.783,37,0.536,39,0.637,41,1.04,42,0.595,43,1.044,46,0.455,47,0.417,66,1.17,68,1.06,70,1.06,72,2.792,74,2.376,75,0.95,77,1.06,79,1.52,82,1.06,84,0.711,93,3.358,99,0.95,100,1.783,119,0.499,125,1.141,127,2.147,136,1.486,151,0.499,162,1.901,184,1.666,187,0.711,190,1.363,226,0.95,227,2.173,233,0.346,248,2.535,263,2.173,277,0.009,278,0.014,279,0.009,290,1.818,292,1.198,296,1.383,316,1.06,318,1.198,326,1.373,327,1.248,336,0.731,340,0.609,343,0.78,345,2.121,346,2.829,347,2.663,348,1.664,349,1.383,350,1.664,351,2.405,352,1.664,353,2.663,354,3.329,355,3.329,356,3.329,357,1.664,358,2.663,359,2.663,360,1.918,361,1.918,362,2.398,363,1.918,364,2.398,365,1.918,366,3.329,367,1.636,368,0.998,369,2.663,370,3.329,371,2.663,372,2.663,373,3.805,374,2.663,375,3.805,376,2.214,377,2.663,378,2.652,379,1.664,380,1.664,381,2.663,382,1.664,383,2.663,384,1.664,385,2.663,386,1.664,387,3.329,388,1.664,389,2.663,390,2.214,391,1.664,392,1.664,393,1.664,394,0.95,395,1.198,396,1.52,397,1.383,398,1.664,399,0.711,400,1.664,401,2.398,402,1.664,403,2.663,404,1.664,405,1.664,406,1.664,407,1.664,408,1.664,409,1.664,410,1.664,411,2.398,412,1.664,413,1.383,414,1.383,415,1.664,416,1.664,417,1.664,418,1.664,419,1.664,420,1.664,421,1.383,422,1.664,423,2.663,424,1.664,425,1.383,426,1.664,427,1.664,428,1.664,429,1.664,430,1.383,431,1.664,432,1.664,433,1.664,434,1.664,435,1.664,436,1.664,437,1.383,438,2.663,439,1.664,440,1.664,441,1.664,442,1.664,443,4.153,444,2.998,445,2.663,446,2.767,447,4.663,448,4.662,449,1.664,450,5.035,451,1.664,452,5.662,453,4.662,454,4.844,455,5.233,456,3.329,457,1.664,458,1.664,459,5.233,460,1.664,461,3.329,462,1.664,463,3.358,464,4.259,465,3.805,466,1.664,467,1.664,468,2.663,469,4.44,470,1.664,471,1.664,472,2.663,473,2.214,474,1.383,475,1.664,476,1.664,477,4.162,478,3.329,479,1.664,480,4.662,481,3.805,482,2.663,483,1.664,484,5.486,485,3.163,486,2.398,487,3.163,488,1.664,489,2.398,490,1.664,491,1.664,492,1.664,493,1.06,494,2.214,495,1.198,496,1.664,497,2.663,498,1.664,499,1.664,500,1.383,501,3.329,502,1.664,503,1.664,504,1.664,505,2.663,506,1.664,507,2.663,508,0.858,509,1.697,510,1.664,511,1.664,512,3.805,513,2.663,514,2.663,515,2.663,516,1.664,517,1.664,518,1.664,519,1.664,520,1.664,521,1.664,522,1.664,523,1.664,524,1.664,525,1.198,526,1.383,527,1.664,528,1.664,529,1.664,530,1.664,531,2.663,532,1.383,533,1.664,534,1.664,535,1.198,536,1.373,537,2.214,538,1.664,539,3.805,540,1.664,541,1.664,542,1.664]],["title/interfaces/NgxEditorConfig.html",[302,1.206,339,1.206]],["body/interfaces/NgxEditorConfig.html",[3,1.018,4,0.932,5,0.932,7,0.852,8,1.608,9,0.932,16,1.45,18,1.45,19,1.758,21,1.326,25,0.035,26,1.112,27,1.165,28,1.314,30,1.112,37,0.61,39,0.772,41,1.757,42,1.803,43,1.235,46,0.837,47,0.852,48,1.45,49,1.45,50,1.45,102,1.214,119,1.349,139,1.018,142,1.591,144,1.751,145,1.326,147,1.591,148,1.591,151,1.018,184,1.608,190,1.112,233,1.284,236,1.513,240,1.214,260,2.205,264,1.591,277,0.018,278,0.024,279,0.018,302,1.92,303,1.751,306,2.108,324,1.938,325,1.758,326,2.32,327,2.108,328,2.866,329,2.866,330,2.568,331,2.88,332,2.32,333,2.163,334,2.163,335,1.938,336,1.632,337,1.938,338,2.163,339,1.608,340,1.229,341,2.32,342,1.938,343,1.591,344,1.591]],["title/modules/NgxEditorModule.html",[543,1.74,544,1.581]],["body/modules/NgxEditorModule.html",[0,0.983,3,1.074,4,0.983,5,0.983,11,1.848,22,1.53,24,1.678,25,0.035,26,1.173,27,0.676,28,0.82,35,1.678,37,0.663,51,1.678,66,0.899,84,1.53,125,1.074,127,2.932,233,0.746,277,0.019,278,0.025,279,0.019,339,1.96,346,4.062,351,2.403,360,3.356,361,4.094,362,3.729,363,3.729,364,3.729,365,4.094,367,1.526,390,3.873,394,2.045,396,2.66,397,2.978,399,1.991,493,2.283,535,2.58,543,1.848,544,2.819,545,2.58,546,2.045,547,4.305,548,2.58,549,4.305,550,2.978,551,2.978,552,2.978,553,2.978,554,3.873,555,2.978,556,2.978,557,3.582,558,4.659,559,3.582,560,5.178,561,4.305,562,3.582,563,3.582,564,3.873,565,4.305,566,2.978,567,3.582,568,3.582,569,3.582]],["title/injectables/NgxEditorService.html",[378,2.15,570,2.15]],["body/injectables/NgxEditorService.html",[0,1.329,3,1.141,4,1.044,5,1.044,7,0.955,8,1.731,14,2.172,22,2.069,24,1.783,25,0.035,26,1.246,27,0.914,28,1.109,37,0.727,39,0.741,43,1.044,46,0.822,47,0.955,51,1.783,66,0.955,125,1.141,233,1.11,269,1.246,277,0.02,278,0.026,279,0.02,290,1.586,325,1.586,336,1.54,339,2.005,340,1.109,351,2.749,378,3.086,394,2.172,396,3.381,399,2.571,401,2.74,570,3.395,571,2.74,572,2.424,573,3.805,574,4.843,575,3.163,576,3.163,577,2.269,578,3.163,579,4.026,580,4.026,581,4.43,582,3.163,583,3.488,584,2.74,585,2.424]],["title/injectables/NgxEditorServiceConfig.html",[396,1.926,570,2.15]],["body/injectables/NgxEditorServiceConfig.html",[0,1.295,3,1.095,4,1.002,5,1.002,7,0.916,8,1.686,22,2.233,25,0.035,27,0.987,28,0.836,32,1.567,33,2.449,37,0.72,39,0.722,43,1.002,46,0.846,47,0.916,51,1.711,66,0.916,125,1.095,233,1.088,269,1.195,277,0.02,278,0.025,279,0.02,290,1.711,325,1.711,336,1.636,339,1.975,340,1.264,351,2.849,378,2.327,394,2.085,396,3.154,399,2.36,401,2.63,570,3.33,571,2.63,572,2.327,576,3.035,577,2.449,578,3.035,579,3.922,580,3.922,581,5.074,582,3.035,583,3.397,584,2.63,585,2.327,586,3.651,587,3.651,588,3.651]],["title/interfaces/NodeViews.html",[302,1.206,336,0.926]],["body/interfaces/NodeViews.html",[3,1.06,4,0.97,5,0.97,9,0.97,16,1.51,18,1.51,19,1.786,21,1.38,22,1.51,25,0.035,26,1.512,27,1.145,30,1.157,37,0.622,39,0.787,41,1.803,42,1.839,43,1.268,46,0.793,47,0.886,48,1.51,49,1.51,50,1.51,102,1.263,119,1.385,139,1.06,142,1.656,144,1.823,145,1.38,147,1.656,148,1.656,151,1.06,184,1.651,190,1.157,233,1.292,236,1.543,240,1.263,260,2.23,264,1.656,277,0.019,278,0.025,279,0.019,302,1.95,303,1.823,306,2.164,324,2.017,325,1.512,326,2.382,327,2.164,328,2.943,329,3.278,330,2.637,331,2.937,332,2.382,333,2.252,334,2.252,335,2.017,336,1.497,337,2.017,338,2.252,339,1.263,340,0.809,341,2.382,342,2.017,343,1.656,344,1.656,589,3.533,590,3.533]],["title/changelog.html",[591,1.836,592,1.836,593,2.395]],["body/changelog.html",[2,0.765,5,0.613,9,0.368,10,2.12,11,0.691,20,0.523,25,0.02,32,1.202,33,1.046,37,0.162,39,0.682,46,0.183,47,0.336,51,0.628,72,0.691,79,0.765,84,1.587,111,0.523,125,0.402,136,0.872,151,1.809,153,3.794,157,0.965,162,0.765,186,0.965,226,1.274,236,1.335,269,0.439,277,0.007,278,0.012,279,0.007,290,1.095,306,0.628,313,1.52,320,0.854,325,0.439,336,0.368,340,0.765,344,0.628,345,0.854,349,1.114,367,0.939,368,1.653,376,1.114,399,1.225,414,1.114,437,1.114,444,0.965,446,1.114,447,1.114,450,2.384,464,1.114,485,1.114,486,0.965,487,1.114,489,0.965,495,0.965,500,1.114,526,4.162,536,2.068,543,0.691,546,2.12,548,2.408,577,1.74,593,1.855,594,1.34,595,4.243,596,1.34,597,1.34,598,1.34,599,5.511,600,5.644,601,5.717,602,3.713,603,1.34,604,4.623,605,4.453,606,4.623,607,2.888,608,5.559,609,4.453,610,1.34,611,3.534,612,4.623,613,2.232,614,3.207,615,3.435,616,1.827,617,2.867,618,2.232,619,1.34,620,2.867,621,1.34,622,1.34,623,1.34,624,2.232,625,1.34,626,1.114,627,1.34,628,0.523,629,0.965,630,0.965,631,0.854,632,0.965,633,1.114,634,1.34,635,1.34,636,2.065,637,2.867,638,2.867,639,0.854,640,0.965,641,1.34,642,1.34,643,1.34,644,2.232,645,4.009,646,2.232,647,1.34,648,1.34,649,2.232,650,1.34,651,5.104,652,2.232,653,1.34,654,1.114,655,1.34,656,1.34,657,2.232,658,3.343,659,1.34,660,1.34,661,1.34,662,1.34,663,1.34,664,2.232,665,2.232,666,1.607,667,1.34,668,1.34,669,3.713,670,1.34,671,1.34,672,2.232,673,2.78,674,1.34,675,1.34,676,1.34,677,1.34,678,1.34,679,4.07,680,2.232,681,1.34,682,1.34,683,1.34,684,1.34,685,2.232,686,1.34,687,1.34,688,3.343,689,1.34,690,2.232,691,5.511,692,2.232,693,1.34,694,1.34,695,1.34,696,1.34,697,3.343,698,1.34,699,1.34,700,2.867,701,2.867,702,4.769,703,4.623,704,1.34,705,2.232,706,1.34,707,1.34,708,3.534,709,1.34,710,1.34,711,1.34,712,1.34,713,1.34,714,1.34,715,1.34,716,1.34,717,1.34,718,4.009,719,1.34,720,5.459,721,1.34,722,1.34,723,1.34,724,2.232,725,2.232,726,1.34,727,1.34,728,4.895,729,1.34,730,1.34,731,2.232,732,1.34,733,5.401,734,1.34,735,1.34,736,1.34,737,1.34,738,1.34,739,1.34,740,1.34,741,3.343,742,2.232,743,1.114,744,2.867,745,1.34,746,2.867,747,1.34,748,2.232,749,1.34,750,1.34,751,4.769,752,2.232,753,1.34,754,2.867,755,1.34,756,1.34,757,1.34,758,2.232,759,3.333,760,3.713,761,1.34,762,1.34,763,1.34,764,1.114,765,3.087,766,3.343,767,1.34,768,1.34,769,2.232,770,1.34,771,2.232,772,1.34,773,1.34,774,4.623,775,1.855,776,1.855,777,2.232,778,1.34,779,1.34,780,1.34,781,2.232,782,1.34,783,1.34,784,3.343,785,1.34,786,1.34,787,1.34,788,1.34,789,2.232,790,2.232,791,1.34,792,1.34,793,2.232,794,2.232,795,1.34,796,1.34,797,1.34,798,1.34,799,1.34,800,1.34,801,1.34,802,1.34,803,1.34,804,1.34,805,1.34,806,2.867,807,1.34,808,1.34,809,1.34,810,1.34,811,2.232,812,2.867,813,1.34,814,1.34,815,2.232,816,1.34,817,1.34,818,1.34,819,1.34,820,1.34,821,1.34,822,1.34,823,1.34,824,1.34,825,1.34,826,1.34,827,1.34,828,1.34,829,1.34,830,1.34,831,2.232,832,1.34,833,1.34,834,0.965,835,1.34,836,1.34,837,1.34,838,1.34,839,2.232,840,1.34,841,1.34,842,3.713,843,1.34,844,1.34,845,1.34,846,1.34,847,1.34,848,1.34,849,1.34,850,1.34,851,1.34,852,1.34,853,1.34,854,1.34,855,2.867,856,1.34,857,1.34,858,1.34,859,1.34,860,1.34,861,1.34,862,0.479,863,1.34,864,1.34,865,1.34,866,1.422,867,2.232,868,1.34,869,1.34,870,1.34,871,1.34,872,1.422,873,1.34,874,2.232,875,1.34,876,3.713,877,1.34,878,1.34,879,1.34,880,1.34,881,1.34,882,1.34,883,1.34,884,2.867,885,1.34,886,0.479,887,2.232,888,1.34,889,1.114,890,1.34,891,1.34,892,3.343,893,1.34,894,1.34,895,1.34,896,1.34,897,1.34,898,4.692,899,1.34,900,1.855,901,1.34,902,1.34,903,1.34,904,1.34,905,1.34,906,1.34,907,2.232,908,1.34,909,1.34,910,1.34,911,2.867,912,1.34,913,1.34,914,1.114,915,2.232,916,2.232,917,1.34,918,1.34,919,1.34,920,1.34,921,1.34,922,1.34,923,1.34,924,1.274,925,1.34,926,2.232,927,1.34,928,1.34,929,2.232,930,1.34,931,1.34,932,1.34,933,2.232,934,2.232,935,1.34,936,1.34,937,1.34,938,1.34,939,1.34,940,1.34,941,1.34,942,2.232,943,1.34,944,1.34,945,1.34,946,1.34,947,1.34,948,1.34,949,1.34,950,1.34,951,1.34,952,1.34,953,1.34,954,1.34,955,1.34,956,1.34,957,1.34,958,1.34,959,1.34,960,1.34,961,1.34,962,1.34,963,1.34,964,1.34,965,1.34,966,1.34,967,1.34,968,2.232,969,1.34,970,2.232,971,1.34,972,1.34,973,1.34,974,1.34,975,1.34,976,1.34,977,1.34,978,1.34,979,1.34,980,1.34,981,1.34,982,1.34,983,1.114,984,1.114,985,1.34,986,1.34,987,1.34,988,1.34,989,1.34,990,1.34,991,1.34,992,1.34,993,1.34,994,1.34,995,3.713,996,1.34,997,1.34,998,1.34,999,1.34,1000,1.34,1001,1.34,1002,1.34,1003,1.34,1004,1.34,1005,1.34,1006,4.453,1007,1.34,1008,2.232,1009,1.34,1010,2.867,1011,1.34,1012,1.34,1013,1.34,1014,1.34,1015,1.34,1016,1.34,1017,1.34,1018,1.34,1019,1.34,1020,1.34,1021,1.34,1022,1.34,1023,1.114,1024,1.34,1025,1.34,1026,1.34,1027,2.232,1028,1.34,1029,1.34,1030,1.34,1031,2.232,1032,1.34,1033,1.34,1034,1.34,1035,3.343,1036,2.867,1037,2.232,1038,1.34,1039,1.34,1040,1.34,1041,1.114,1042,2.232,1043,1.34,1044,1.34,1045,1.34,1046,1.34,1047,1.34,1048,1.114,1049,1.114]],["title/dependencies.html",[546,2.297,666,2.075]],["body/dependencies.html",[25,0.035,277,0.025,278,0.029,279,0.025,394,2.646,395,3.338,546,2.646,1050,4.635,1051,6.317,1052,4.635,1053,4.635,1054,5.467,1055,4.545,1056,4.635,1057,4.635,1058,4.635,1059,4.635,1060,4.635,1061,4.635,1062,4.635,1063,4.635]],["title/miscellaneous/functions.html",[1064,1.486,1065,3.344]],["body/miscellaneous/functions.html",[7,1.116,20,1.736,24,2.776,25,0.034,26,1.984,28,1.356,35,2.499,59,3.841,136,1.736,277,0.024,278,0.029,279,0.024,325,1.456,339,1.589,351,2.294,399,1.9,444,3.841,489,3.841,564,4.434,572,3.399,575,3.696,584,3.202,1064,2.294,1065,3.696,1066,4.434,1067,5.334,1068,5.334,1069,3.696,1070,3.696,1071,3.696,1072,4.446,1073,3.696,1074,3.696,1075,3.696,1076,4.446]],["title/index.html",[7,0.723,591,1.836,592,1.836]],["body/index.html",[0,0.999,20,1.421,25,0.035,28,1.194,32,1.091,37,0.667,46,0.643,74,2.077,87,1.705,88,1.705,89,1.705,90,1.705,91,1.705,92,1.705,100,1.705,102,1.301,111,1.838,139,1.565,233,0.758,236,1.091,259,1.877,277,0.02,278,0.025,279,0.02,290,1.708,308,2.979,310,2.077,312,2.428,313,1.865,314,2.687,315,2.687,336,0.999,340,0.833,367,1.916,368,1.786,395,2.62,508,1.877,536,1.877,543,1.877,544,2.205,561,3.025,577,1.705,591,2.318,592,2.318,607,3.39,614,2.62,616,2.318,628,1.421,629,2.62,630,2.62,631,2.999,636,2.62,666,2.62,679,3.025,708,3.025,743,3.025,866,2.318,872,2.318,914,3.025,924,2.077,1041,3.913,1048,3.025,1049,3.025,1077,3.638,1078,3.638,1079,4.707,1080,3.638,1081,3.638,1082,3.638,1083,4.707,1084,4.707,1085,3.638,1086,3.638,1087,3.638,1088,3.638,1089,3.638,1090,3.638,1091,3.025,1092,3.757,1093,3.39,1094,3.39,1095,2.62,1096,3.638,1097,3.638,1098,2.077,1099,2.077,1100,3.025,1101,3.638,1102,3.638,1103,3.638,1104,3.638,1105,3.638,1106,3.638,1107,3.638,1108,3.638,1109,3.638,1110,3.638,1111,3.638,1112,3.638,1113,3.638,1114,3.638,1115,3.638]],["title/license.html",[591,1.836,592,1.836,1116,2.395]],["body/license.html",[25,0.027,277,0.022,278,0.027,279,0.022,493,2.626,607,2.968,611,3.426,673,4.233,889,3.426,898,3.426,1116,3.426,1117,4.121,1118,5.526,1119,4.121,1120,4.121,1121,5.092,1122,4.121,1123,4.121,1124,4.121,1125,4.121,1126,4.121,1127,4.121,1128,5.092,1129,6.235,1130,4.121,1131,4.121,1132,4.121,1133,5.526,1134,4.121,1135,5.092,1136,4.121,1137,4.121,1138,4.121,1139,4.121,1140,4.121,1141,4.121,1142,4.121,1143,4.121,1144,4.121,1145,5.092,1146,4.121,1147,4.121,1148,4.121,1149,4.121,1150,4.121,1151,4.121,1152,4.121,1153,5.092,1154,5.092,1155,4.121,1156,4.121,1157,4.121,1158,3.426,1159,4.121,1160,4.121,1161,4.121,1162,4.121,1163,4.121,1164,4.121,1165,4.121,1166,4.121,1167,4.121,1168,4.121,1169,4.121,1170,4.121,1171,4.121,1172,4.121,1173,4.121,1174,4.121,1175,4.121,1176,3.426,1177,4.121,1178,4.121,1179,4.121,1180,4.121,1181,4.121,1182,4.121,1183,4.121]],["title/modules.html",[545,3.226]],["body/modules.html",[25,0.031,277,0.027,278,0.031,279,0.027,495,3.585,544,2.333,545,3.585,615,3.585,1055,4.138,1184,4.978]],["title/overview.html",[1185,3.724]],["body/overview.html",[2,2.405,25,0.035,127,3.079,187,2.205,277,0.023,278,0.028,279,0.023,303,2.173,316,2.684,317,3.034,319,3.034,345,2.684,346,4.076,360,3.034,361,4.019,362,4.019,363,4.019,364,4.019,365,4.299,493,2.684,535,3.034,543,2.662,544,2.797,546,2.405,547,3.502,548,3.034,549,3.502,550,3.502,551,3.502,552,3.502,553,3.502,554,4.291,555,3.502,571,3.034,1185,3.502]],["title/miscellaneous/typealiases.html",[1064,1.486,1186,4.023]],["body/miscellaneous/typealiases.html",[7,1.135,16,2.302,18,2.302,25,0.033,27,1.125,49,2.302,50,2.302,190,1.481,236,1.616,260,1.617,269,1.764,277,0.024,278,0.029,279,0.024,307,3.668,324,2.583,330,3.077,331,3.286,332,2.969,335,2.583,341,2.78,1064,2.333,1187,4.524,1188,6.33]],["title/miscellaneous/variables.html",[1064,1.486,1189,3.344]],["body/miscellaneous/variables.html",[1,0.967,6,1.093,7,0.381,9,0.679,10,0.867,13,1.576,16,0.649,18,0.649,19,1.181,20,1.222,21,1.222,25,0.035,27,1.162,29,1.093,30,0.81,32,1.831,33,2.86,42,1.605,43,1.169,44,1.093,45,2.861,46,0.581,48,0.649,49,1.697,52,1.576,53,1.781,54,1.781,55,1.781,57,1.781,58,1.576,61,1.781,63,1.576,66,1.449,67,2.253,68,0.967,69,2.86,70,0.967,71,2.253,72,1.276,73,2.253,74,0.867,75,0.867,76,2.86,77,0.967,78,1.781,79,0.867,80,1.781,81,1.781,82,0.967,83,1.781,84,1.697,85,1.093,87,1.159,88,1.159,89,1.159,90,1.159,91,1.159,92,1.159,99,0.867,100,1.69,101,0.783,102,0.884,111,0.966,119,1.452,125,1.666,134,1.781,139,1.63,141,1.781,142,0.711,145,1.943,146,1.093,147,0.711,148,0.711,149,0.967,150,1.093,151,0.742,152,1.093,161,1.781,162,1.786,184,1.42,185,2.299,187,1.697,192,1.994,197,1.093,198,0.967,203,1.781,219,1.093,223,2.431,231,2.253,232,1.093,234,1.576,235,0.967,236,0.938,237,1.093,238,1.093,239,1.781,240,1.289,241,1.781,242,1.093,243,1.093,244,1.781,245,1.781,246,1.093,247,2.253,248,1.412,249,1.093,250,1.093,251,1.093,252,1.093,253,1.093,254,1.093,255,1.093,256,1.093,257,1.093,258,1.994,259,1.614,260,1.673,261,1.093,262,1.093,263,2.431,264,0.711,265,1.093,266,1.093,267,1.781,268,1.781,269,0.497,270,1.093,271,1.093,272,1.093,273,1.093,274,1.093,275,1.093,276,1.093,277,0.008,278,0.013,279,0.008,290,0.81,304,1.262,305,4.234,306,2.387,307,0.967,308,2.563,309,1.093,310,2.06,311,1.262,312,1.614,313,1.673,314,2.672,315,2.672,316,0.967,317,1.093,318,1.093,319,1.093,320,0.967,326,1.276,336,0.417,339,0.543,340,0.347,341,0.783,342,2.431,343,1.159,344,1.466,351,1.276,463,1.093,509,1.576,532,1.262,556,2.056,565,2.056,566,1.262,572,1.576,583,1.781,585,2.299,631,0.967,654,2.056,834,1.781,1064,0.783,1066,3.732,1069,2.056,1070,2.056,1071,1.262,1073,1.262,1074,1.262,1075,1.262,1098,0.867,1099,0.867,1189,1.262,1190,5.094,1191,3.607,1192,4.489,1193,2.473,1194,2.473,1195,3.129,1196,3.129,1197,2.473,1198,3.129,1199,1.518,1200,1.518,1201,1.518,1202,1.518,1203,1.518,1204,3.607,1205,3.129,1206,2.253,1207,1.518,1208,2.601,1209,3.607,1210,2.473,1211,1.518,1212,1.518,1213,1.518,1214,1.518,1215,3.129,1216,1.518,1217,1.518,1218,1.518,1219,1.518,1220,1.518,1221,1.518,1222,1.518,1223,3.129,1224,1.518,1225,2.473,1226,1.518,1227,1.518,1228,1.518,1229,1.518,1230,1.518,1231,1.518,1232,1.518,1233,3.129,1234,2.473,1235,1.518,1236,1.262,1237,1.518,1238,1.518,1239,1.518,1240,1.518,1241,1.518,1242,1.518,1243,1.518,1244,1.518,1245,1.518,1246,1.518,1247,1.518,1248,1.518,1249,1.518,1250,1.518,1251,1.518,1252,1.518,1253,1.518]],["title/additional-documentation/configuration.html",[862,1.03,886,1.03,924,1.645]],["body/additional-documentation/configuration.html",[20,1.662,25,0.035,28,1.283,32,1.276,37,0.514,46,0.709,87,1.994,88,1.994,89,1.994,90,1.994,91,1.994,92,1.994,100,1.994,102,1.521,111,2.028,139,1.681,236,1.276,259,2.195,277,0.023,278,0.028,279,0.023,290,1.701,308,3.201,310,2.43,312,2.679,313,2.004,314,2.966,315,2.966,336,1.168,340,0.974,367,1.393,368,1.276,508,2.195,577,1.994,628,1.662,629,3.065,630,3.065,631,2.712,924,2.43,1091,3.538,1092,3.741,1093,3.065,1094,3.065,1095,3.065,1098,2.43,1099,2.43,1100,3.538,1254,2.43]],["title/additional-documentation/ngmodel.html",[862,1.03,866,1.836,886,1.03]],["body/additional-documentation/ngmodel.html",[0,1.319,25,0.034,39,0.736,190,1.828,248,3.188,277,0.026,278,0.03,279,0.026,411,3.461,425,3.995,866,3.062,1023,3.995,1255,3.461,1256,4.806,1257,4.806,1258,4.806,1259,3.995]],["title/additional-documentation/history.html",[639,1.836,862,1.03,886,1.03]],["body/additional-documentation/history.html",[25,0.034,37,0.655,39,0.83,277,0.025,278,0.029,279,0.025,340,1.047,368,1.372,525,3.906,615,3.906,628,1.786,632,3.294,639,3.89,640,4.165,765,4.509,1260,3.802,1261,4.573,1262,3.802,1263,4.509,1264,4.509,1265,4.573,1266,3.906,1267,3.802]],["title/additional-documentation/shortcuts.html",[632,2.075,862,1.03,886,1.03]],["body/additional-documentation/shortcuts.html",[25,0.035,37,0.73,38,2.974,39,0.884,40,2.631,46,0.755,111,2.16,277,0.022,278,0.027,279,0.022,309,2.974,312,2.13,313,1.476,340,1.167,367,1.669,368,1.529,486,2.974,628,1.991,640,4.353,775,3.433,1206,2.974,1260,4.238,1262,4.238,1266,4.274,1268,3.433,1269,4.129,1270,4.129,1271,4.129,1272,4.129,1273,3.433,1274,4.129,1275,4.129,1276,5.098,1277,4.129,1278,4.129,1279,4.129,1280,4.129,1281,5.531,1282,4.129,1283,4.129,1284,4.129]],["title/additional-documentation/html.html",[536,1.486,862,1.03,886,1.03]],["body/additional-documentation/html.html",[25,0.035,37,0.717,39,0.818,46,0.73,47,1.342,66,1.436,101,2.303,166,3.216,277,0.024,278,0.029,279,0.024,367,1.751,368,1.604,430,4.445,536,3.06,1259,3.712,1285,4.466,1286,4.466,1287,4.466,1288,4.466,1289,4.466,1290,4.466,1291,4.466,1292,4.466,1293,4.466,1294,4.466,1295,4.466,1296,4.466,1297,4.466,1298,4.466]],["title/additional-documentation/menu-plugin.html",[290,0.823,325,0.823,862,0.899,886,0.899]],["body/additional-documentation/menu-plugin.html",[9,1.396,19,1.13,20,1.348,25,0.035,27,0.859,28,0.79,30,1.13,32,1.364,37,0.653,39,0.528,42,1.625,43,1.248,46,0.694,50,1.475,52,2.199,58,2.199,66,1.476,72,1.78,75,1.971,87,1.617,88,1.617,89,1.617,90,1.617,91,1.617,92,1.617,100,1.617,101,1.78,102,1.234,111,1.776,115,2.486,116,2.486,117,2.486,125,1.525,136,1.348,139,1.525,151,1.525,158,2.486,184,1.234,185,2.898,187,1.475,188,3.275,190,1.13,198,2.199,221,2.486,222,2.486,226,1.971,227,1.971,228,2.486,229,2.486,233,0.719,236,1.035,259,1.78,269,1.13,277,0.019,278,0.024,279,0.019,290,1.889,308,2.904,310,1.971,312,2.346,313,1.818,314,2.596,315,2.596,325,1.489,332,2.346,340,0.79,367,1.489,368,1.364,443,2.869,508,1.78,536,1.78,537,2.869,577,1.617,614,2.486,616,3.241,628,1.348,872,3.445,1092,2.486,1093,2.486,1094,2.486,1095,2.486,1098,1.971,1099,1.971,1254,2.596,1299,3.451,1300,3.451,1301,3.451,1302,3.451,1303,3.451,1304,3.451,1305,4.547,1306,2.869,1307,3.451,1308,2.869,1309,3.451,1310,3.451,1311,3.451,1312,3.451,1313,3.451,1314,3.451,1315,3.451]],["title/additional-documentation/schema.html",[46,0.393,862,1.03,886,1.03]],["body/additional-documentation/schema.html",[9,1.072,25,0.035,30,1.278,32,1.617,37,0.652,39,0.598,46,0.826,47,0.98,66,1.353,84,1.668,110,2.488,119,1.171,125,1.477,136,1.923,145,1.525,233,0.813,258,2.488,277,0.021,278,0.026,279,0.021,290,1.278,327,2.307,367,1.612,368,1.477,399,1.668,474,4.093,509,2.488,577,1.829,585,2.488,616,2.488,626,3.246,628,1.525,636,2.812,924,2.811,984,3.246,1158,3.246,1206,3.546,1208,4.483,1254,2.229,1308,3.246,1316,3.246,1317,3.246,1318,3.246,1319,3.246,1320,3.246,1321,4.924,1322,4.924,1323,4.924,1324,4.924,1325,5.663,1326,3.904,1327,3.904,1328,3.904,1329,3.904,1330,3.904,1331,3.904,1332,3.904,1333,3.904,1334,3.904,1335,3.904,1336,3.904]],["title/additional-documentation/inline-code-editor.html",[313,0.797,368,0.669,508,1.15,862,0.797,886,0.797]],["body/additional-documentation/inline-code-editor.html",[0,0.662,9,1.152,10,1.377,19,1.514,25,0.035,27,0.455,30,0.79,33,1.13,37,0.673,39,0.788,40,1.537,41,2.079,43,0.972,46,0.484,47,0.605,66,1.441,84,1.513,99,2.641,110,1.537,119,1.477,125,1.544,127,2.165,136,0.942,151,1.062,175,1.737,187,2.333,190,1.16,227,1.377,240,1.761,260,1.5,269,0.79,277,0.013,278,0.019,279,0.013,292,2.551,313,1.266,327,2.308,336,0.662,337,3.117,343,1.13,344,1.659,367,0.79,368,1.387,413,2.005,421,2.005,463,1.737,494,2.005,508,1.244,525,2.551,544,1.13,595,2.005,628,0.942,633,2.005,639,1.537,764,2.005,776,2.005,834,1.737,872,3.139,900,2.005,983,2.944,1176,2.005,1254,1.377,1263,2.005,1264,2.005,1266,3.331,1267,2.005,1268,2.005,1273,2.005,1306,2.005,1316,2.005,1317,2.005,1318,2.005,1319,2.005,1320,2.005,1337,2.412,1338,2.412,1339,2.412,1340,3.542,1341,2.412,1342,2.412,1343,3.542,1344,2.412,1345,4.539,1346,4.197,1347,2.412,1348,4.625,1349,2.412,1350,2.412,1351,2.412,1352,2.412,1353,2.412,1354,2.412,1355,2.412,1356,2.412,1357,2.412,1358,2.412,1359,2.412,1360,2.412,1361,4.197,1362,4.625,1363,2.412,1364,2.412,1365,2.412,1366,2.412,1367,2.412,1368,2.412,1369,2.412,1370,3.542,1371,2.412,1372,2.412,1373,2.412,1374,2.412,1375,2.412,1376,2.412,1377,2.412,1378,2.412,1379,2.412,1380,2.412,1381,2.412,1382,2.412,1383,4.926,1384,2.412,1385,2.412,1386,2.412,1387,2.412,1388,2.412,1389,2.412,1390,4.197,1391,2.412,1392,2.412,1393,2.412,1394,2.412,1395,2.412,1396,2.412,1397,2.412,1398,2.412,1399,2.412,1400,4.197,1401,2.412,1402,4.197,1403,2.412,1404,2.412,1405,2.412,1406,2.412,1407,2.412,1408,2.412,1409,2.412,1410,3.542,1411,2.412,1412,2.412,1413,2.412,1414,2.412,1415,2.412,1416,2.412,1417,2.412,1418,2.412,1419,2.412,1420,2.412,1421,3.542,1422,2.412,1423,2.005,1424,3.542,1425,3.542,1426,2.412,1427,2.412,1428,4.625,1429,3.542,1430,2.412,1431,2.412,1432,2.412,1433,2.412,1434,3.542,1435,2.412,1436,2.412,1437,2.412,1438,2.412,1439,2.412]],["title/additional-documentation/input-rules.html",[862,0.899,886,0.899,1255,1.811,1440,2.09]],["body/additional-documentation/input-rules.html",[4,0.811,25,0.035,27,1.006,35,2.377,37,0.568,39,0.627,45,3.937,46,0.693,47,0.742,66,0.742,111,1.981,119,1.653,125,1.653,136,1.154,139,1.228,223,2.683,233,1.148,240,1.904,269,1.805,277,0.016,278,0.022,279,0.016,313,1.68,320,1.884,325,1.341,340,0.677,367,0.968,368,1.228,399,1.263,411,2.129,473,2.458,509,2.994,543,1.525,544,1.385,628,1.154,759,2.458,1098,1.688,1099,2.338,1236,2.458,1254,1.688,1255,4.149,1345,4.217,1423,2.458,1440,4.582,1441,2.956,1442,2.956,1443,2.956,1444,2.956,1445,2.956,1446,2.956,1447,2.956,1448,2.956,1449,2.956,1450,4.699,1451,4.095,1452,4.095,1453,2.956,1454,4.095,1455,2.956,1456,5.981,1457,5.327,1458,4.095,1459,5.327,1460,5.327,1461,5.327,1462,2.956,1463,2.956,1464,4.095,1465,2.956,1466,2.956,1467,2.956,1468,4.699,1469,2.956,1470,4.095,1471,2.956,1472,2.956,1473,2.956,1474,2.956,1475,2.956,1476,2.956,1477,4.095,1478,2.956,1479,2.956,1480,2.956,1481,2.956,1482,2.956,1483,2.956,1484,2.956,1485,2.956,1486,2.956,1487,2.956,1488,2.956,1489,4.095,1490,2.956,1491,2.956,1492,2.956,1493,2.956,1494,2.956,1495,2.956,1496,2.956,1497,2.956,1498,4.095,1499,2.956,1500,2.956,1501,2.956,1502,2.956,1503,2.956,1504,2.956]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["0",{"_index":463,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["0.10.2",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":522,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2",{"_index":471,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.25rem",{"_index":512,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.2rem",{"_index":460,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3rem",{"_index":462,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.3s",{"_index":491,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5",{"_index":498,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.5rem",{"_index":472,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["0.7rem",{"_index":479,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["00adda2",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["0310191",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["09b69b5",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["0a915f5",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["0b7dd99",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["0f94d1e",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":523,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1",{"_index":187,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["1.10.0",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":510,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1.85rem",{"_index":445,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["10",{"_index":526,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["100",{"_index":527,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1078c69",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["1248db7",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["1737369",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["182152a",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["1a73e8",{"_index":458,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["1c316cb",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["1ed938e",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":482,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["2",{"_index":316,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":834,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["2017",{"_index":898,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":611,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["23adb5e",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["24b92e0",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["26a1a6d",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["2748cc3",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["274dcc7",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["27ccd72",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["2a13ca0",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["2afb2ec",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["2d7d38e",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["2ed79b8",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":453,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["3",{"_index":317,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["30b513c",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["35fbb57",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["36133e1",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["367474f",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["3978843",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["3ddc3b0",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":318,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["40",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["4390502",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["443c994",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["45",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["45752bc",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["47d5ba4",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["47f34ad",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["4bff8e5",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["4eef077",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["4f4967a",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["4fddfac",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":449,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["4rem",{"_index":504,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["5",{"_index":319,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["57e4056",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["5beee77",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["5f176e1",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":320,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["6.5.4",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["6012283",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["613ec52",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["63e401b",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":520,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["65",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["67",{"_index":521,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["68",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["683bbee",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["6c757d",{"_index":533,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["6px",{"_index":524,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["72",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["731f2fc",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["78",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["79",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["7a40862",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["7be2fd6",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["84946ed",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["864a5be",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["8695873",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["87bb04e",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["89389ab",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["8aa0ffd",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["8b2bb27",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["8e3e65b",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["9.1.9",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["90f88a5",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["92",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["94374c4",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["97398ee",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["9f0e19d",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["__dropdownmenu",{"_index":515,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__item",{"_index":528,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["__text",{"_index":507,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["a9262c2",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["a983fd4",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["ab0216b",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1152,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":516,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["acc.concat(array.isarray(val",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accidental",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1177,"title":{},"body":{"license.html":{}}}],["actions",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":72,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["active_dropdown_item_classname",{"_index":80,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["active_menu_item_classname",{"_index":71,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["activeclass",{"_index":147,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["activeel",{"_index":163,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel.length",{"_index":165,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["activeel[0",{"_index":167,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["actual_component",{"_index":542,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["add",{"_index":614,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{}}}],["added",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":886,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["af66d69",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":355,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["aliases",{"_index":1187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":485,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["aligned",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["alpha.4",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["alpha.5",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["alpha.6",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":983,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["and/or",{"_index":1143,"title":{},"body":{"license.html":{}}}],["angular",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["angular/common",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":394,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":395,"title":{},"body":{"components/NgxEditorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["appcomponent",{"_index":1256,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["applications",{"_index":1049,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1088,"title":{},"body":{"index.html":{}}}],["area",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1181,"title":{},"body":{"license.html":{}}}],["around",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.reduce((acc",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arr.slice",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":335,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["arrow",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["asprosemirrorselection(doc",{"_index":1399,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["associated",{"_index":1130,"title":{},"body":{"license.html":{}}}],["asterisk",{"_index":1474,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attaching",{"_index":1442,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["attribute",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":437,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["attrs",{"_index":145,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["attrs)(state",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1170,"title":{},"body":{"license.html":{}}}],["auto",{"_index":743,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["autogenerated",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":900,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["awesome",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1279,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["b174a14",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["b280769",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["b2ddf54",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["b707409",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["b915d68",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["ba350a83",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["ba86da6",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":464,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["backticks",{"_index":1480,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bae2216",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["basekeymap",{"_index":1278,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["basic",{"_index":1494,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["basicmarks",{"_index":1322,"title":{},"body":{"additional-documentation/schema.html":{}}}],["basicnodes",{"_index":1321,"title":{},"body":{"additional-documentation/schema.html":{}}}],["bbe3daa",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1300,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["beta.0",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1381,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["bg",{"_index":455,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bind",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["binding",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["bindings",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":466,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["block",{"_index":509,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["blockquote",{"_index":1458,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blockquoterule(nodetype",{"_index":1462,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blocks",{"_index":1497,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["blur",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["bold",{"_index":308,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["boolean",{"_index":344,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["bootstrap",{"_index":548,"title":{},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"overview.html":{}}}],["border",{"_index":447,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["both",{"_index":415,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["bottom",{"_index":478,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["box",{"_index":468,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["breaking",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1184,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1055,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsers",{"_index":1103,"title":{},"body":{"index.html":{}}}],["bug",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["buildinputrules(schema",{"_index":1498,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["bullet",{"_index":1099,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["bullet_list",{"_index":315,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["bulletlist",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulletlistrule(nodetype",{"_index":1475,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["button",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1119,"title":{},"body":{"license.html":{}}}],["c6a2151",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["c87c5e4",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["c9555b4",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["calc(#{$menubar",{"_index":517,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["called",{"_index":159,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["canexecute",{"_index":188,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["catch",{"_index":422,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ccc",{"_index":502,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["cdfd4bc",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["cebc696",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":487,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["centre",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":1410,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.from",{"_index":1414,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.text",{"_index":1416,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["change.to",{"_index":1415,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["changelog",{"_index":593,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":595,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["characters",{"_index":1484,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["charge",{"_index":1125,"title":{},"body":{"license.html":{}}}],["check",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["chrome",{"_index":1105,"title":{},"body":{"index.html":{}}}],["ci",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1173,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"index.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/inline-code-editor.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"overview.html":{}}}],["classnames",{"_index":142,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["cleanup",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":228,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["clicked",{"_index":155,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["clip",{"_index":467,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["closedropdown",{"_index":120,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["closes",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["cluster_ngxeditormodule",{"_index":550,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_declarations",{"_index":551,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_exports",{"_index":553,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cluster_ngxeditormodule_ngxeditorcomponent_providers",{"_index":552,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["cm",{"_index":1355,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cmd",{"_index":1420,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["code",{"_index":313,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["code_block",{"_index":1306,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["code_mirror",{"_index":1336,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblock",{"_index":1324,"title":{},"body":{"additional-documentation/schema.html":{}}}],["codeblockrule(nodetype",{"_index":1481,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["codeblockview(node",{"_index":1439,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror",{"_index":872,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["codemirror's",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["codemirror(null",{"_index":1365,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror.normalizekeymap",{"_index":1422,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirror/mode/javascript/javascript",{"_index":1341,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorkeymap",{"_index":1418,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["codemirrorview",{"_index":1353,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["color",{"_index":450,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["combinedupdates",{"_index":273,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["combinedupdates.foreach((update",{"_index":276,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":50,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["command(editorview.state",{"_index":1311,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(state",{"_index":1313,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["command(this.editorview.state",{"_index":189,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["commands",{"_index":40,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["commitizen",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["compatibility",{"_index":1101,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["compiler",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":345,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["component_template",{"_index":540,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["components",{"_index":347,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["computechange(oldval",{"_index":1342,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["computechange(this.node.textcontent",{"_index":1411,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["conditions",{"_index":1151,"title":{},"body":{"license.html":{}}}],["config",{"_index":399,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["configuration",{"_index":924,"title":{"additional-documentation/configuration.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/schema.html":{}}}],["configure",{"_index":1265,"title":{},"body":{"additional-documentation/history.html":{}}}],["configured",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["configuring",{"_index":1299,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["connection",{"_index":1182,"title":{},"body":{"license.html":{}}}],["console.error('unable",{"_index":424,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["console.log(html);generating",{"_index":1294,"title":{},"body":{"additional-documentation/html.html":{}}}],["console.warn('unkown",{"_index":257,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":66,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{}}}],["constructor(@optional",{"_index":582,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["constructor(config",{"_index":573,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["constructor(dropdowngroup",{"_index":15,"title":{},"body":{"classes/DropDownView.html":{}}}],["constructor(editorview",{"_index":283,"title":{},"body":{"classes/MenuBarView.html":{}}}],["constructor(menuitem",{"_index":178,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["constructor(ngxeditorservice",{"_index":377,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["constructor(node",{"_index":1357,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["content",{"_index":162,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["contentjson",{"_index":407,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["contentnode",{"_index":1288,"title":{},"body":{"additional-documentation/html.html":{}}}],["contract",{"_index":1178,"title":{},"body":{"license.html":{}}}],["controlvalueaccessor",{"_index":354,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["conventional",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":1145,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1128,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1118,"title":{},"body":{"license.html":{}}}],["corresponds",{"_index":1486,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["create",{"_index":110,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["createeditor",{"_index":373,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["creates",{"_index":1483,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["creating",{"_index":1493,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["css",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["ctrl",{"_index":1421,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["cursor",{"_index":483,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["custom",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["customization",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["cz",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d+)\\.\\s",{"_index":1467,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["d17c1dd",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["d4001c4",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["d4ccc79",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["d99dff2",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["da7d0c7",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["dabac4c",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1174,"title":{},"body":{"license.html":{}}}],["darken($dropdown",{"_index":531,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dash",{"_index":1472,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["data",{"_index":1333,"title":{},"body":{"additional-documentation/schema.html":{}}}],["ddd",{"_index":451,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["dead",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1132,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1183,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":547,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["decoration",{"_index":328,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorations",{"_index":338,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["decorators",{"_index":388,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["default_icon_height",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_icon_width",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_labels",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_options",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_placeholder",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_toolbar",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultconfig",{"_index":583,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["defines",{"_index":1441,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["demo",{"_index":1041,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":546,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":569,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["devdependencies",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["df192b",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1434,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["direct",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":538,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["directives",{"_index":541,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["disable",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":75,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["disabled_classname",{"_index":73,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["disabledclass",{"_index":148,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":342,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["dispatchtransaction",{"_index":435,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["display",{"_index":480,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["distribute",{"_index":1141,"title":{},"body":{"license.html":{}}}],["div",{"_index":203,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.classlist.add(classname",{"_index":206,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.classname",{"_index":232,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["div.innerhtml",{"_index":212,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["div.setattribute(obj[0",{"_index":209,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["doc",{"_index":411,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["docs",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":425,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/ngmodel.html":{}}}],["document.createelement('div",{"_index":101,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["documentation",{"_index":607,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation/menu",{"_index":1096,"title":{},"body":{"index.html":{}}}],["documentation/schema.html",{"_index":1095,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["documented",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["documentfragment",{"_index":1292,"title":{},"body":{"additional-documentation/html.html":{}}}],["dom",{"_index":9,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["dom.addeventlistener('click",{"_index":156,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.addeventlistener('mousedown",{"_index":1310,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.add('ngxeditor__menuitem",{"_index":1305,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor",{"_index":1315,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(`ngxeditor__menuitem",{"_index":1314,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.classlist.toggle(activeclass",{"_index":200,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.classlist.toggle(disabledclass",{"_index":201,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dom.getattribute('data",{"_index":1330,"title":{},"body":{"additional-documentation/schema.html":{}}}],["dom.innerhtml",{"_index":1304,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["dom.textcontent",{"_index":1329,"title":{},"body":{"additional-documentation/schema.html":{}}}],["domparser",{"_index":1295,"title":{},"body":{"additional-documentation/html.html":{}}}],["domparser.fromschema(schema).parse(el).tojson",{"_index":1298,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer",{"_index":1287,"title":{},"body":{"additional-documentation/html.html":{}}}],["domserializer.fromschema(schema).serializefragment(contentnode.content",{"_index":1293,"title":{},"body":{"additional-documentation/html.html":{}}}],["don't",{"_index":226,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/menu-plugin.html":{}}}],["dot",{"_index":1465,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["down",{"_index":1426,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["downgrade",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":100,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["dropdown.addeventlistener('click",{"_index":131,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdownmenu",{"_index":174,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.appendchild(dropdowntext",{"_index":109,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropdwon_item_classname",{"_index":104,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(dropwdown_open_classname",{"_index":126,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.add(selected_dropdown_item_classname",{"_index":169,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(dropwdown_open_classname",{"_index":129,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.classlist.remove(selected_dropdown_item_classname",{"_index":171,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown.contains(e.target",{"_index":118,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdown_items",{"_index":83,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.has(dropdowngroup",{"_index":250,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdown_items.set('heading",{"_index":86,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownfields",{"_index":17,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowngroup",{"_index":29,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":112,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.appendchild(dom",{"_index":172,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.classlist.add(`${dropdwon_item_classname}__dropdownmenu",{"_index":113,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.contains(target",{"_index":124,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownmenu.getelementsbyclassname(active_dropdown_item_classname",{"_index":164,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext",{"_index":105,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.classlist.add(`${dropdwon_item_classname}__text",{"_index":106,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdowntext.textcontent",{"_index":107,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropdownview",{"_index":1,"title":{"classes/DropDownView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview(dropdowngroup",{"_index":252,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdownview.render",{"_index":254,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname",{"_index":76,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["dropdwon_item_classname}__item",{"_index":143,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropupdate",{"_index":160,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["dropwdown_open_classname",{"_index":78,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":115,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.buttons",{"_index":229,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.preventdefault",{"_index":117,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["e.target",{"_index":123,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["e074c7a",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["e8f0fe",{"_index":457,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ease",{"_index":492,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["edge",{"_index":1107,"title":{},"body":{"index.html":{}}}],["edit",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["editable",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":368,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["editor's",{"_index":776,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editor.component",{"_index":563,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.component.html",{"_index":372,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.scss",{"_index":370,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts",{"_index":352,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":391,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":379,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":386,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":382,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":384,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":380,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editor.module.ts",{"_index":556,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["editor.module.ts:16",{"_index":559,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["editor.service",{"_index":397,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["editor.service.ts",{"_index":572,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:17",{"_index":587,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:22",{"_index":586,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:23",{"_index":588,"title":{},"body":{"injectables/NgxEditorServiceConfig.html":{}}}],["editor.service.ts:31",{"_index":574,"title":{},"body":{"injectables/NgxEditorService.html":{}}}],["editor/additional",{"_index":1094,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["editor/tree/master/demo",{"_index":1319,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorinitialized",{"_index":400,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorstate",{"_index":42,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["editorstate.create",{"_index":434,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorusage",{"_index":1086,"title":{},"body":{"index.html":{}}}],["editorview",{"_index":19,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["editorview(this.ngxeditor.nativeelement",{"_index":433,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["editorview.dispatch",{"_index":1312,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["editror",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["ee1555b",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["eed8aaa",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":166,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/html.html":{}}}],["el.innerhtml",{"_index":1296,"title":{},"body":{"additional-documentation/html.html":{}}}],["el.textcontent",{"_index":168,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["element",{"_index":537,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["elementref",{"_index":387,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ellipsis",{"_index":1455,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["em",{"_index":311,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["emdash",{"_index":1454,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["emit",{"_index":414,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["emitter",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":654,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":765,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["enable/disbale",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["encapsulation",{"_index":358,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["enhancements",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":1273,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["entirely",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":423,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["error",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":889,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":500,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["evergreen",{"_index":1102,"title":{},"body":{"index.html":{}}}],["example",{"_index":1254,"title":{},"body":{"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["examples",{"_index":1268,"title":{},"body":{"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["execute",{"_index":158,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["exitcode",{"_index":1338,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["exitcode(view.state",{"_index":1431,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["experimental",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["explorer",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":233,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/input-rules.html":{}}}],["exporting",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":549,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["express",{"_index":1161,"title":{},"body":{"license.html":{}}}],["extrakeys",{"_index":1368,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["f12754b",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["f17d0ef",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["f1f1f1",{"_index":456,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["f49e477",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["f62d945",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":99,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["family",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["fbf9d1d",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["fcdc39b",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["fd3ee1a",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["fdb1b30",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{}}}],["files",{"_index":1131,"title":{},"body":{"license.html":{}}}],["filesystem",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["fill",{"_index":496,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["firefox",{"_index":1109,"title":{},"body":{"index.html":{}}}],["firing",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1307,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["fitness",{"_index":1166,"title":{},"body":{"license.html":{}}}],["fix",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":1379,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["flatdeep",{"_index":61,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(updates",{"_index":274,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["flatdeep(val",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":481,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["fn",{"_index":383,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["focus",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["followed",{"_index":1464,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["following",{"_index":1150,"title":{},"body":{"license.html":{}}}],["font",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["forms",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["formsmodule",{"_index":1090,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":557,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forroot(config",{"_index":558,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["forwardref",{"_index":364,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["forwardselection",{"_index":1394,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["free",{"_index":1124,"title":{},"body":{"license.html":{}}}],["from.blockrange($to",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.marks",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.node(range.depth).type",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":269,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["functions",{"_index":1065,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1148,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1286,"title":{},"body":{"additional-documentation/html.html":{}}}],["generated",{"_index":1112,"title":{},"body":{"index.html":{}}}],["getattrs",{"_index":1328,"title":{},"body":{"additional-documentation/schema.html":{}}}],["getdom",{"_index":202,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["geticonsvg",{"_index":59,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/functions.html":{}}}],["geticonsvg(menuitem.icon",{"_index":265,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["geticonsvg(name",{"_index":1072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmenu(toolbar",{"_index":291,"title":{},"body":{"classes/MenuBarView.html":{}}}],["getpos",{"_index":337,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["gets",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["getseperatordom",{"_index":231,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":591,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getwrapperdom",{"_index":12,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["github",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":1457,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["google",{"_index":1104,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1123,"title":{},"body":{"license.html":{}}}],["grippie",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":258,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["group.foreach((toolbaritem",{"_index":243,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["group.length",{"_index":246,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["h1",{"_index":87,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h2",{"_index":88,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h3",{"_index":89,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h4",{"_index":90,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h5",{"_index":91,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["h6",{"_index":92,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["handlebars",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["handletransactions(tr",{"_index":426,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["handling",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["head",{"_index":1402,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["heading",{"_index":139,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["headingrule(nodetype",{"_index":1488,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["headings",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":444,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["helpers",{"_index":56,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["here",{"_index":631,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{}}}],["hereby",{"_index":1122,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["history",{"_index":639,"title":{"additional-documentation/history.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["hold",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1171,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":454,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["html",{"_index":536,"title":{"additional-documentation/html.html":{}},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{}}}],["html5",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["htmlelement",{"_index":30,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["htmlmixed",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["htmlstring",{"_index":1297,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://developer.mozilla.org/en",{"_index":1290,"title":{},"body":{"additional-documentation/html.html":{}}}],["https://github.com/prosemirror/prosemirror",{"_index":1448,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://github.com/sibiraj",{"_index":1317,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/docs/ref/#commands",{"_index":1277,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#history",{"_index":1261,"title":{},"body":{"additional-documentation/history.html":{}}}],["https://prosemirror.net/docs/ref/#inputrules",{"_index":1447,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["https://prosemirror.net/docs/ref/#keymap",{"_index":1262,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/docs/ref/#schema",{"_index":1269,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["https://prosemirror.net/examples/codemirror",{"_index":1337,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["https://prosemirror.net/examples/footnote",{"_index":1100,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["https://prosemirror.net/examples/schema",{"_index":1308,"title":{},"body":{"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["https://sibiraj",{"_index":1114,"title":{},"body":{"index.html":{}}}],["https://sibiraj.dev/ngx",{"_index":1093,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["husky",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["i18nkey",{"_index":305,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":263,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":259,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["identifiers",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":353,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["implied",{"_index":1162,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["imported",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["imports",{"_index":1087,"title":{},"body":{"index.html":{}}}],["imports/variables",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["improve",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["in6k",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1155,"title":{},"body":{"license.html":{}}}],["including",{"_index":1135,"title":{},"body":{"license.html":{}}}],["incomingchanges",{"_index":1354,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["incompatibility",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":589,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["infinity",{"_index":275,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{}}}],["inherit",{"_index":530,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["initialize",{"_index":1374,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["initialized",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":570,"title":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["injectables",{"_index":571,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"overview.html":{}}}],["injectiontoken",{"_index":562,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["injectiontoken('ngxeditorconfig",{"_index":566,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":508,"title":{"additional-documentation/inline-code-editor.html":{}},"body":{"components/NgxEditorComponent.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["inner",{"_index":1382,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["innerhtml",{"_index":264,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":1255,"title":{"additional-documentation/input-rules.html":{}},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/input-rules.html":{}}}],["inputrule",{"_index":1456,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputrules",{"_index":1450,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["inputs",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["insert/edit",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["inserted",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1079,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1078,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1363,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["instead",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":302,"title":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["interfaces",{"_index":303,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"overview.html":{}}}],["internal",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["internet",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["intialization",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":1301,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["isactive",{"_index":185,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isdropdownopen",{"_index":98,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islastmenugroup",{"_index":241,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islastmenuitem",{"_index":245,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem",{"_index":54,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitem(node.firstchild.type",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islistitem(type",{"_index":196,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["islistitemactive",{"_index":55,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["islistitemactive(state",{"_index":197,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive",{"_index":53,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["ismarkactive(state",{"_index":194,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["isnodeactive",{"_index":52,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["isnodeactive(state",{"_index":198,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["issues",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["italic",{"_index":310,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["italics",{"_index":312,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{}}}],["item",{"_index":452,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["items",{"_index":486,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["itemtype",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":1376,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ivy",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":430,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/html.html":{}}}],["jsondoc",{"_index":1257,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["justify",{"_index":488,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["karma",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":306,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["keymap",{"_index":640,"title":{},"body":{"changelog.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["keymap(basekeymap",{"_index":1284,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["keyof",{"_index":333,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["kind",{"_index":1160,"title":{},"body":{"license.html":{}}}],["labels",{"_index":102,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["labels[menuitem.i18nkey",{"_index":266,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["labels[menuitem.key",{"_index":137,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["labels[this.dropdowngroup",{"_index":108,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["language",{"_index":1325,"title":{},"body":{"additional-documentation/schema.html":{}}}],["later",{"_index":1359,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["latest",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":227,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["legend",{"_index":535,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["level",{"_index":223,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["liability",{"_index":1175,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1172,"title":{},"body":{"license.html":{}}}],["license",{"_index":1116,"title":{"license.html":{}},"body":{"license.html":{}}}],["liftlistitem",{"_index":1271,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["liftlistitem(itemtype)(state",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liftlistitem(schema.nodes.list_item",{"_index":1275,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["lighten",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1136,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1163,"title":{},"body":{"license.html":{}}}],["linenumbers",{"_index":1367,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["link",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":111,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["list_item",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listgroup",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listitem",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":1496,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["literal",{"_index":307,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"interfaces/MenuItemViewSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":1380,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["mac/.test(navigator.platform",{"_index":1419,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["made",{"_index":1385,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["managers",{"_index":1081,"title":{},"body":{"index.html":{}}}],["manually",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":85,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":477,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["mark",{"_index":192,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/schema.html":{}}}],["marktype",{"_index":44,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1468,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1",{"_index":1470,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["match[1].length",{"_index":1492,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["matching",{"_index":278,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["maximum",{"_index":1482,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maxlengthvalidator",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["maxlevel",{"_index":1489,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["maybeescape(unit",{"_index":1433,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["menu",{"_index":290,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["menu_item_classname",{"_index":69,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menubar",{"_index":443,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/menu-plugin.html":{}}}],["menubarview",{"_index":280,"title":{"classes/MenuBarView.html":{}},"body":{"classes/MenuBarView.html":{}}}],["menudom",{"_index":235,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(dom",{"_index":267,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(rendered.dom",{"_index":256,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.appendchild(seperatordom",{"_index":272,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menudom.classname",{"_index":295,"title":{},"body":{"classes/MenuBarView.html":{}}}],["menuindex",{"_index":244,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":134,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitem.attrs",{"_index":199,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.attrs.level",{"_index":140,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.key",{"_index":138,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitem.type",{"_index":191,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemmeta",{"_index":64,"title":{"interfaces/MenuItemMeta.html":{}},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta",{"_index":63,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemsmeta[dropdownitem",{"_index":135,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["menuitemsmeta[toolbaritem",{"_index":261,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview",{"_index":149,"title":{"classes/MenuItemView.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview(menuitem",{"_index":150,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemview.render",{"_index":152,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["menuitemviewspec",{"_index":48,"title":{"interfaces/MenuItemViewSpec.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menulabels",{"_index":341,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menuoptions",{"_index":21,"title":{"interfaces/MenuOptions.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["menuplugin",{"_index":1067,"title":{},"body":{"miscellaneous/functions.html":{}}}],["menuplugin(options",{"_index":1074,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1165,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1139,"title":{},"body":{"license.html":{}}}],["meta",{"_index":65,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["metadata",{"_index":357,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{}}}],["microsoft",{"_index":1106,"title":{},"body":{"index.html":{}}}],["migrate",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":503,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["minheight",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["minwidth",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["mirror",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1064,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatches",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["missing",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1117,"title":{},"body":{"license.html":{}}}],["mod",{"_index":1266,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/inline-code-editor.html":{}}}],["mode",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":47,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/html.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["modify",{"_index":1138,"title":{},"body":{"license.html":{}}}],["module",{"_index":543,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"additional-documentation/input-rules.html":{}}}],["modules",{"_index":545,"title":{"modules.html":{}},"body":{"modules/NgxEditorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":560,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["more",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["mount",{"_index":1303,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["mousedownhandler",{"_index":114,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["mouseevent",{"_index":116,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["move",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["mozilla",{"_index":1108,"title":{},"body":{"index.html":{}}}],["multi",{"_index":365,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{}}}],["nature",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":633,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["newend",{"_index":1348,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval",{"_index":1343,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.charcodeat(newend",{"_index":1351,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.length",{"_index":1349,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["newval.slice(start",{"_index":1352,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["ng",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["ng_value_accessor",{"_index":362,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngafterviewinit",{"_index":439,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngmodel",{"_index":866,"title":{"additional-documentation/ngmodel.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/ngmodel.html":{}}}],["ngmodule",{"_index":561,"title":{},"body":{"modules/NgxEditorModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":441,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngx",{"_index":367,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngx_editor_config_token",{"_index":565,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor",{"_index":74,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__content",{"_index":438,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditor__dropdown",{"_index":77,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__menubar",{"_index":296,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{}}}],["ngxeditor__menuitem",{"_index":70,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__placeholder",{"_index":532,"title":{},"body":{"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditor__seperator",{"_index":68,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorcomponent",{"_index":346,"title":{"components/NgxEditorComponent.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["ngxeditorconfig",{"_index":339,"title":{"interfaces/NgxEditorConfig.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditormodule",{"_index":544,"title":{"modules/NgxEditorModule.html":{}},"body":{"modules/NgxEditorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditormodule.forroot",{"_index":628,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["ngxeditorservice",{"_index":378,"title":{"injectables/NgxEditorService.html":{}},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["ngxeditorservice.config",{"_index":402,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["ngxeditorserviceconfig",{"_index":396,"title":{"injectables/NgxEditorServiceConfig.html":{}},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["node",{"_index":119,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["node.attrs.language",{"_index":1334,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.attrs.order",{"_index":1471,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["node.attrs.text",{"_index":1335,"title":{},"body":{"additional-documentation/schema.html":{}}}],["node.childcount",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodes",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["nodespec",{"_index":1323,"title":{},"body":{"additional-documentation/schema.html":{}}}],["nodetype",{"_index":45,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/input-rules.html":{}}}],["nodeview",{"_index":329,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["nodeviews",{"_index":336,"title":{"interfaces/NodeViews.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/inline-code-editor.html":{}}}],["none",{"_index":501,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["noninfringement",{"_index":1169,"title":{},"body":{"license.html":{}}}],["notable",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["notes",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1153,"title":{},"body":{"license.html":{}}}],["now",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":529,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["npm",{"_index":1083,"title":{},"body":{"index.html":{}}}],["null",{"_index":190,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["obj[1",{"_index":210,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object",{"_index":248,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ngmodel.html":{}}}],["object.assign",{"_index":585,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/schema.html":{}}}],["object.entries(this.spec.attrs).foreach(obj",{"_index":208,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["object.keys(toolbaritem).foreach((dropdowngroup",{"_index":249,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1127,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1400,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldend",{"_index":1346,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["older",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["oldval",{"_index":1344,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.charcodeat(oldend",{"_index":1350,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["oldval.length",{"_index":1347,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["once",{"_index":154,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["onchange",{"_index":398,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["onchange(doc",{"_index":1258,"title":{},"body":{"additional-documentation/ngmodel.html":{}}}],["ondestroy",{"_index":356,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["one",{"_index":186,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["oninit",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":497,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["open",{"_index":79,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opendropdown",{"_index":121,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opendropdown(e",{"_index":132,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["opera",{"_index":1110,"title":{},"body":{"index.html":{}}}],["option",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options",{"_index":20,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["options.labels",{"_index":262,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["options.toolbar",{"_index":237,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1469,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["ordered",{"_index":1098,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["ordered_list",{"_index":314,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["orderedlist",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderedlistrule(nodetype",{"_index":1466,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["otherwise",{"_index":1180,"title":{},"body":{"license.html":{}}}],["out",{"_index":493,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":1370,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["outline",{"_index":534,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["overflow",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1185,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":476,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["package",{"_index":666,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packager",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["packagr",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":459,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["page",{"_index":862,"title":{"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}},"body":{"changelog.html":{}}}],["paragraph",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["parsedoc(contentjson",{"_index":406,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["parsedom",{"_index":1327,"title":{},"body":{"additional-documentation/schema.html":{}}}],["parser",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1167,"title":{},"body":{"license.html":{}}}],["peer",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["peerdependency",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["performance",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1121,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1146,"title":{},"body":{"license.html":{}}}],["person",{"_index":1126,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1147,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":577,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{}}}],["placeholder_classname",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderplugin",{"_index":1068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholderplugin(text",{"_index":1076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placholder('type",{"_index":629,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["plain",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["plugin",{"_index":325,"title":{"additional-documentation/menu-plugin.html":{}},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plugin.html",{"_index":1097,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":340,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/input-rules.html":{}}}],["plush",{"_index":1473,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["pointer",{"_index":499,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["popover",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1157,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1435,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["pos.line",{"_index":1438,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["position",{"_index":505,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["pre",{"_index":474,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/schema.html":{}}}],["prefix",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["prepublishonly",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["prerequisites",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":93,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{}}}],["project",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["propagate",{"_index":1388,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["propagated",{"_index":1386,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properly",{"_index":1373,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["property",{"_index":626,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["prosemirror",{"_index":39,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["prosemirror/plugins/menu",{"_index":576,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirror/plugins/placeholder",{"_index":578,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["prosemirrornode",{"_index":327,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["provide",{"_index":361,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["provided",{"_index":1158,"title":{},"body":{"license.html":{},"additional-documentation/schema.html":{}}}],["providedin",{"_index":579,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["providemyserviceoptions",{"_index":564,"title":{},"body":{"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{}}}],["providemyserviceoptions(config",{"_index":584,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":360,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["public",{"_index":581,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["publish",{"_index":1140,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1168,"title":{},"body":{"license.html":{}}}],["query",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["quotes",{"_index":1495,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["radius",{"_index":448,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["range",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rc.0",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["rc0",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":1443,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["reactive",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["readme",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["recompile",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["redo",{"_index":1264,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["redo(view.state",{"_index":1429,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["redundant",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":1316,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["refactored",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1260,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{}}}],["reflects",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["regexp('^(#{1",{"_index":1491,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["registeronchange",{"_index":374,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registeronchange(fn",{"_index":381,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["registerontouched",{"_index":375,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["relative",{"_index":506,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["release",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":153,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["removed",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":13,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendered",{"_index":253,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu",{"_index":234,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["rendermenu(this.options",{"_index":297,"title":{},"body":{"classes/MenuBarView.html":{}}}],["replaced",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["representation",{"_index":1371,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["reset",{"_index":555,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}],["resizer",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["restore",{"_index":170,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["restriction",{"_index":1134,"title":{},"body":{"license.html":{}}}],["result",{"_index":277,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["results",{"_index":279,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/ngmodel.html":{},"additional-documentation/history.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["return",{"_index":125,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["returns",{"_index":35,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/input-rules.html":{}}}],["rewritten",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":470,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["rgba(60",{"_index":519,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["right",{"_index":494,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["rights",{"_index":1137,"title":{},"body":{"license.html":{}}}],["root",{"_index":580,"title":{},"body":{"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["rule",{"_index":1459,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules",{"_index":1440,"title":{"additional-documentation/input-rules.html":{}},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(blockquoterule(schema.nodes.blockquote",{"_index":1500,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(bulletlistrule(schema.nodes.bullet_list",{"_index":1502,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(codeblockrule(schema.nodes.code_block",{"_index":1503,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(headingrule(schema.nodes.heading",{"_index":1504,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rules.push(orderedlistrule(schema.nodes.ordered_list",{"_index":1501,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["rxjs",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1477,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["s.github.io/ngx",{"_index":1115,"title":{},"body":{"index.html":{}}}],["s/ngx",{"_index":1318,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["same",{"_index":416,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["satisfying",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1085,"title":{},"body":{"index.html":{}}}],["scheama",{"_index":1091,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{}}}],["schedule",{"_index":1375,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schema",{"_index":46,"title":{"additional-documentation/schema.html":{}},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/shortcuts.html":{},"additional-documentation/html.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["schema.marks[menuitem.key",{"_index":193,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodefromjson(contentjson",{"_index":408,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["schema.nodefromjson(this.jsondoc",{"_index":1289,"title":{},"body":{"additional-documentation/html.html":{}}}],["schema.nodes.bullet_list",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.code_block",{"_index":1309,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["schema.nodes.heading",{"_index":220,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes.list_item",{"_index":219,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["schema.nodes.ordered_list",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema.nodes.paragraph",{"_index":222,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["schema.nodes[menuitem.key",{"_index":195,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.nodes[this.menuitem.key",{"_index":217,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["schema.text(change.text",{"_index":1417,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["schemabasic.marks",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemabasic.nodes",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.bulletlist",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.listitem",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemalist.orderedlist",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":1092,"title":{},"body":{"index.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["selected",{"_index":82,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_dropdown_item_classname",{"_index":81,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1340,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selection.eq(state.selection",{"_index":1397,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["selector",{"_index":366,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["self",{"_index":484,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["sell",{"_index":1144,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["seperator_classname",{"_index":67,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["seperatordom",{"_index":271,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":759,"title":{},"body":{"changelog.html":{},"additional-documentation/input-rules.html":{}}}],["setblocktype(toggletype)(state",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setblocktype(type",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setselection(anchor",{"_index":1405,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["settimeout",{"_index":1377,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["setting",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1449,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["setupcommandlisteners",{"_index":214,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["shadow",{"_index":518,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["shall",{"_index":1154,"title":{},"body":{"license.html":{}}}],["shift",{"_index":1267,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["shortcuts",{"_index":632,"title":{"additional-documentation/shortcuts.html":{}},"body":{"changelog.html":{},"additional-documentation/history.html":{}}}],["show",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["sibiraj",{"_index":1120,"title":{},"body":{"license.html":{}}}],["signs",{"_index":1487,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["simple",{"_index":1077,"title":{},"body":{"index.html":{}}}],["sinklistitem",{"_index":1272,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["sinklistitem(schema.nodes.list_item",{"_index":1276,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["size",{"_index":446,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["smartquotes",{"_index":1453,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["smartquotes.concat(ellipsis",{"_index":1499,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["software",{"_index":1129,"title":{},"body":{"license.html":{}}}],["solid",{"_index":469,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["something",{"_index":630,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configuration.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/input-rules.html":{}}}],["space",{"_index":473,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/input-rules.html":{}}}],["spacing",{"_index":461,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["spec",{"_index":141,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["spellcheck",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["splitlistitem",{"_index":1270,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["splitlistitem(schema.nodes.list_item",{"_index":1274,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["src/.../flatdeep.ts",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1066,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../islistitem.ts",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../islistitemactive.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ismarkactive.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isnodeactive.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.ts",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meta.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1070,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../placeholder.ts",{"_index":1069,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toggleblocktype.ts",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../togglelist.ts",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1188,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/ngx",{"_index":351,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/toggleblocktype.ts",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/commands/togglelist.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitem.ts",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/islistitemactive.ts",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/ismarkactive.ts",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/helpers/isnodeactive.ts",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/index.ts",{"_index":1073,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts",{"_index":6,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:167",{"_index":36,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:182",{"_index":321,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:190",{"_index":323,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:230",{"_index":322,"title":{},"body":{"classes/MenuItemView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:44",{"_index":31,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:46",{"_index":23,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menu.ts:60",{"_index":34,"title":{},"body":{"classes/DropDownView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts",{"_index":281,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:10",{"_index":287,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:12",{"_index":285,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:14",{"_index":284,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:25",{"_index":288,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:35",{"_index":289,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/menubarview.ts:9",{"_index":286,"title":{},"body":{"classes/MenuBarView.html":{}}}],["src/lib/prosemirror/plugins/menu/meta.ts",{"_index":304,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{}}}],["src/lib/prosemirror/plugins/placeholder.ts",{"_index":1075,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/schema.ts",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/types.ts",{"_index":324,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/types.ts:23",{"_index":590,"title":{},"body":{"interfaces/NodeViews.html":{}}}],["src/lib/utils/flatdeep.ts",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/utils/icons/index.ts",{"_index":1071,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ssuperczynski",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["stackblitz",{"_index":1111,"title":{},"body":{"index.html":{}}}],["start",{"_index":1345,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["started",{"_index":592,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starting",{"_index":1478,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["state",{"_index":43,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["state.doc.content.size",{"_index":420,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.eq(doc",{"_index":417,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.doc.rangehasmark(from",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.doc.tojson",{"_index":431,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["state.schema",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.selection",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.tr",{"_index":418,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["static",{"_index":390,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{}}}],["store",{"_index":1358,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["string",{"_index":260,"title":{},"body":{"classes/DropDownView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["strong",{"_index":309,"title":{},"body":{"interfaces/MenuItemMeta.html":{},"miscellaneous/variables.html":{},"additional-documentation/shortcuts.html":{}}}],["style",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":349,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":369,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["subject",{"_index":1149,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1142,"title":{},"body":{"license.html":{}}}],["submit",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["subscription",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":1156,"title":{},"body":{"license.html":{}}}],["such",{"_index":1082,"title":{},"body":{"index.html":{}}}],["support",{"_index":615,"title":{},"body":{"changelog.html":{},"modules.html":{},"additional-documentation/history.html":{}}}],["supported",{"_index":914,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["svg",{"_index":495,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"modules.html":{}}}],["switching",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":775,"title":{},"body":{"changelog.html":{},"additional-documentation/shortcuts.html":{}}}],["tabs",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":984,"title":{},"body":{"changelog.html":{},"additional-documentation/schema.html":{}}}],["tags",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":122,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["tcr",{"_index":330,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":348,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["templateurl",{"_index":371,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["text",{"_index":136,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["text/javascript",{"_index":1326,"title":{},"body":{"additional-documentation/schema.html":{}}}],["text/plain",{"_index":1331,"title":{},"body":{"additional-documentation/schema.html":{}}}],["textarea",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["textblock",{"_index":1461,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule",{"_index":1452,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textblocktypeinputrule(new",{"_index":1490,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["textcontent",{"_index":144,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["textselection",{"_index":1339,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["textselection.create(doc",{"_index":1404,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["thanks",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["this.asprosemirrorselection(state.doc",{"_index":1396,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm",{"_index":1364,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.focus",{"_index":1406,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getcursor",{"_index":1436,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getvalue",{"_index":1412,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.getwrapperelement",{"_index":1372,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.hasfocus",{"_index":1395,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('anchor",{"_index":1401,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.indexfrompos(this.cm.getcursor('head",{"_index":1403,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('beforechange",{"_index":1387,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('changes",{"_index":1391,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('cursoractivity",{"_index":1389,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.on('focus",{"_index":1393,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.posfromindex(head",{"_index":1408,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.refresh",{"_index":1378,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.setselection(this.cm.posfromindex(anchor",{"_index":1407,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.cm.somethingselected",{"_index":1437,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.codemirrorkeymap",{"_index":1369,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.config",{"_index":401,"title":{},"body":{"components/NgxEditorComponent.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{}}}],["this.createeditor",{"_index":440,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.dom",{"_index":175,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.dom.addeventlistener('mousedown",{"_index":225,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields",{"_index":95,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdownfields.foreach(dropdownitem",{"_index":133,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.dropdowngroup",{"_index":94,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorinitialized",{"_index":403,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.editorview",{"_index":96,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.dispatch",{"_index":230,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.editorview.state",{"_index":182,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.forwardselection",{"_index":1390,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getdom",{"_index":181,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.getpos",{"_index":1361,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.getwrapperdom",{"_index":176,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.handletransactions.bind(this",{"_index":436,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.incomingchanges",{"_index":1362,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.jsondoc",{"_index":1259,"title":{},"body":{"additional-documentation/ngmodel.html":{},"additional-documentation/html.html":{}}}],["this.maybeescape('char",{"_index":1425,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.maybeescape('line",{"_index":1424,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.menuitem",{"_index":179,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.attrs.level",{"_index":224,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.menuitem.type",{"_index":215,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.node",{"_index":1360,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.node.textcontent",{"_index":1366,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.onchange",{"_index":405,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.onchange(json",{"_index":432,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.options",{"_index":97,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{}}}],["this.options.labels",{"_index":103,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.parsedoc(value",{"_index":412,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.render",{"_index":293,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.setupcommandlisteners",{"_index":183,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec",{"_index":180,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.attrs",{"_index":207,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames",{"_index":204,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.classnames.foreach(classname",{"_index":205,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.innerhtml",{"_index":211,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.spec.textcontent",{"_index":213,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.update",{"_index":294,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatecontent(value",{"_index":404,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.updatemenuitems",{"_index":298,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updatemenuitems(this.view.state",{"_index":301,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.updates",{"_index":177,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updates.push(dropupdate",{"_index":173,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["this.updating",{"_index":1383,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.valuechanged",{"_index":1392,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view",{"_index":292,"title":{},"body":{"classes/MenuBarView.html":{},"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.destroy",{"_index":442,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.dispatch(state.tr.setselection(selection",{"_index":1398,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.dispatch(tr",{"_index":421,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.dom",{"_index":300,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.dom.parentnode.insertbefore(menudom",{"_index":299,"title":{},"body":{"classes/MenuBarView.html":{}}}],["this.view.state",{"_index":413,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/inline-code-editor.html":{}}}],["this.view.state.applytransaction(tr",{"_index":427,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["this.view.state.tr.replacewith",{"_index":1413,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["this.view.updatestate(state",{"_index":428,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["three",{"_index":1479,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["title",{"_index":146,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["todom(node",{"_index":1332,"title":{},"body":{"additional-documentation/schema.html":{}}}],["toggle",{"_index":1281,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["toggleblocktype",{"_index":58,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["toggleblocktype(type",{"_index":221,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/menu-plugin.html":{}}}],["togglelist",{"_index":57,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["togglelist(type",{"_index":218,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["togglemark",{"_index":38,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.code",{"_index":1283,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.em",{"_index":1282,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks.strong",{"_index":1280,"title":{},"body":{"additional-documentation/shortcuts.html":{}}}],["togglemark(schema.marks[this.menuitem.key",{"_index":216,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["toggletype",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":236,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configuration.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbar.foreach((group",{"_index":238,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbar.length",{"_index":242,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbarcustommenuitem",{"_index":332,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/menu-plugin.html":{}}}],["toolbardropdown",{"_index":331,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{}}}],["toolbardropdown[toolbardropdowngroupkeys",{"_index":334,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{}}}],["toolbardropdowngroupkeys",{"_index":16,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbardropdowngroupvalues",{"_index":18,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbarindex",{"_index":239,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem",{"_index":49,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem(editorview",{"_index":270,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["toolbaritem[dropdowngroup",{"_index":251,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":513,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tort",{"_index":1179,"title":{},"body":{"license.html":{}}}],["tr",{"_index":343,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["tr.docchanged",{"_index":429,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tr.replacewith(0",{"_index":419,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["track",{"_index":1384,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["transaction",{"_index":326,"title":{},"body":{"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{}}}],["transcation",{"_index":1302,"title":{},"body":{"additional-documentation/menu-plugin.html":{}}}],["transform",{"_index":1444,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["transition",{"_index":490,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["translate",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":514,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["travis",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":350,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["true",{"_index":127,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{},"additional-documentation/inline-code-editor.html":{}}}],["try",{"_index":410,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["tslib",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":1460,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["tweaks",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["twice",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"interfaces/MenuItemMeta.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["type.isinset(state.storedmarks",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1186,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1445,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["typeof",{"_index":247,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":51,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"modules/NgxEditorModule.html":{},"injectables/NgxEditorService.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{}}}],["typo",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["udpate",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["unclear",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":1023,"title":{},"body":{"changelog.html":{},"additional-documentation/ngmodel.html":{}}}],["undo",{"_index":1263,"title":{},"body":{"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["undo(view.state",{"_index":1427,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["unique",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["unlink",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["unwanted",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1423,"title":{},"body":{"additional-documentation/inline-code-editor.html":{},"additional-documentation/input-rules.html":{}}}],["upcoming",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":151,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{},"additional-documentation/inline-code-editor.html":{}}}],["update(state",{"_index":161,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updatecontent(value",{"_index":409,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["updated",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["updatemenuitems",{"_index":282,"title":{},"body":{"classes/MenuBarView.html":{}}}],["updates",{"_index":10,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["updates.push(rendered.updates",{"_index":255,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updates.push(update",{"_index":268,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1356,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["upgrade",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["us/docs/web/api/documentfragment",{"_index":1291,"title":{},"body":{"additional-documentation/html.html":{}}}],["usage",{"_index":1320,"title":{},"body":{"additional-documentation/schema.html":{},"additional-documentation/inline-code-editor.html":{}}}],["use",{"_index":673,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":764,"title":{},"body":{"changelog.html":{},"additional-documentation/inline-code-editor.html":{}}}],["useexisting",{"_index":363,"title":{},"body":{"components/NgxEditorComponent.html":{},"modules/NgxEditorModule.html":{},"overview.html":{}}}],["usefactory",{"_index":568,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["user",{"_index":1446,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["usevalue",{"_index":567,"title":{},"body":{"modules/NgxEditorModule.html":{}}}],["using",{"_index":636,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/schema.html":{}}}],["utils/flatdeep",{"_index":62,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["utils/icons",{"_index":60,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["v1.0.0",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["v1.1.2",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["v1.2.1",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["v1.5.3",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["v1.5.4",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["v1.5.5",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["v1.6.0",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["v1.6.5",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["v1.7.2",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["v1.7.3",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["v2.0.0",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["v2.0.1",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["v3.0.0",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["v3.1.0",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["v3.1.2",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["v3.3.0",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["v4.0.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["v4.1.0",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["v4.4.4",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["v5.0.0",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["v5.34.0",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"components/NgxEditorComponent.html":{},"injectables/NgxEditorServiceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/inline-code-editor.html":{}}}],["valuechanged",{"_index":1409,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["values",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["var",{"_index":539,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["variables",{"_index":1189,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":511,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["via",{"_index":1080,"title":{},"body":{"index.html":{}}}],["video",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":41,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"additional-documentation/inline-code-editor.html":{}}}],["view.dispatch",{"_index":1428,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view.focus",{"_index":1432,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["view/edit",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":392,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewchild('ngxeditor",{"_index":389,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewed",{"_index":1113,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":393,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["viewencapsulation.none",{"_index":359,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["void",{"_index":184,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuBarView.html":{},"classes/MenuItemView.html":{},"interfaces/MenuItemViewSpec.html":{},"interfaces/MenuOptions.html":{},"components/NgxEditorComponent.html":{},"interfaces/NgxEditorConfig.html":{},"interfaces/NodeViews.html":{},"miscellaneous/variables.html":{},"additional-documentation/menu-plugin.html":{}}}],["volodymyro",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["vulnerability",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1164,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1159,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1176,"title":{},"body":{"license.html":{},"additional-documentation/inline-code-editor.html":{}}}],["white",{"_index":465,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["whose",{"_index":1485,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["width",{"_index":489,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wiki",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["window.addeventlistener('mousedown",{"_index":128,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["window.removeeventlistener('mousedown",{"_index":130,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{}}}],["without",{"_index":1133,"title":{},"body":{"license.html":{}}}],["work",{"_index":1089,"title":{},"body":{"index.html":{}}}],["working",{"_index":1285,"title":{},"body":{"additional-documentation/html.html":{}}}],["wrap",{"_index":475,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wrapinlist(type)(state",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrapper",{"_index":157,"title":{},"body":{"classes/DropDownView.html":{},"classes/MenuItemView.html":{},"changelog.html":{}}}],["wrappinginputrule",{"_index":1451,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s",{"_index":1476,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["wrappinginputrule(/^\\s*>\\s",{"_index":1463,"title":{},"body":{"additional-documentation/input-rules.html":{}}}],["writevalue",{"_index":376,"title":{},"body":{"components/NgxEditorComponent.html":{},"changelog.html":{}}}],["writevalue(value",{"_index":385,"title":{},"body":{"components/NgxEditorComponent.html":{}}}],["wysiwyg",{"_index":1048,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["x1f37b",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["x1f389",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["xml",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["y",{"_index":1430,"title":{},"body":{"additional-documentation/inline-code-editor.html":{}}}],["yarn",{"_index":1084,"title":{},"body":{"index.html":{}}}],["yes",{"_index":575,"title":{},"body":{"injectables/NgxEditorService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":525,"title":{},"body":{"components/NgxEditorComponent.html":{},"additional-documentation/history.html":{},"additional-documentation/inline-code-editor.html":{}}}],["zero",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":554,"title":{},"body":{"modules/NgxEditorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DropDownView.html":{"url":"classes/DropDownView.html","title":"class - DropDownView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DropDownView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWrapperDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dropdownGroup: ToolbarDropdownGroupKeys, dropdownFields: ToolbarDropdownGroupValues, editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dropdownGroup\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupKeys\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropdownFields\n                                                  \n                                                        \n                                                                        ToolbarDropdownGroupValues\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWrapperDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetWrapperDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; updates: {}; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem, isListItemActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const one = 1;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n\n        if (isListItem(type, schema)) {\n          isActive = isListItemActive(state, type);\n        } else {\n          isActive = isNodeActive(state, type, menuItem.attrs);\n        }\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuBarView.html":{"url":"classes/MenuBarView.html","title":"class - MenuBarView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuBarView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/MenuBarView.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                            \n                                options\n                            \n                            \n                                updateMenuItems\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorView: EditorView, options: MenuOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MenuOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditorView\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/MenuBarView.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\n\nimport { MenuOptions } from '../../../types';\n\nimport { renderMenu } from './menu';\n\nclass MenuBarView {\n  options: MenuOptions;\n  view: EditorView;\n\n  dom: HTMLElement;\n\n  updateMenuItems: (state: EditorState) => void;\n\n  constructor(editorView: EditorView, options: MenuOptions) {\n    // const menu = getMenu(toolbar);\n    this.view = editorView;\n    this.options = options;\n\n    this.render();\n    this.update();\n  }\n\n  render() {\n    const menuDom = document.createElement('div');\n    menuDom.className = 'NgxEditor__MenuBar';\n\n    const { update } = renderMenu(this.options, this.view, menuDom);\n    this.updateMenuItems = update;\n\n    this.view.dom.parentNode.insertBefore(menuDom, this.view.dom);\n  }\n\n  update() {\n    this.updateMenuItems(this.view.state);\n  }\n}\n\nexport default MenuBarView;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemMeta.html":{"url":"interfaces/MenuItemMeta.html","title":"interface - MenuItemMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/meta.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                        i18nKey\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        key\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nKey\n                                    \n                                \n                                \n                                    \n                                        i18nKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"mark\" | \"node\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mark\" | \"node\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItemMeta {\n  key: string;\n  i18nKey: string;\n  icon?: string;\n  type: 'mark' | 'node';\n  attrs?: {\n    level?: number\n  };\n}\n\nconst menuItemsMeta: { [key: string]: MenuItemMeta } = {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n};\n\nexport default menuItemsMeta;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemView.html":{"url":"classes/MenuItemView.html","title":"class - MenuItemView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/prosemirror/plugins/menu/menu.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDom\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec)\n                    \n                \n                        \n                            \n                                Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuItem\n                                                  \n                                                        \n                                                                        MenuItemMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorView\n                                                  \n                                                        \n                                                                    EditorView\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        MenuItemViewSpec\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:182\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDom\n                        \n                        \n                    \n                \n            \n            \n                \ngetDom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HTMLElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/prosemirror/plugins/menu/menu.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { dom: any; update: (state: any) => void; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { toggleMark } from 'prosemirror-commands';\nimport { EditorView } from 'prosemirror-view';\nimport { EditorState } from 'prosemirror-state';\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\n\nimport {\n  MenuItemViewSpec,\n  ToolbarItem,\n  ToolbarDropdownGroupKeys,\n  ToolbarDropdownGroupValues,\n  MenuOptions,\n  Command\n} from '../../../types';\n\nimport { isNodeActive, isMarkActive, isListItem, isListItemActive } from '../../helpers';\nimport { toggleList, toggleBlockType } from '../../commands';\n\nimport { getIconSvg } from '../../../utils/icons';\nimport flatDeep from '../../../utils/flatDeep';\n\nimport menuItemsMeta, { MenuItemMeta } from './meta';\n\nconst SEPERATOR_CLASSNAME = 'NgxEditor__Seperator';\n\nconst MENU_ITEM_CLASSNAME = 'NgxEditor__MenuItem';\nconst ACTIVE_MENU_ITEM_CLASSNAME = `${MENU_ITEM_CLASSNAME}--Active`;\nconst DISABLED_CLASSNAME = 'NgxEditor--Disabled';\n\nconst DROPDWON_ITEM_CLASSNAME = 'NgxEditor__Dropdown';\nconst DROPWDOWN_OPEN_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Open`;\nconst ACTIVE_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Active`;\nconst SELECTED_DROPDOWN_ITEM_CLASSNAME = `${DROPDWON_ITEM_CLASSNAME}--Selected`;\n\nconst DROPDOWN_ITEMS = new Map();\nDROPDOWN_ITEMS.set('heading', ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);\n\n\nclass DropDownView {\n  private dropdownGroup: ToolbarDropdownGroupKeys;\n  private dropdownFields: ToolbarDropdownGroupValues;\n  private editorView: EditorView;\n  private options: MenuOptions;\n\n  dom: HTMLElement;\n\n  updates = [];\n\n  constructor(\n    dropdownGroup: ToolbarDropdownGroupKeys,\n    dropdownFields: ToolbarDropdownGroupValues,\n    editorView: EditorView,\n    options: MenuOptions\n  ) {\n    this.dropdownGroup = dropdownGroup;\n    this.dropdownFields = dropdownFields;\n    this.editorView = editorView;\n    this.options = options;\n  }\n\n  getWrapperDom(): HTMLElement {\n    let isDropdownOpen = false;\n    const dropdown = document.createElement('div');\n\n    const labels = this.options.labels;\n\n    dropdown.classList.add(DROPDWON_ITEM_CLASSNAME);\n\n    const dropdownText = document.createElement('div');\n    dropdownText.classList.add(`${DROPDWON_ITEM_CLASSNAME}__Text`);\n    dropdownText.textContent = labels[this.dropdownGroup];\n\n    dropdown.appendChild(dropdownText);\n\n    // create dropdown list\n    const dropdownMenu = document.createElement('div');\n    dropdownMenu.classList.add(`${DROPDWON_ITEM_CLASSNAME}__DropdownMenu`);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!dropdown.contains(e.target as Node)) {\n        closeDropdown();\n      }\n    };\n\n    const openDropdown = (e: MouseEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (dropdownMenu.contains(target)) {\n        return;\n      }\n\n      dropdown.classList.add(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = true;\n      window.addEventListener('mousedown', mouseDownHandler);\n    };\n\n    const closeDropdown = () => {\n      dropdown.classList.remove(DROPWDOWN_OPEN_CLASSNAME);\n      isDropdownOpen = false;\n      window.removeEventListener('mousedown', mouseDownHandler);\n    };\n\n    dropdown.addEventListener('click', (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDropdownOpen) {\n        openDropdown(e);\n      } else {\n        closeDropdown();\n      }\n    });\n\n    this.dropdownFields.forEach(dropdownItem => {\n      const menuItem = menuItemsMeta[dropdownItem];\n\n      let text = labels[menuItem.key];\n\n      if (menuItem.key === 'heading') {\n        text += ` ${menuItem.attrs.level}`;\n      }\n\n      const spec: MenuItemViewSpec = {\n        classNames: [\n          `${DROPDWON_ITEM_CLASSNAME}__Item`\n        ],\n        textContent: text,\n        attrs: {\n          title: text\n        },\n        activeClass: ACTIVE_DROPDOWN_ITEM_CLASSNAME,\n        disabledClass: DISABLED_CLASSNAME\n      };\n\n      const menuItemView = new MenuItemView(menuItem, this.editorView, spec);\n      const { update, dom } = menuItemView.render();\n\n      // remove open class once clicked on dropdown value\n      dom.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault();\n        closeDropdown();\n      });\n\n      // wrapper to execute when update is called\n      const dropUpdate = (state: EditorState) => {\n        update(state);\n\n        // update the dropdown content heading when a class is selected\n        const activeEl = dropdownMenu.getElementsByClassName(ACTIVE_DROPDOWN_ITEM_CLASSNAME);\n        if (activeEl.length) {\n          const el = activeEl[0];\n          dropdownText.textContent = el.textContent;\n          dropdown.classList.add(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        } else {\n          // restore default value\n          dropdownText.textContent = labels[this.dropdownGroup];\n          dropdown.classList.remove(SELECTED_DROPDOWN_ITEM_CLASSNAME);\n        }\n      };\n\n      dropdownMenu.appendChild(dom);\n      this.updates.push(dropUpdate);\n    });\n\n    dropdown.appendChild(dropdownMenu);\n    return dropdown;\n  }\n\n  render() {\n    this.dom = this.getWrapperDom();\n\n    return {\n      dom: this.dom,\n      updates: this.updates\n    };\n  }\n}\n\nclass MenuItemView {\n  private menuItem: MenuItemMeta;\n  private editorView: EditorView;\n  private spec: MenuItemViewSpec;\n\n  dom: HTMLElement;\n\n  constructor(menuItem: MenuItemMeta, editorView: EditorView, spec: MenuItemViewSpec) {\n    this.menuItem = menuItem;\n    this.editorView = editorView;\n    this.spec = spec;\n  }\n\n  render() {\n    const dom = this.dom = this.getDom();\n    const { schema } = this.editorView.state;\n    const { command } = this.setupCommandListeners();\n\n    const { activeClass, disabledClass } = this.spec;\n\n    const update = (state: EditorState): void => {\n      const menuItem = this.menuItem;\n      let isActive = false;\n\n      const one = 1;\n\n      const canExecute = command(this.editorView.state, null);\n\n      if (menuItem.type === 'mark') {\n        const type: MarkType = schema.marks[menuItem.key];\n        isActive = isMarkActive(state, type);\n      }\n\n      if (menuItem.type === 'node') {\n        const type: NodeType = schema.nodes[menuItem.key];\n\n        if (isListItem(type, schema)) {\n          isActive = isListItemActive(state, type);\n        } else {\n          isActive = isNodeActive(state, type, menuItem.attrs);\n        }\n      }\n\n      dom.classList.toggle(activeClass, isActive);\n      dom.classList.toggle(disabledClass, !canExecute);\n    };\n\n    return {\n      dom,\n      update\n    };\n  }\n\n  getDom(): HTMLElement {\n    const div = document.createElement('div');\n\n    if (this.spec.classNames) {\n      this.spec.classNames.forEach(className => {\n        div.classList.add(className);\n      });\n    }\n\n    if (this.spec.attrs) {\n      Object.entries(this.spec.attrs).forEach(obj => {\n        div.setAttribute(obj[0], obj[1]);\n      });\n    }\n\n    if (this.spec.innerHTML) {\n      div.innerHTML = this.spec.innerHTML;\n    }\n\n    if (this.spec.textContent) {\n      div.innerHTML = this.spec.textContent;\n    }\n\n    return div;\n  }\n\n  private setupCommandListeners() {\n    const { schema } = this.editorView.state;\n\n    let command: Command;\n\n    if (this.menuItem.type === 'mark') {\n      command = toggleMark(schema.marks[this.menuItem.key]);\n    }\n\n    if (this.menuItem.type === 'node') {\n      const type = schema.nodes[this.menuItem.key];\n\n      if (isListItem(type, schema)) {\n        command = toggleList(type, schema.nodes.list_item);\n      }\n\n      if (type === schema.nodes.heading) {\n        command = toggleBlockType(type, schema.nodes.paragraph, { level: this.menuItem.attrs.level });\n      }\n    }\n\n    this.dom.addEventListener('mousedown', (e: MouseEvent) => {\n      e.preventDefault();\n\n      // don't execute if not left click\n      if (e.buttons !== 1) {\n        return;\n      }\n\n      // execute command\n      command(this.editorView.state, this.editorView.dispatch);\n    });\n\n    return { command };\n  }\n}\n\nconst getSeperatorDom = (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n};\n\nexport const renderMenu = (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItemViewSpec.html":{"url":"interfaces/MenuItemViewSpec.html","title":"interface - MenuItemViewSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItemViewSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        activeClass\n                                \n                                \n                                            Optional\n                                        attrs\n                                \n                                \n                                            Optional\n                                        classNames\n                                \n                                \n                                        disabledClass\n                                \n                                \n                                            Optional\n                                        innerHTML\n                                \n                                \n                                            Optional\n                                        textContent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeClass\n                                    \n                                \n                                \n                                    \n                                        activeClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrs\n                                    \n                                \n                                \n                                    \n                                        attrs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabledClass\n                                    \n                                \n                                \n                                    \n                                        disabledClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        innerHTML\n                                    \n                                \n                                \n                                    \n                                        innerHTML:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textContent\n                                    \n                                \n                                \n                                    \n                                        textContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuOptions.html":{"url":"interfaces/MenuOptions.html","title":"interface - MenuOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        labels\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                    \n                                \n                                \n                                    \n                                        labels:         MenuLabels\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuLabels\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:         Toolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Toolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorComponent.html":{"url":"components/NgxEditorComponent.html","title":"component - NgxEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ngx-editor\n            \n\n            \n                styleUrls\n                ngx-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ngx-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ngxEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEditor\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngxEditorService: NgxEditorService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngxEditorService\n                                                  \n                                                        \n                                                                        NgxEditorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: object | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            object | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditor', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation, AfterViewInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\n\nimport { NgxEditorService, NgxEditorServiceConfig } from './ngx-editor.service';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: 'ngx-editor.component.html',\n  styleUrls: ['ngx-editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('ngxEditor', { static: true }) ngxEditor: ElementRef;\n\n  private view: EditorView;\n  private onChange: (value: object) => void;\n\n  private config: NgxEditorServiceConfig;\n\n  private editorInitialized = false;\n\n  constructor(ngxEditorService: NgxEditorService) {\n    this.config = ngxEditorService.config;\n  }\n\n  writeValue(value: object | null) {\n    if (!this.editorInitialized) {\n      return;\n    }\n\n    this.updateContent(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(): void { }\n\n  private parseDoc(contentJson: object): ProsemirrorNode {\n    if (!contentJson) {\n      return null;\n    }\n\n    const { schema } = this.config;\n    return schema.nodeFromJSON(contentJson);\n  }\n\n  private updateContent(value: object) {\n    try {\n      const doc = this.parseDoc(value);\n      const state = this.view.state;\n\n      // don't emit if both content is same\n      if (doc !== null && state.doc.eq(doc)) {\n        return;\n      }\n\n      const tr = state.tr;\n      tr.replaceWith(0, state.doc.content.size, doc);\n      this.view.dispatch(tr);\n    } catch (err) {\n      console.error('Unable to update document.', err);\n    }\n  }\n\n  private handleTransactions(tr: Transaction) {\n    const { state } = this.view.state.applyTransaction(tr);\n\n    this.view.updateState(state);\n\n    if (tr.docChanged) {\n      const json = state.doc.toJSON();\n      this.onChange(json);\n    }\n  }\n\n  createEditor() {\n    const { schema, plugins, nodeViews } = this.config;\n\n    this.view = new EditorView(this.ngxEditor.nativeElement, {\n      state: EditorState.create({\n        schema,\n        plugins\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes: {\n        class: 'NgxEditor__Content'\n      },\n    });\n\n    this.editorInitialized = true;\n  }\n\n  ngAfterViewInit() {\n    this.createEditor();\n  }\n\n  ngOnDestroy() {\n    this.view.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ngx-editor.component.scss\n                \n                $menubar-height: 1.85rem;\n$icon-size: 1.85rem;\n\n$border-radius: 4px;\n\n$menubar-border-color: #ddd;\n\n$menu-item-border-radius: 2px;\n$menu-item-hover-bg-color: #f1f1f1;\n$menu-item-active-bg-color: #e8f0fe;\n$menu-item-active-color: #1a73e8;\n\n$dropdown-menu-hover-bg-color: #f1f1f1;\n$dropdown-item-active-bg-color: #f1f1f1;\n\n$menubar-padding: 0.2rem;\n$menu-item-spacing: 0.3rem;\n$menubar-text-padding: 0 $menu-item-spacing;\n\n.NgxEditor {\n  background: white;\n  color: black;\n  background-clip: padding-box;\n  border-radius: $border-radius;\n  border: 2px solid rgba(0, 0, 0, 0.2);\n}\n\n.NgxEditor__Content {\n  padding: 0.5rem;\n  white-space: pre-wrap;\n\n  p {\n    margin: 0;\n    margin-bottom: 0.7rem;\n  }\n}\n\n.NgxEditor__MenuBar {\n  display: flex;\n  padding: $menubar-padding;\n  border-bottom: 1px solid $menubar-border-color;\n  cursor: default;\n  height: $menubar-height;\n}\n\n.NgxEditor__MenuItem {\n  $self: &;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: $menu-item-hover-bg-color;\n  }\n\n  &#{ $self }--Icon {\n    height: $icon-size;\n    width: $icon-size;\n    transition: 0.3s ease-in-out;\n    margin-right: 2px;\n  }\n\n  &#{ $self }--Text {\n    padding: $menubar-text-padding;\n  }\n\n  &#{ $self }--Active {\n    background-color: $menu-item-active-bg-color;\n    color: $menu-item-active-color;\n\n    svg {\n      fill: $menu-item-active-color;\n    }\n  }\n}\n\n.NgxEditor--Disabled {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.NgxEditor__Seperator {\n  border-left: 1px solid #ccc;\n  margin: 0 $menu-item-spacing;\n}\n\n.NgxEditor__Dropdown {\n  $self: &;\n  min-width: 4rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: $dropdown-menu-hover-bg-color;\n  }\n\n  #{ $self }__Text {\n    display: flex;\n    align-items: center;\n    padding: $menubar-text-padding;\n\n    &::after {\n      display: inline-block;\n      content: \"\";\n      margin-left: 1.5rem;\n      vertical-align: 0.25rem;\n      border-top: 0.25rem solid;\n      border-right: 0.25rem solid transparent;\n      border-bottom: 0;\n      border-left: 0.25rem solid transparent;\n    }\n  }\n\n  #{ $self }__DropdownMenu {\n    position: absolute;\n    left: 0;\n    top: calc(#{$menubar-height} + 2px);\n    box-shadow: rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n    border-radius: $border-radius;\n    background-color: white;\n    display: none;\n    z-index: 10;\n    width: 100%;\n  }\n\n  #{ $self }__Item {\n    padding: 0.5rem;\n    white-space: nowrap;\n    color: inherit;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 2%);\n    }\n  }\n\n  &#{ $self }--Selected,\n  &#{ $self }--Open {\n    background-color: $menu-item-active-bg-color;\n\n    #{ $self }__Text {\n      color: $menu-item-active-color;\n    }\n  }\n\n  #{ $self }--Active {\n    background-color: $dropdown-item-active-bg-color;\n\n    &:hover {\n      background-color: darken($dropdown-item-active-bg-color, 4%);\n    }\n  }\n\n  &#{ $self }--Open {\n    #{ $self }__DropdownMenu {\n      display: block;\n    }\n  }\n}\n\n.NgxEditor__Placeholder {\n  color: #6c757d;\n  opacity: 1;\n}\n\n// prosemirror\n.ProseMirror {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxEditorComponent', 'selector': 'ngx-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorConfig.html":{"url":"interfaces/NgxEditorConfig.html","title":"interface - NgxEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        nodeViews\n                                \n                                \n                                            Optional\n                                        plugins\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodeViews\n                                    \n                                \n                                \n                                    \n                                        nodeViews:         NodeViews\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeViews\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugins\n                                    \n                                \n                                \n                                    \n                                        plugins:     Plugin[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plugin[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     Schema\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Schema\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorModule.html":{"url":"modules/NgxEditorModule.html","title":"module - NgxEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxEditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-editor.module.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\nimport { NgxEditorComponent } from './ngx-editor.component';\n\nimport { NgxEditorServiceConfig, provideMyServiceOptions } from './ngx-editor.service';\nimport { NgxEditorConfig } from './types';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\n@NgModule({\n  declarations: [NgxEditorComponent],\n  exports: [NgxEditorComponent],\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorService.html":{"url":"injectables/NgxEditorService.html","title":"injectable - NgxEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: NgxEditorServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorServiceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorServiceConfig.html":{"url":"injectables/NgxEditorServiceConfig.html","title":"injectable - NgxEditorServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-editor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                nodeViews\n                            \n                            \n                                    Public\n                                plugins\n                            \n                            \n                                    Public\n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeViews\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            plugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Plugin[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    menu(),\n    placeholder()\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Schema\n\n                        \n                    \n                    \n                        \n                            Default value : schema\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-editor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\n\nimport { NgxEditorConfig, NodeViews } from './types';\n\nimport menu from './prosemirror/plugins/menu';\nimport placeholder from './prosemirror/plugins/placeholder';\nimport { schema } from './schema';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorServiceConfig {\n  public plugins: Plugin[] = [\n    menu(),\n    placeholder()\n  ];\n\n  public nodeViews: NodeViews = {};\n  public schema: Schema = schema;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n}\n\nconst defaultConfig: NgxEditorConfig = {\n  plugins: [],\n  nodeViews: {},\n  schema\n};\n\nexport function provideMyServiceOptions(config?: NgxEditorConfig): NgxEditorConfig {\n  return Object.assign({}, defaultConfig, config);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeViews.html":{"url":"interfaces/NodeViews.html","title":"interface - NodeViews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeViews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:    NodeView\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/types.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Plugin, EditorState, Transaction } from 'prosemirror-state';\nimport { Node as ProsemirrorNode, Schema } from 'prosemirror-model';\nimport { EditorView, Decoration, NodeView } from 'prosemirror-view';\n\ntype TCR = { dom: HTMLElement, update: (state: EditorState) => void };\n\nexport type ToolbarDropdown = { heading?: string[] };\nexport type ToolbarCustomMenuItem = (editorView: EditorView) => TCR;\nexport type ToolbarDropdownGroupKeys = keyof ToolbarDropdown;\nexport type ToolbarDropdownGroupValues = ToolbarDropdown[ToolbarDropdownGroupKeys];\nexport type ToolbarItem = string | ToolbarDropdown | ToolbarCustomMenuItem;\nexport type Toolbar = Array | null;\n\nexport interface MenuItemViewSpec {\n  classNames?: string[];\n  innerHTML?: string;\n  textContent?: string;\n  attrs?: { [key: string]: string };\n  activeClass: string;\n  disabledClass: string;\n}\n\nexport interface NodeViews {\n  [name: string]: (\n    node: ProsemirrorNode,\n    view: EditorView,\n    getPos: () => number,\n    decorations: Decoration[]\n  ) => NodeView;\n}\n\nexport interface NgxEditorConfig {\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: NodeViews;\n}\n\nexport type MenuLabels = { [key: string]: string };\nexport interface MenuOptions {\n  toolbar?: Toolbar;\n  labels?: MenuLabels;\n  schema?: Schema;\n}\n\nexport type Command = (schema: EditorState, dispatch: (tr: Transaction) => void) => boolean;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\nAll notable changes to this project will be documented in this file.\n\nTags\n\nFeatures\nBug Fixes\nPerformance Improvements\nDependency Updates\nBreaking Changes\nEnhancements\nDocumentation\nInternal\n\n\nv5.0.0-alpha.6 (2020-05-31)\nFeatures\n\nadd support for custom menu items in menu plugin (1737369)\nsupport custom prosemirror schema (1737369)\nsupport prosemirror nodeviews config (1737369)\n\nBreaking Changes\n\nrenamed few css identifiers (c9555b4)\n\nv5.0.0-alpha.5 (2020-05-08)\nFeatures\n\nadd support for prosemirror plugins (fcdc39b)\n\nBreaking Changes\n\nplaceholder and config property is replaced with plugins\n\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [menu(), placholder('Type something here...')]\n});\nshortcuts needs to be configured manually using plugins\nremoved peerDependencies prosemirror-history and prosemirror-keymap\n\nv5.0.0-alpha.4 (2020-05-05)\nFeatures\n\nadd support for headings (2d7d38e)\n\nv5.0.0-alpha.3 (2020-05-04)\nFeatures\n\nadd support for list (274dcc7)\n\nBreaking Changes\n\nprosemirror peerDependencies are no longer needed (274dcc7)\n\nv5.0.0-alpha.2 (2020-04-30)\nBug Fixes\n\nfix issues with custom config (613ec52)\nremove empty DOM wrapper around the editor (5f176e1)\n\nv5.0.0-alpha.1 (2020-04-23)\nBreaking Changes\n\nfix issues with ivy compiler (30b513c)\n\nEnhancements\n\nremove unwanted dependencies (94374c4)\n\nv5.0.0-alpha (2020-04-22)\nThe package is entirely rewritten with prosemirror as default editor. Most of the options are removed and will be added eventually in upcoming releases.\nFeatures\n\nuse prosemirror as default editor (f17d0ef)\n\nBreaking Changes\n\nremove app prefix from the component (bbe3daa)\nupgrade to angular 9 (b280769)\n\nInternal\n\nmigrate from travis-ci to github actions (2afb2ec)\nupdate devDependencies (fd3ee1a)\n\nv4.1.0 (2018-10-21)\nDependency Updates\n\nupdate husky to v1.1.2\n\nInternal\n\ncode cleanup\n\nv4.1.0-beta.0 (2018-10-12)\nFeatures\n\nnew MaxLengthvalidator for validation in reactive forms\n\nDependency Updates\n\nupdate ng-packagr to v4.3.0\n\nv4.0.0 (2018-10-04)\n&#x1F389; Support Angular 6.\nDependency Changes\n\nupdate angular to v6 and its dependencies\nupdate compodoc\nupdate ng-packagr\nremove commitizen, cz-conventional-changelog\n\nInternal\n\nadd prePublishOnly script to prevent accidental publishes\n\nDocumentation\n\nrecompile docs with compodoc v1.1.5\n\nv3.3.0 (2018-05-04)\nNo new changes were introduced.\nFollow releases from v3.3.0-rc0 to v3.3.0-rc.14 for release notes &#x1F37B;\nv3.3.0-rc.14 (2018-05-02)\nDocumentation\n\nupdate unclear prerequisites in README (1c316cb), closes #92\n\nEnhancements\n\nupdate ngx-bootstrap (eed8aaa)\n\nInternal\n\nupdate compodoc (47f34ad)\nupdate bootstrap (ee1555b)\nupdate ng-packagr (b174a14)\n\nBreaking Changes\n\nremove code-editor support (24b92e0)\n\nv3.3.0-rc.13 (2018-03-14)\nFeatures\n\nauto-focus while switching to code-editor mode (1ed938e), closes #79\nshow placeholder in code editor (bae2216)\noption to insert video link/ youtube urls (e074c7a), closes #72\noption to set font family (1248db7), closes #72\n\nInternal\n\nremove dead code which used to enable or disable toolbar (00adda2)\n\nDEPENDENCY UPDATE\n\nupdate dependencies in package-lock file to latest satisfying version (f62d945)\n\nv3.3.0-rc.12 (2018-03-11)\nFeatures\n\nsupport TAB key to focus the editor's text-area (8e3e65b), closes #79\n\nBug Fixes\n\ndon't return from writeValue (36133e1), closes #78\n\nPerformance\n\nremove unused imports/variables (182152a)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.3 (0f94d1e)\nupdate compodoc to v1.0.9 (a9262c2)\n\nv3.3.0-rc.11 (2018-03-06)\nBug Fixes\n\nuse codemirror's htmlMixed mode instead of xml mode (fbf9d1d)\n\nInternal\n\nremove redundant karma-cli (df192b)\n\nDEPENDENCY UPDATES\n\nupdate angular-cli to v1.7.2 (87bb04e)\nupdate compodoc to v1.0.8 (47d5ba4)\nupdate ng-packagr to v2.2.0 (ba86da6)\n\nv3.3.0-rc.10 (2018-02-27)\nBug Fixes\n\ndon't override default styles (5beee77), closes #68\n\nv3.3.0-rc.9 (2018-02-26)\nFeatures\n\nstyle - highlight active tabs in popover (0b7dd99)\noption to set font color and background color (a983fd4), closes #65\noption to set font-size (f49e477), closes #31\n\nBug Fixes\n\nstyle - center align popover arrow (2a13ca0)\n\nInternal\n\nudpate devDependencies (4fddfac)\n\nv3.3.0-rc.8 (2018-02-22)\nBug Fixes\n\nfix: links inserted twice (97398ee), closes #61\n\nv3.3.0-rc.7 (2018-02-21)\nEnhancements\n\nremove bootstrap from peerDependency (8aa0ffd)\n\nv3.3.0-rc.6 (2018-02-20)\nBug Fixes\n\nfix a typo in toolbar (367474f)\n\nEnhancements\n\nadded new peer dependencies (683bbee)\nupdated docs (57e4056)\n\nv3.3.0-rc.5 (2018-02-19)\nFeatures\n\noption to open URL in new tab (d4001c4)\noption to upload images from local filesystem (09b69b5), closes #34\n\nInternal\n\ndocumentation compiled with compodoc v1.0.7\n\nv3.3.0-rc.4 (2018-02-08)\nInternal\n\nupdate ng-packager to v2.0.0\n\nv3.3.0-rc.3 (2018-02-05)\nBug Fixes\n\nremove border for toolbar if hidden (4eef077), closes #43\nplaceholder gets duplicated if a page has more than one editor (cdfd4bc), closes #44\nngModel binding does not reflects in editor's textarea (4f4967a), closes #45\n\nChanges\n\nupdate peerDependency codemirror to v5.34.0 (6012283)\n\nInternal\n\nupdate devDependencies (6012283)\n\nv3.3.0-rc.2 (2018-01-19)\nBug Fixes\n\nfix: add missing xml parser for code-mirror (1078c69)\n\nv3.3.0-rc.1 (2018-01-19)\nBug Fixes\n\nfix error in exporting codemirror (9f0e19d), closes #40\n\nInternal\n\nupdate ng-packagr to v2.0.0-rc.11 (9f0e19d)\n\nDocumentation\n\nupdate additional docs (9f0e19d)\nremoved wiki\n\nv3.3.0-rc.0 (2018-01-19)\nFeatures\n\nadded event-emitter to emit blur and focus events (2ed79b8)\nadded option to view/edit plain HTML code (2ed79b8), closes #26\n\nInternal\n\nupdate angular-cli to v1.6.5 (2ed79b8)\nupdate devDependencies (2ed79b8)\n\nDocumentation\n\ndocs autogenerated using compodoc\n\n\n\nv3.2.1 (2017-12-19)\nBug Fixes\n\nadd button types to toolbar to avoid firing submit while using in reactive forms (d4ccc79)\n\nEnhancements\n\nlighten placeholder color (27ccd72)\n\nv3.2.0 (2017-12-14)\nFeatures\n\nenable or disable toolbar (0a915f5)\n\nBug Fixes\n\nfix: horizontal overflow in editor (0a915f5)\nminor style tweaks (4390502)\n\nv3.1.2 (2017-12-05)\nBug Fixes\n\nremove methods that are not supported by Internet Explorer (7be2fd6)\nfix grippie svg not centre aligned in Internet Explorer (c87c5e4)\nfix inputs not replacing configuration (dabac4c)\n\nInternal\n\nupdate to @angular/cli v1.5.5\n\n\n\nv3.1.1 (2017-11-28)\nInternal\n\nmove dependencies to peerDependencies (0310191)\n\nv3.1.0 (2017-11-25)\nFeatures\n\nReactive forms support for the editor (ba350a83)\n\nBreaking Changes\n\nuse ngModel instead of html for HTML bindings (ba350a83)\n\nv3.0.2 (2017-11-24)\nBug Fixes\n\ncheck html has been initialized (#17) (ab0216b). Thanks to @ssuperczynski\n\nv3.0.1 (2017-11-23)\nInternal\n\nupdate to @angular/cli v1.5.4\n\nBug Fixes\n\nfix: default configuration not set onInit (443c994)\n\n\n\nv3.0.0 (2017-11-23)\nBug Fixes\n\nfix HTML Model not updated after subscription on Observable (84946ed), closes #9\n\nInternal\n\nngx-editor has been refactored. Thanks to @volodymyro-in6k (#11)\nupdate angular to v1.5.3 fixes a vulnerability warning due to older version of handlebars (b707409)\nupdate ng-packagr to v1.6.0\n\n\n\nv2.0.1 (2017-11-07)\nInternal\n\nupdate ng-packagr to v1.5.0 (35fbb57)\n\nv2.0.0 (2017-11-02)\nPerformance\n\nupdate angular to v5.0.0 (f12754b)\nupdate bootstrap to v4.0.0-beta.2 (23adb5e)\n\nv1.2.1 (2017-10-25)\nBug Fixes\n\ndowngrade dependency to avoid incompatibility (45752bc)\nupdate insert image query text (2748cc3)\n\nv1.2.0 (2017-10-23)\nFeatures\n\noption to insert/edit link (63e401b)\noption to edit link (89389ab)\nunlink anchor tag (90f88a5)\nenable toolbar only when editor is focused (b915d68)\n\nInternal\n\nupdate ng-packagr (cebc696)\nfix dependency mismatches with angular (26a1a6d)\n\nEnhancements\n\nCSS Tweaks\n\nBug Fixes\n\nenable/disbale toolbar on focusing the editor (8b2bb27)\n\nv1.1.1 (2017-10-09)\nPerformance\n\nuse unique CSS classes (3ddc3b0)\n\nv1.1.0 (2017-10-09)\nFeatures\n\nset width and minWidth to editor (731f2fc)\nnew resizer added (864a5be)\n\nEnhancements\n\nremove units for zero value (3978843)\n\nv1.0.0 (2017-10-06)\nPerformance\n\nimprove value handling for attributes that hold boolean values (8695873)\nbetter handling of default values (7a40862)\n\nFeatures\n\nset height and minHeight for editror (fdb1b30)\ntoolbar customization (c6a2151)\n\nDOCS\n\nget latest release direct from github (b2ddf54)\nadd wiki (da7d0c7)\n\nv1.0.0-beta.3 (2017-10-03)\nBug Fixes\n\nundefined intialization in editor (d17c1dd)\n\nInternal\n\nupdate angular to v4.4.4 (d99dff2)\nupdate ng-packagr to v1.2.1 (d99dff2)\n\nv1.0.0-beta.2 (2017-10-02)\nFeatures\n\nenable (or) disable HTML5 translate An Experimental Option\nenable (or) disable editable nature of editor (4bff8e5)\n\nEnhancements\n\nremove unused fullscreen function (af66d69)\nspellCheck attribute renamed to spellcheck (af66d69)\nremove instructions from docs (af66d69)\n\nBug Fixes\n\nfix spellcheck attribute binding to editable area (af66d69)\n\nv1.0.0-beta.1 (2017-10-01)\nFeatures\n\nbind HTML content with editor\n\nv1.0.0-alpha.3 (2017-10-01)\nChanges\n\nupdate README\nupdate demo\n\nv1.0.0-alpha.2 (2017-09-28)\nTweaks\n\nremove font-awesome loaded by the module. Now font-awesome should be imported separately.\n\nv1.0.0-alpha.1 (2017-09-27)\nBug Fixes\n\nfixes setting default values for the editor\n\nv1.0.0-alpha (2017-09-27)\nWYSIWYG Editor for Angular Applications.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getIconSvg   (src/.../index.ts)\n                        \n                        \n                            menuPlugin   (src/.../index.ts)\n                        \n                        \n                            placeholderPlugin   (src/.../placeholder.ts)\n                        \n                        \n                            provideMyServiceOptions   (src/.../ngx-editor.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/utils/icons/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getIconSvg\n                        \n                        \n                    \n                \n            \n            \n                \ngetIconSvg(name, width, height)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    width\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/menu/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            menuPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nmenuPlugin(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Plugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/prosemirror/plugins/placeholder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            placeholderPlugin\n                        \n                        \n                    \n                \n            \n            \n                \nplaceholderPlugin(text)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/lib/ngx-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            provideMyServiceOptions\n                        \n                        \n                    \n                \n            \n            \n                \nprovideMyServiceOptions(config?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxEditor\n\n  \n   \n  \n\nA Simple WYSIWYG Editor for Angular Applications.\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nGetting Started\nInstallation\nInstall via Package managers such as npm or yarn\nnpm install ngx-editor --save\n# or\nyarn add ngx-editorUsage\nImport ngx-editor module\nimport { NgxEditorModule } from 'ngx-editor';\n\n@NgModule({\n  imports: [NgxEditorModule],\n})\n\nexport class AppModule {}Then in HTML\nFor ngModel to work, You must import FormsModule from @angular/forms\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n        [codemirror] // custom menu, see https://sibiraj.dev/ngx-editor/additional-documentation/menu-plugin.html\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, see https://prosemirror.net/examples/footnote/\n});Compatibility\nAll Evergreen-Browsers are supported\n\nGoogle Chrome\nMicrosoft Edge\nMozilla Firefox\nOpera\n\nDemo\nDemo at stackblitz ngx-editor\nDocumentation\nDocumentation is auto-generated using compodoc, and can be viewed here: https://sibiraj-s.github.io/ngx-editor/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017-2020 Sibiraj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorModule\n\n\n\ncluster_NgxEditorModule_declarations\n\n\n\ncluster_NgxEditorModule_NgxEditorComponent_providers\n\n\n\ncluster_NgxEditorModule_exports\n\n\n\n\nNgxEditorComponent\n\nNgxEditorComponent\n\n\n\nNgxEditorModule\n\nNgxEditorModule\n\nNgxEditorModule -->\n\nNgxEditorComponent->NgxEditorModule\n\n\n\n\n\nNgxEditorComponent \n\nNgxEditorComponent \n\nNgxEditorComponent  -->\n\nNgxEditorModule->NgxEditorComponent \n\n\n\n NgxEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}\n\n NgxEditorComponent), multi: true\n}->NgxEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxEditorComponent), multi: true\n}->NgxEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (src/.../types.ts)\n                        \n                        \n                            MenuLabels   (src/.../types.ts)\n                        \n                        \n                            TCR   (src/.../types.ts)\n                        \n                        \n                            Toolbar   (src/.../types.ts)\n                        \n                        \n                            ToolbarCustomMenuItem   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdown   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupKeys   (src/.../types.ts)\n                        \n                        \n                            ToolbarDropdownGroupValues   (src/.../types.ts)\n                        \n                        \n                            ToolbarItem   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Command\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MenuLabels\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TCR\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Toolbar\n                \n            \n            \n                \n                        Array | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarCustomMenuItem\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdown\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupKeys\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarDropdownGroupValues\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ToolbarItem\n                \n            \n            \n                \n                        string | ToolbarDropdown | ToolbarCustomMenuItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            ACTIVE_MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            bulletList   (src/.../schema.ts)\n                        \n                        \n                            DEFAULT_ICON_HEIGHT   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_ICON_WIDTH   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_LABELS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_PLACEHOLDER   (src/.../placeholder.ts)\n                        \n                        \n                            DEFAULT_TOOLBAR   (src/.../index.ts)\n                        \n                        \n                            defaultConfig   (src/.../ngx-editor.service.ts)\n                        \n                        \n                            DISABLED_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPDOWN_ITEMS   (src/.../menu.ts)\n                        \n                        \n                            DROPDWON_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            DROPWDOWN_OPEN_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            flatDeep   (src/.../flatDeep.ts)\n                        \n                        \n                            getSeperatorDom   (src/.../menu.ts)\n                        \n                        \n                            icons   (src/.../index.ts)\n                        \n                        \n                            isListItem   (src/.../isListItem.ts)\n                        \n                        \n                            isListItemActive   (src/.../isListItemActive.ts)\n                        \n                        \n                            isMarkActive   (src/.../isMarkActive.ts)\n                        \n                        \n                            isNodeActive   (src/.../isNodeActive.ts)\n                        \n                        \n                            listGroup   (src/.../schema.ts)\n                        \n                        \n                            listItem   (src/.../schema.ts)\n                        \n                        \n                            marks   (src/.../schema.ts)\n                        \n                        \n                            menu   (src/.../index.ts)\n                        \n                        \n                            MENU_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            menuItemsMeta   (src/.../meta.ts)\n                        \n                        \n                            NGX_EDITOR_CONFIG_TOKEN   (src/.../ngx-editor.module.ts)\n                        \n                        \n                            nodes   (src/.../schema.ts)\n                        \n                        \n                            orderedList   (src/.../schema.ts)\n                        \n                        \n                            PLACEHOLDER_CLASSNAME   (src/.../placeholder.ts)\n                        \n                        \n                            renderMenu   (src/.../menu.ts)\n                        \n                        \n                            schema   (src/.../schema.ts)\n                        \n                        \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            SEPERATOR_CLASSNAME   (src/.../menu.ts)\n                        \n                        \n                            toggleBlockType   (src/.../toggleBlockType.ts)\n                        \n                        \n                            toggleList   (src/.../toggleList.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/prosemirror/plugins/menu/menu.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIVE_MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${MENU_ITEM_CLASSNAME}--Active`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLED_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor--Disabled'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEMS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDWON_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Dropdown'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPWDOWN_OPEN_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Open`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeperatorDom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): HTMLElement => {\n  const div = document.createElement('div');\n  div.className = SEPERATOR_CLASSNAME;\n  return div;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__MenuItem'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions, editorView: EditorView, menuDom: HTMLElement) => {\n  const updates: any[] = [];\n\n  const toolbar = options.toolbar;\n\n  toolbar.forEach((group: ToolbarItem[], toolbarIndex: number): void => {\n    const isLastMenuGroup = toolbar.length - 1 === toolbarIndex;\n\n    group.forEach((toolbarItem: ToolbarItem, menuIndex: number): void => {\n      const isLastMenuItem = group.length - 1 === menuIndex;\n\n      // render dropdown\n      if (typeof toolbarItem === 'object') {\n        Object.keys(toolbarItem).forEach((dropdownGroup: ToolbarDropdownGroupKeys) => {\n          if (DROPDOWN_ITEMS.has(dropdownGroup)) {\n            const dropdown: ToolbarDropdownGroupValues = toolbarItem[dropdownGroup];\n\n            const dropdownView = new DropDownView(dropdownGroup, dropdown, editorView, options);\n            const rendered = dropdownView.render();\n            updates.push(rendered.updates);\n            menuDom.appendChild(rendered.dom);\n          } else {\n            console.warn('Unkown dropdown group:', dropdownGroup);\n          }\n        });\n      }\n\n      // render Icons\n      if (typeof toolbarItem === 'string') {\n        const menuItem = menuItemsMeta[toolbarItem];\n\n        const labels = options.labels;\n\n        if (menuItem) {\n          const spec: MenuItemViewSpec = {\n            classNames: [\n              MENU_ITEM_CLASSNAME,\n              `${MENU_ITEM_CLASSNAME}--Icon`,\n            ],\n            innerHTML: getIconSvg(menuItem.icon),\n            attrs: {\n              title: labels[menuItem.i18nKey]\n            },\n            activeClass: ACTIVE_MENU_ITEM_CLASSNAME,\n            disabledClass: DISABLED_CLASSNAME\n          };\n\n          const menuItemView = new MenuItemView(menuItem, editorView, spec);\n          const { update, dom } = menuItemView.render();\n\n          menuDom.appendChild(dom);\n          updates.push(update);\n        }\n      }\n\n      if (typeof toolbarItem === 'function') {\n        const { dom, update } = toolbarItem(editorView);\n        menuDom.appendChild(dom);\n        updates.push(update);\n      }\n\n      if (isLastMenuItem && !isLastMenuGroup) {\n        const seperatorDom = getSeperatorDom();\n        menuDom.appendChild(seperatorDom);\n      }\n    });\n  });\n\n  const combinedUpdates = flatDeep(updates, Infinity);\n\n  return {\n    update(state: EditorState) {\n      combinedUpdates.forEach((update: (state: EditorState) => void) => {\n        update(state);\n      });\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_DROPDOWN_ITEM_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${DROPDWON_ITEM_CLASSNAME}--Selected`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEPERATOR_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Seperator'\n                        \n                    \n\n\n            \n        \n\n    src/lib/schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulletList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.bulletList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'block'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.listItem, { content: 'paragraph block*' })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : schemaBasic.marks\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign(\n  {},\n  schemaBasic.nodes,\n  {\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.assign({}, schemaList.orderedList, { content: 'list_item+', group: listGroup })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Schema({\n  marks,\n  nodes\n})\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/icons/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ICON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold,\n  italic,\n  code,\n  ordered_list: orderedList,\n  bullet_list: bulletList\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LABELS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuLabels\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: 'Bold',\n  italics: 'Italics',\n  code: 'Code',\n  ordered_list: 'Ordered List',\n  bullet_list: 'Bullet List',\n  heading: 'Heading'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  toolbar: DEFAULT_TOOLBAR,\n  labels: DEFAULT_LABELS\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TOOLBAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toolbar\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['bold', 'italic'],\n  ['code'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }]\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MenuOptions = DEFAULT_OPTIONS) => {\n  return menuPlugin(options);\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/placeholder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PLACEHOLDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Type Here...'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLACEHOLDER_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NgxEditor__Placeholder'\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  plugins: [],\n  nodeViews: {},\n  schema\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/utils/flatDeep.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            flatDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], d = 1): any[] => {\n  return d > 0\n    ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\n    : arr.slice();\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItem.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, schema: Schema) => {\n  return (\n    type === schema.nodes.list_item ||\n    type === schema.nodes.ordered_list ||\n    type === schema.nodes.bullet_list\n  );\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isListItemActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isListItemActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, ): boolean => {\n  const { $from, $to } = state.selection;\n  const range = $from.blockRange($to, node => {\n    return node.childCount && isListItem(node.firstChild.type, state.schema);\n  });\n\n  if (!range) {\n    return false;\n  }\n\n  return $from.node(range.depth).type === type;\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isMarkActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isMarkActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/helpers/isNodeActive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isNodeActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: EditorState, type: NodeType, attrs = {}): boolean => {\n  const { $from, to } = state.selection;\n  return to \n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/plugins/menu/meta.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuItemsMeta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bold: {\n    key: 'strong',\n    i18nKey: 'bold',\n    icon: 'bold',\n    type: 'mark',\n  },\n  italic: {\n    key: 'em',\n    i18nKey: 'italics',\n    icon: 'italic',\n    type: 'mark',\n  },\n  code: {\n    key: 'code',\n    i18nKey: 'code',\n    icon: 'code',\n    type: 'mark',\n  },\n  ordered_list: {\n    key: 'ordered_list',\n    i18nKey: 'ordered_list',\n    icon: 'ordered_list',\n    type: 'node',\n  },\n  bullet_list: {\n    key: 'bullet_list',\n    i18nKey: 'bullet_list',\n    icon: 'bullet_list',\n    type: 'node',\n  },\n  h1: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 1,\n    },\n    type: 'node'\n  },\n  h2: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 2,\n    },\n    type: 'node'\n  },\n  h3: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 3,\n    },\n    type: 'node'\n  },\n  h4: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 4,\n    },\n    type: 'node'\n  },\n  h5: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 5,\n    },\n    type: 'node'\n  },\n  h6: {\n    key: 'heading',\n    i18nKey: 'heading',\n    attrs: {\n      level: 6,\n    },\n    type: 'node'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/ngx-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITOR_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxEditorConfig')\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleBlockType.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlockType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, toggleType: NodeType, attrs = {}) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isNodeActive(state, type, attrs);\n\n    if (isActive) {\n      return setBlockType(toggleType)(state, dispatch);\n    }\n\n    return setBlockType(type, attrs)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/prosemirror/commands/toggleList.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toggleList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: NodeType, itemType: NodeType) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const isActive = isListItemActive(state, type);\n\n    if (isActive) {\n      return liftListItem(itemType)(state, dispatch);\n    }\n\n    return wrapInList(type)(state, dispatch);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration.html":{"url":"additional-documentation/configuration.html","title":"additional-page - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema, // optional scheama, see https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }] // dropdown\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    }),\n    placholder('Type something here...')\n  ],\n  nodeViews: {} // optional, for example see https://prosemirror.net/examples/footnote/\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ngmodel.html":{"url":"additional-documentation/ngmodel.html","title":"additional-page - NgModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nNgModel\nInput can be a prosemirror document object or undefined or null\nclass AppComponent {\n  jsonDoc = null;\n\n  onChange(doc: object) {\n    this.jsonDoc = doc;\n  }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/history.html":{"url":"additional-documentation/history.html","title":"additional-page - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEnable history support in the editor\nReference\n\nhttps://prosemirror.net/docs/ref/#history\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { undo, redo, history } from 'prosemirror-history';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    history(), // enable history support\n    keymap({\n      // configure shortcuts\n      'Mod-z': undo,\n      'Shift-Mod-z': redo\n    })\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/shortcuts.html":{"url":"additional-documentation/shortcuts.html","title":"additional-page - Shortcuts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nExamples\nList Items\nReference\n\nhttps://prosemirror.net/docs/ref/#keymap\nhttps://prosemirror.net/docs/ref/#schema-list\n\nimport { schema } from 'ngx-editor';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { keymap } from 'prosemirror-keymap';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    })\n  ]\n});Marks\nReference\n\nhttps://prosemirror.net/docs/ref/#commands\nhttps://prosemirror.net/docs/ref/#keymap\n\nimport { schema } from 'ngx-editor';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap } from 'prosemirror-commands';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong), // toggle strong\n      'Mod-i': toggleMark(schema.marks.em), // toggle italics\n      'Mod-`': toggleMark(schema.marks.code) // toggle code\n    }),\n    keymap(baseKeymap)\n  ]\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/html.html":{"url":"additional-documentation/html.html","title":"additional-page - HTML","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWorking with HTML\nGenerate HTML from JSON\nimport { DOMSerializer } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst contentNode = schema.nodeFromJSON(this.jsonDoc);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst html: DocumentFragment = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\nconsole.log(html);Generating JSON from HTML\nimport { DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor';\n\nconst el = document.createElement('div');\nel.innerHTML = htmlString;\n\nthis.jsonDoc = DOMParser.fromSchema(schema).parse(el).toJSON();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/menu-plugin.html":{"url":"additional-documentation/menu-plugin.html","title":"additional-page - Menu Plugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMenu Plugin\nConfiguring the plugin\nimport { menu, placeholder } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [\n    menu({\n      // default options (Optional)\n      toolbar: [\n        ['bold', 'italic', 'code'], // inline icons\n        ['ordered_list', 'bullet_list'],\n        [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }], // dropdown\n        [codemirror] // custom menu, example below\n      ],\n      labels: {\n        bold: 'Bold',\n        italics: 'Italics',\n        code: 'Code',\n        ordered_list: 'Ordered List',\n        bullet_list: 'Bullet List',\n        heading: 'Heading'\n      }\n    })\n  ]\n});Custom Menu\nCustom menu should return an update function (invoked for every transcation) and dom html-element (to mount in the menubar).\nExample:\nimport { EditorState } from 'prosemirror-state';\nimport { isNodeActive, toggleBlockType, ToolbarCustomMenuItem } from 'ngx-editor';\n\nimport schema from '../../schema';\n\nconst codeMirror: ToolbarCustomMenuItem = (editorView) => {\n  const dom: HTMLElement = document.createElement('div');\n  dom.innerHTML = 'CodeMirror';\n\n  dom.classList.add('NgxEditor__MenuItem');\n  dom.classList.add('NgxEditor__MenuItem--Text');\n\n  // you must add `code_block` to schema first\n  // see https://prosemirror.net/examples/schema/\n  // https://sibiraj.dev/ngx-editor/additional-documentation/schema.html\n  const type = schema.nodes.code_block;\n\n  const command = toggleBlockType(type, schema.nodes.paragraph);\n\n  dom.addEventListener('mousedown', (e: MouseEvent) => {\n    e.preventDefault();\n\n    // don't execute if not left click\n    if (e.buttons !== 1) {\n      return;\n    }\n\n    command(editorView.state, editorView.dispatch);\n  });\n\n  const update = (state: EditorState): void => {\n    const isActive = isNodeActive(state, type);\n\n    const canExecute = command(state, null);\n\n    dom.classList.toggle(`NgxEditor__MenuItem--Active`, isActive);\n    dom.classList.toggle(`NgxEditor--Disabled`, !canExecute);\n  };\n\n  return {\n    dom,\n    update\n  };\n};\n\nexport default codeMirror;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/schema.html":{"url":"additional-documentation/schema.html","title":"additional-page - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfiguration\nThe Configuration can be provided using config property\nRef: https://prosemirror.net/examples/schema/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo\nUsage\nimport { menu, placeholder, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  schema\n});Create custom schema\nimport { nodes as basicNodes, marks as basicMarks } from 'ngx-editor';\nimport { Schema, Node as ProsemirrorNode, NodeSpec } from 'prosemirror-model';\n\nconst codeBlock: NodeSpec = {\n  group: 'block',\n  attrs: {\n    text: { default: '' },\n    language: { default: 'text/javascript' }\n  },\n  parseDOM: [\n    {\n      tag: 'pre',\n      getAttrs: (dom: HTMLElement) => {\n        return {\n          text: dom.textContent,\n          language: dom.getAttribute('data-language') || 'text/plain'\n        };\n      }\n    }\n  ],\n  toDOM(node: ProsemirrorNode) {\n    return ['pre', { 'data-language': node.attrs.language }, node.attrs.text];\n  }\n};\n\nconst nodes = Object.assign({}, basicNodes, {\n  code_mirror: codeBlock\n});\n\nconst schema = new Schema({\n  nodes,\n  marks: basicMarks\n});\n\nexport default schema;\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/inline-code-editor.html":{"url":"additional-documentation/inline-code-editor.html","title":"additional-page - Inline Code Editor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInline code editor\nRef: https://prosemirror.net/examples/codemirror/\nExample: https://github.com/sibiraj-s/ngx-editor/tree/master/demo for examples\nimport { exitCode } from 'prosemirror-commands';\nimport { undo, redo } from 'prosemirror-history';\nimport { TextSelection, Selection } from 'prosemirror-state';\nimport { Node as ProsemirrorNode } from 'prosemirror-model';\nimport { EditorView } from 'prosemirror-view';\n\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nimport schema from '../schema';\n\nfunction computeChange(oldVal: string, newVal: string) {\n  if (oldVal === newVal) {\n    return null;\n  }\n  let start = 0;\n  let oldEnd = oldVal.length;\n  let newEnd = newVal.length;\n  while (start  start && newEnd > start && oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)) {\n    oldEnd--;\n    newEnd--;\n  }\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) };\n}\n\ntype GetPos = () => number;\n\nclass CodeMirrorView {\n  node: ProsemirrorNode;\n  getPos: GetPos;\n  incomingChanges: boolean;\n\n  cm: CodeMirror;\n\n  view: EditorView;\n  dom: HTMLElement;\n  updating: boolean;\n\n  constructor(node: ProsemirrorNode, view: EditorView, getPos: GetPos) {\n    // Store for later\n    this.node = node;\n    this.view = view;\n    this.getPos = getPos;\n    this.incomingChanges = false;\n\n    // Create a CodeMirror instance\n    this.cm = new CodeMirror(null, {\n      value: this.node.textContent,\n      lineNumbers: true,\n      extraKeys: this.codeMirrorKeymap()\n    });\n\n    // The editor's outer node is our DOM representation\n    this.dom = this.cm.getWrapperElement();\n    // CodeMirror needs to be in the DOM to properly initialize, so\n    // schedule it to update itself\n    setTimeout(() => this.cm.refresh(), 20);\n\n    // This flag is used to avoid an update loop between the outer and\n    // inner editor\n    this.updating = false;\n    // Track whether changes are have been made but not yet propagated\n    this.cm.on('beforeChange', () => (this.incomingChanges = true));\n    // Propagate updates from the code editor to ProseMirror\n    this.cm.on('cursorActivity', () => {\n      if (!this.updating && !this.incomingChanges) {\n        this.forwardSelection();\n      }\n    });\n\n    this.cm.on('changes', () => {\n      if (!this.updating) {\n        this.valueChanged();\n        this.forwardSelection();\n      }\n      this.incomingChanges = false;\n    });\n\n    this.cm.on('focus', () => this.forwardSelection());\n  }\n\n  forwardSelection() {\n    if (!this.cm.hasFocus()) {\n      return;\n    }\n\n    const state = this.view.state;\n    const selection = this.asProseMirrorSelection(state.doc);\n\n    if (!selection.eq(state.selection)) {\n      this.view.dispatch(state.tr.setSelection(selection));\n    }\n  }\n\n  asProseMirrorSelection(doc: ProsemirrorNode) {\n    const offset = this.getPos() + 1;\n    const anchor = this.cm.indexFromPos(this.cm.getCursor('anchor')) + offset;\n    const head = this.cm.indexFromPos(this.cm.getCursor('head')) + offset;\n    return TextSelection.create(doc, anchor, head);\n  }\n\n  setSelection(anchor: number, head: number) {\n    this.cm.focus();\n    this.updating = true;\n    this.cm.setSelection(this.cm.posFromIndex(anchor), this.cm.posFromIndex(head));\n    this.updating = false;\n  }\n\n  valueChanged() {\n    const change = computeChange(this.node.textContent, this.cm.getValue());\n    if (change) {\n      const start = this.getPos() + 1;\n      const tr = this.view.state.tr.replaceWith(\n        start + change.from,\n        start + change.to,\n        change.text ? schema.text(change.text) : null\n      );\n      this.view.dispatch(tr);\n    }\n  }\n  codeMirrorKeymap() {\n    const view = this.view;\n    const mod = /Mac/.test(navigator.platform) ? 'Cmd' : 'Ctrl';\n    return CodeMirror.normalizeKeyMap({\n      Up: () => this.maybeEscape('line', -1),\n      Left: () => this.maybeEscape('char', -1),\n      Down: () => this.maybeEscape('line', 1),\n      Right: () => this.maybeEscape('char', 1),\n      [`${mod}-Z`]: () => undo(view.state, view.dispatch),\n      [`Shift-${mod}-Z`]: () => redo(view.state, view.dispatch),\n      [`${mod}-Y`]: () => redo(view.state, view.dispatch),\n      'Ctrl-Enter': () => {\n        if (exitCode(view.state, view.dispatch)) {\n          view.focus();\n        }\n      }\n    });\n  }\n\n  maybeEscape(unit: string, dir: number) {\n    const pos = this.cm.getCursor();\n    if (\n      this.cm.somethingSelected() ||\n      pos.line !== (dir Usage\nimport { NgxEditorModule } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  nodeViews: {\n    code_block: (node: ProsemirrorNode, view: EditorView, getPos: () => number) => {\n      return new CodeBlockView(node, view, getPos);\n    }\n  }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/input-rules.html":{"url":"additional-documentation/input-rules.html","title":"additional-page - Input Rules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInput rules\nThis module defines a plugin for attaching input rules to an editor, which can react to or transform text typed by the user.\nDoc: https://prosemirror.net/docs/ref/#inputrules\nSource: https://github.com/ProseMirror/prosemirror-example-setup/\nRules\nimport {\n  inputRules,\n  wrappingInputRule,\n  textblockTypeInputRule,\n  smartQuotes,\n  emDash,\n  ellipsis,\n  InputRule,\n} from 'prosemirror-inputrules';\nimport { NodeType, Schema } from 'prosemirror-model';\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nexport function blockQuoteRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nexport function orderedListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    (match) => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1],\n  );\n}\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nexport function bulletListRule(nodeType: NodeType): InputRule {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n}\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nexport function codeBlockRule(nodeType: NodeType): InputRule {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nexport function headingRule(nodeType: NodeType, maxLevel: number): InputRule {\n  return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, (match) => ({\n    level: match[1].length,\n  }));\n}\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nexport function buildInputRules(schema: Schema) {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n}Config\nimport { NgxEditorModule, schema } from 'ngx-editor';\n\nNgxEditorModule.forRoot({\n  plugins: [buildInputRules(schema)],\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
